

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr 11 04:43:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   102                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1,inline
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   128                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   129                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   130                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   131  0000                     
   132                           ; Version 2.05
   133                           ; Generated 20/12/2018 GMT
   134                           ; 
   135                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   136                           ; All rights reserved.
   137                           ; 
   138                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   139                           ; 
   140                           ; Redistribution and use in source and binary forms, with or without modification, are
   141                           ; permitted provided that the following conditions are met:
   142                           ; 
   143                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   144                           ;        conditions and the following disclaimer.
   145                           ; 
   146                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   147                           ;        of conditions and the following disclaimer in the documentation and/or other
   148                           ;        materials provided with the distribution.
   149                           ; 
   150                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   151                           ;        software without specific prior written permission.
   152                           ; 
   153                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   154                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   155                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   156                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   157                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   158                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   159                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   160                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   161                           ; 
   162                           ; 
   163                           ; Code-generator required, PIC18F4620 Definitions
   164                           ; 
   165                           ; SFR Addresses
   166  0000                     
   167                           	psect	idataCOMRAM
   168  00557A                     __pidataCOMRAM:
   169                           	opt callstack 0
   170                           
   171                           ;initializer for _happynewyear
   172  00557A  20                 	db	32
   173  00557B  20                 	db	32
   174  00557C  20                 	db	32
   175  00557D  03                 	db	3
   176  00557E  03                 	db	3
   177  00557F  19                 	db	25
   178  005580  04                 	db	4
   179                           
   180                           ;initializer for _wety_deg
   181  005581  0258               	dw	600
   182                           
   183                           ;initializer for _start_time
   184  005583  30                 	db	48
   185  005584  30                 	db	48
   186                           
   187                           	psect	idataBANK0
   188  0054A4                     __pidataBANK0:
   189                           	opt callstack 0
   190                           
   191                           ;initializer for _times
   192  0054A4  30                 	db	48
   193  0054A5  30                 	db	48
   194  0054A6  30                 	db	48
   195  0054A7  30                 	db	48
   196  0054A8  30                 	db	48
   197  0054A9  30                 	db	48
   198  0054AA  30                 	db	48
   199  0054AB  30                 	db	48
   200                           
   201                           ;initializer for _time
   202  0054AC  45                 	db	69
   203  0054AD  59                 	db	89
   204  0054AE  23                 	db	35
   205  0054AF  00                 	db	0
   206  0054B0  31                 	db	49
   207  0054B1  12                 	db	18
   208  0054B2  18                 	db	24
   209                           
   210                           ;initializer for _operation_time
   211  0054B3  01                 	db	1
   212  0054B4  02                 	db	2
   213  0054B5  03                 	db	3
   214                           
   215                           ;initializer for _ninty_deg
   216  0054B6  0104               	dw	260
   217                           
   218                           ;initializer for _clear_waiter
   219  0054B8  0003               	dw	3
   220                           
   221                           ;initializer for _completion_bool
   222  0054BA  01                 	db	1
   223                           
   224                           	psect	mediumconst
   225  00FD0C                     __pmediumconst:
   226                           	opt callstack 0
   227  00FD0C  00                 	db	0
   228  00FD0D                     _keys:
   229                           	opt callstack 0
   230  00FD0D  31                 	db	49
   231  00FD0E  32                 	db	50
   232  00FD0F  33                 	db	51
   233  00FD10  41                 	db	65
   234  00FD11  34                 	db	52
   235  00FD12  35                 	db	53
   236  00FD13  36                 	db	54
   237  00FD14  42                 	db	66
   238  00FD15  37                 	db	55
   239  00FD16  38                 	db	56
   240  00FD17  39                 	db	57
   241  00FD18  43                 	db	67
   242  00FD19  2A                 	db	42
   243  00FD1A  30                 	db	48
   244  00FD1B  23                 	db	35
   245  00FD1C  44                 	db	68
   246  00FD1D  00                 	db	0
   247  00FD1E                     __end_of_keys:
   248                           	opt callstack 0
   249  00FD1E                     _dpowers:
   250                           	opt callstack 0
   251  00FD1E  0001               	dw	1
   252  00FD20  000A               	dw	10
   253  00FD22  0064               	dw	100
   254  00FD24  03E8               	dw	1000
   255  00FD26  2710               	dw	10000
   256  00FD28                     __end_of_dpowers:
   257                           	opt callstack 0
   258  00FD28  0000               	dw	0
   259  00FD2A  4170               	dw	16752
   260  00FD2C                     __end_of_whole_distance:
   261                           	opt callstack 0
   262  00FD2C  0000               	dw	0
   263  00FD2E  3FC0               	dw	16320
   264  00FD30                     __end_of_half_lane_width:
   265                           	opt callstack 0
   266  00FD30  CCCD               	dw	52429
   267  00FD32  3E4C               	dw	15948
   268  00FD34                     __end_of_mc_L:
   269                           	opt callstack 0
   270  00FD34  999A               	dw	39322
   271  00FD36  3FB9               	dw	16313
   272  00FD38                     __end_of_car_length:
   273                           	opt callstack 0
   274  00FD38                     _LCD_LINE4_ADDR:
   275                           	opt callstack 0
   276  00FD38  50                 	db	80
   277  00FD39                     __end_of_LCD_LINE4_ADDR:
   278                           	opt callstack 0
   279  00FD39                     _LCD_LINE3_ADDR:
   280                           	opt callstack 0
   281  00FD39  10                 	db	16
   282  00FD3A                     __end_of_LCD_LINE3_ADDR:
   283                           	opt callstack 0
   284  00FD3A                     _LCD_LINE2_ADDR:
   285                           	opt callstack 0
   286  00FD3A  40                 	db	64
   287  00FD3B                     __end_of_LCD_LINE2_ADDR:
   288                           	opt callstack 0
   289  00FD3B                     _LCD_LINE1_ADDR:
   290                           	opt callstack 0
   291  00FD3B  00                 	db	0
   292  00FD3C                     __end_of_LCD_LINE1_ADDR:
   293                           	opt callstack 0
   294  00FD3C                     _LCD_SIZE_VERT:
   295                           	opt callstack 0
   296  00FD3C  04                 	db	4
   297  00FD3D                     __end_of_LCD_SIZE_VERT:
   298                           	opt callstack 0
   299  00FD3D                     _LCD_SIZE_HORZ:
   300                           	opt callstack 0
   301  00FD3D  10                 	db	16
   302  00FD3E                     __end_of_LCD_SIZE_HORZ:
   303                           	opt callstack 0
   304  00FD3E  CCCD               	dw	52429
   305  00FD40  3DCC               	dw	15820
   306  00FD42                     __end_of_lc_R:
   307                           	opt callstack 0
   308  00FD42  6666               	dw	26214
   309  00FD44  3EE6               	dw	16102
   310  00FD46                     __end_of_car_width:
   311                           	opt callstack 0
   312  0000                     _PORTB	set	3969
   313  0000                     _EECON2	set	4007
   314  0000                     _EECON1bits	set	4006
   315  0000                     _EEDATA	set	4008
   316  0000                     _EEADR	set	4009
   317  0000                     _EEADRH	set	4010
   318  0000                     _LATCbits	set	3979
   319  0000                     _PORTEbits	set	3972
   320  0000                     _SSPBUF	set	4041
   321  0000                     _SSPCON2bits	set	4037
   322  0000                     _SSPCON1	set	4038
   323  0000                     _SSPADD	set	4040
   324  0000                     _SSPCON1bits	set	4038
   325  0000                     _SSPCON2	set	4037
   326  0000                     _SSPSTAT	set	4039
   327  0000                     _INTCONbits	set	4082
   328  0000                     _ADCON1	set	4033
   329  0000                     _LATD	set	3980
   330  0000                     _LATC	set	3979
   331  0000                     _TRISEbits	set	3990
   332  0000                     _LATAbits	set	3977
   333  0000                     _TRISAbits	set	3986
   334  0000                     _TRISCbits	set	3988
   335  0000                     _TRISBbits	set	3987
   336  0000                     _TRISD	set	3989
   337  0000                     _LATDbits	set	3980
   338  0000                     _PORTAbits	set	3968
   339  0000                     _PORTBbits	set	3969
   340  0000                     _INT1IF	set	32640
   341  0000                     _GIE	set	32663
   342  0000                     _INT0IF	set	32657
   343  0000                     _INT1IE	set	32643
   344  0000                     _INTEDG0	set	32654
   345  0000                     _INT0IE	set	32660
   346  00FD46                     STR_43:
   347  00FD46  54                 	db	84	;'T'
   348  00FD47  68                 	db	104	;'h'
   349  00FD48  61                 	db	97	;'a'
   350  00FD49  6E                 	db	110	;'n'
   351  00FD4A  6B                 	db	107	;'k'
   352  00FD4B  73                 	db	115	;'s'
   353  00FD4C  20                 	db	32
   354  00FD4D  66                 	db	102	;'f'
   355  00FD4E  6F                 	db	111	;'o'
   356  00FD4F  72                 	db	114	;'r'
   357  00FD50  20                 	db	32
   358  00FD51  75                 	db	117	;'u'
   359  00FD52  73                 	db	115	;'s'
   360  00FD53  69                 	db	105	;'i'
   361  00FD54  6E                 	db	110	;'n'
   362  00FD55  67                 	db	103	;'g'
   363  00FD56  20                 	db	32
   364  00FD57  00                 	db	0
   365  00FD58                     STR_8:
   366  00FD58  4F                 	db	79	;'O'
   367  00FD59  6F                 	db	111	;'o'
   368  00FD5A  70                 	db	112	;'p'
   369  00FD5B  73                 	db	115	;'s'
   370  00FD5C  2E                 	db	46
   371  00FD5D  20                 	db	32
   372  00FD5E  49                 	db	73	;'I'
   373  00FD5F  20                 	db	32
   374  00FD60  64                 	db	100	;'d'
   375  00FD61  6F                 	db	111	;'o'
   376  00FD62  6E                 	db	110	;'n'
   377  00FD63  27                 	db	39
   378  00FD64  74                 	db	116	;'t'
   379  00FD65  20                 	db	32
   380  00FD66  67                 	db	103	;'g'
   381  00FD67  65                 	db	101	;'e'
   382  00FD68  74                 	db	116	;'t'
   383  00FD69  00                 	db	0
   384  00FD6A                     STR_38:
   385  00FD6A  53                 	db	83	;'S'
   386  00FD6B  74                 	db	116	;'t'
   387  00FD6C  61                 	db	97	;'a'
   388  00FD6D  72                 	db	114	;'r'
   389  00FD6E  74                 	db	116	;'t'
   390  00FD6F  20                 	db	32
   391  00FD70  4C                 	db	76	;'L'
   392  00FD71  69                 	db	105	;'i'
   393  00FD72  6E                 	db	110	;'n'
   394  00FD73  65                 	db	101	;'e'
   395  00FD74  3A                 	db	58	;':'
   396  00FD75  20                 	db	32
   397  00FD76  28                 	db	40
   398  00FD77  63                 	db	99	;'c'
   399  00FD78  6D                 	db	109	;'m'
   400  00FD79  29                 	db	41
   401  00FD7A  00                 	db	0
   402  00FD7B                     STR_56:
   403  00FD7B  50                 	db	80	;'P'
   404  00FD7C  61                 	db	97	;'a'
   405  00FD7D  73                 	db	115	;'s'
   406  00FD7E  74                 	db	116	;'t'
   407  00FD7F  20                 	db	32
   408  00FD80  4F                 	db	79	;'O'
   409  00FD81  70                 	db	112	;'p'
   410  00FD82  65                 	db	101	;'e'
   411  00FD83  72                 	db	114	;'r'
   412  00FD84  61                 	db	97	;'a'
   413  00FD85  74                 	db	116	;'t'
   414  00FD86  69                 	db	105	;'i'
   415  00FD87  6F                 	db	111	;'o'
   416  00FD88  6E                 	db	110	;'n'
   417  00FD89  73                 	db	115	;'s'
   418  00FD8A  3A                 	db	58	;':'
   419  00FD8B  00                 	db	0
   420  00FD8C                     STR_28:
   421  00FD8C  4E                 	db	78	;'N'
   422  00FD8D  75                 	db	117	;'u'
   423  00FD8E  6D                 	db	109	;'m'
   424  00FD8F  62                 	db	98	;'b'
   425  00FD90  65                 	db	101	;'e'
   426  00FD91  72                 	db	114	;'r'
   427  00FD92  20                 	db	32
   428  00FD93  6F                 	db	111	;'o'
   429  00FD94  66                 	db	102	;'f'
   430  00FD95  20                 	db	32
   431  00FD96  43                 	db	67	;'C'
   432  00FD97  72                 	db	114	;'r'
   433  00FD98  61                 	db	97	;'a'
   434  00FD99  63                 	db	99	;'c'
   435  00FD9A  6B                 	db	107	;'k'
   436  00FD9B  73                 	db	115	;'s'
   437  00FD9C  00                 	db	0
   438  00FD9D                     STR_10:
   439  00FD9D  52                 	db	82	;'R'
   440  00FD9E  65                 	db	101	;'e'
   441  00FD9F  76                 	db	118	;'v'
   442  00FDA0  69                 	db	105	;'i'
   443  00FDA1  65                 	db	101	;'e'
   444  00FDA2  77                 	db	119	;'w'
   445  00FDA3  20                 	db	32
   446  00FDA4  74                 	db	116	;'t'
   447  00FDA5  68                 	db	104	;'h'
   448  00FDA6  65                 	db	101	;'e'
   449  00FDA7  20                 	db	32
   450  00FDA8  4D                 	db	77	;'M'
   451  00FDA9  65                 	db	101	;'e'
   452  00FDAA  6E                 	db	110	;'n'
   453  00FDAB  75                 	db	117	;'u'
   454  00FDAC  2E                 	db	46
   455  00FDAD  00                 	db	0
   456  00FDAE                     STR_2:
   457  00FDAE  74                 	db	116	;'t'
   458  00FDAF  68                 	db	104	;'h'
   459  00FDB0  65                 	db	101	;'e'
   460  00FDB1  20                 	db	32
   461  00FDB2  4D                 	db	77	;'M'
   462  00FDB3  61                 	db	97	;'a'
   463  00FDB4  69                 	db	105	;'i'
   464  00FDB5  6E                 	db	110	;'n'
   465  00FDB6  20                 	db	32
   466  00FDB7  4D                 	db	77	;'M'
   467  00FDB8  65                 	db	101	;'e'
   468  00FDB9  6E                 	db	110	;'n'
   469  00FDBA  75                 	db	117	;'u'
   470  00FDBB  2E                 	db	46
   471  00FDBC  2E                 	db	46
   472  00FDBD  2E                 	db	46
   473  00FDBE  00                 	db	0
   474  00FDBF                     STR_18:
   475  00FDBF  4F                 	db	79	;'O'
   476  00FDC0  70                 	db	112	;'p'
   477  00FDC1  65                 	db	101	;'e'
   478  00FDC2  72                 	db	114	;'r'
   479  00FDC3  61                 	db	97	;'a'
   480  00FDC4  74                 	db	116	;'t'
   481  00FDC5  69                 	db	105	;'i'
   482  00FDC6  6F                 	db	111	;'o'
   483  00FDC7  6E                 	db	110	;'n'
   484  00FDC8  20                 	db	32
   485  00FDC9  54                 	db	84	;'T'
   486  00FDCA  69                 	db	105	;'i'
   487  00FDCB  6D                 	db	109	;'m'
   488  00FDCC  65                 	db	101	;'e'
   489  00FDCD  3A                 	db	58	;':'
   490  00FDCE  00                 	db	0
   491  00FDCF                     STR_36:
   492  00FDCF  48                 	db	72	;'H'
   493  00FDD0  69                 	db	105	;'i'
   494  00FDD1  73                 	db	115	;'s'
   495  00FDD2  74                 	db	116	;'t'
   496  00FDD3  6F                 	db	111	;'o'
   497  00FDD4  72                 	db	114	;'r'
   498  00FDD5  79                 	db	121	;'y'
   499  00FDD6  20                 	db	32
   500  00FDD7  43                 	db	67	;'C'
   501  00FDD8  6C                 	db	108	;'l'
   502  00FDD9  65                 	db	101	;'e'
   503  00FDDA  61                 	db	97	;'a'
   504  00FDDB  72                 	db	114	;'r'
   505  00FDDC  65                 	db	101	;'e'
   506  00FDDD  64                 	db	100	;'d'
   507  00FDDE  00                 	db	0
   508  00FDDF                     STR_72:
   509  00FDDF  43                 	db	67	;'C'
   510  00FDE0  72                 	db	114	;'r'
   511  00FDE1  61                 	db	97	;'a'
   512  00FDE2  63                 	db	99	;'c'
   513  00FDE3  6B                 	db	107	;'k'
   514  00FDE4  73                 	db	115	;'s'
   515  00FDE5  20                 	db	32
   516  00FDE6  44                 	db	68	;'D'
   517  00FDE7  65                 	db	101	;'e'
   518  00FDE8  74                 	db	116	;'t'
   519  00FDE9  65                 	db	101	;'e'
   520  00FDEA  63                 	db	99	;'c'
   521  00FDEB  74                 	db	116	;'t'
   522  00FDEC  65                 	db	101	;'e'
   523  00FDED  64                 	db	100	;'d'
   524  00FDEE  00                 	db	0
   525  00FDEF                     STR_25:
   526  00FDEF  4E                 	db	78	;'N'
   527  00FDF0  75                 	db	117	;'u'
   528  00FDF1  6D                 	db	109	;'m'
   529  00FDF2  62                 	db	98	;'b'
   530  00FDF3  65                 	db	101	;'e'
   531  00FDF4  72                 	db	114	;'r'
   532  00FDF5  20                 	db	32
   533  00FDF6  6F                 	db	111	;'o'
   534  00FDF7  66                 	db	102	;'f'
   535  00FDF8  20                 	db	32
   536  00FDF9  48                 	db	72	;'H'
   537  00FDFA  6F                 	db	111	;'o'
   538  00FDFB  6C                 	db	108	;'l'
   539  00FDFC  65                 	db	101	;'e'
   540  00FDFD  73                 	db	115	;'s'
   541  00FDFE  00                 	db	0
   542  00FDFF                     STR_22:
   543  00FDFF  4E                 	db	78	;'N'
   544  00FE00  75                 	db	117	;'u'
   545  00FE01  6D                 	db	109	;'m'
   546  00FE02  62                 	db	98	;'b'
   547  00FE03  65                 	db	101	;'e'
   548  00FE04  72                 	db	114	;'r'
   549  00FE05  20                 	db	32
   550  00FE06  6F                 	db	111	;'o'
   551  00FE07  66                 	db	102	;'f'
   552  00FE08  20                 	db	32
   553  00FE09  43                 	db	67	;'C'
   554  00FE0A  6F                 	db	111	;'o'
   555  00FE0B  6E                 	db	110	;'n'
   556  00FE0C  65                 	db	101	;'e'
   557  00FE0D  73                 	db	115	;'s'
   558  00FE0E  00                 	db	0
   559  00FE0F                     STR_48:
   560  00FE0F  25                 	db	37
   561  00FE10  30                 	db	48	;'0'
   562  00FE11  32                 	db	50	;'2'
   563  00FE12  64                 	db	100	;'d'
   564  00FE13  2D                 	db	45
   565  00FE14  25                 	db	37
   566  00FE15  30                 	db	48	;'0'
   567  00FE16  32                 	db	50	;'2'
   568  00FE17  64                 	db	100	;'d'
   569  00FE18  2D                 	db	45
   570  00FE19  25                 	db	37
   571  00FE1A  30                 	db	48	;'0'
   572  00FE1B  32                 	db	50	;'2'
   573  00FE1C  64                 	db	100	;'d'
   574  00FE1D  00                 	db	0
   575  00FE1E                     STR_50:
   576  00FE1E  25                 	db	37
   577  00FE1F  30                 	db	48	;'0'
   578  00FE20  32                 	db	50	;'2'
   579  00FE21  64                 	db	100	;'d'
   580  00FE22  3A                 	db	58	;':'
   581  00FE23  25                 	db	37
   582  00FE24  30                 	db	48	;'0'
   583  00FE25  32                 	db	50	;'2'
   584  00FE26  64                 	db	100	;'d'
   585  00FE27  3A                 	db	58	;':'
   586  00FE28  25                 	db	37
   587  00FE29  30                 	db	48	;'0'
   588  00FE2A  32                 	db	50	;'2'
   589  00FE2B  64                 	db	100	;'d'
   590  00FE2C  00                 	db	0
   591  00FE2D                     STR_68:
   592  00FE2D  48                 	db	72	;'H'
   593  00FE2E  6F                 	db	111	;'o'
   594  00FE2F  6C                 	db	108	;'l'
   595  00FE30  65                 	db	101	;'e'
   596  00FE31  73                 	db	115	;'s'
   597  00FE32  20                 	db	32
   598  00FE33  44                 	db	68	;'D'
   599  00FE34  65                 	db	101	;'e'
   600  00FE35  74                 	db	116	;'t'
   601  00FE36  65                 	db	101	;'e'
   602  00FE37  63                 	db	99	;'c'
   603  00FE38  74                 	db	116	;'t'
   604  00FE39  65                 	db	101	;'e'
   605  00FE3A  64                 	db	100	;'d'
   606  00FE3B  00                 	db	0
   607  00FE3C                     STR_64:
   608  00FE3C  43                 	db	67	;'C'
   609  00FE3D  6F                 	db	111	;'o'
   610  00FE3E  6E                 	db	110	;'n'
   611  00FE3F  65                 	db	101	;'e'
   612  00FE40  73                 	db	115	;'s'
   613  00FE41  20                 	db	32
   614  00FE42  44                 	db	68	;'D'
   615  00FE43  65                 	db	101	;'e'
   616  00FE44  70                 	db	112	;'p'
   617  00FE45  6C                 	db	108	;'l'
   618  00FE46  6F                 	db	111	;'o'
   619  00FE47  79                 	db	121	;'y'
   620  00FE48  65                 	db	101	;'e'
   621  00FE49  64                 	db	100	;'d'
   622  00FE4A  00                 	db	0
   623  00FE4B                     STR_61:
   624  00FE4B  4F                 	db	79	;'O'
   625  00FE4C  70                 	db	112	;'p'
   626  00FE4D  65                 	db	101	;'e'
   627  00FE4E  72                 	db	114	;'r'
   628  00FE4F  61                 	db	97	;'a'
   629  00FE50  74                 	db	116	;'t'
   630  00FE51  69                 	db	105	;'i'
   631  00FE52  6F                 	db	111	;'o'
   632  00FE53  6E                 	db	110	;'n'
   633  00FE54  20                 	db	32
   634  00FE55  54                 	db	84	;'T'
   635  00FE56  69                 	db	105	;'i'
   636  00FE57  6D                 	db	109	;'m'
   637  00FE58  65                 	db	101	;'e'
   638  00FE59  00                 	db	0
   639  00FE5A                     STR_3:
   640  00FE5A  65                 	db	101	;'e'
   641  00FE5B  78                 	db	120	;'x'
   642  00FE5C  69                 	db	105	;'i'
   643  00FE5D  74                 	db	116	;'t'
   644  00FE5E  20                 	db	32
   645  00FE5F  69                 	db	105	;'i'
   646  00FE60  6E                 	db	110	;'n'
   647  00FE61  20                 	db	32
   648  00FE62  25                 	db	37
   649  00FE63  64                 	db	100	;'d'
   650  00FE64  20                 	db	32
   651  00FE65  73                 	db	115	;'s'
   652  00FE66  65                 	db	101	;'e'
   653  00FE67  63                 	db	99	;'c'
   654  00FE68  00                 	db	0
   655  00FE69                     STR_59:
   656  00FE69  43                 	db	67	;'C'
   657  00FE6A  68                 	db	104	;'h'
   658  00FE6B  6F                 	db	111	;'o'
   659  00FE6C  6F                 	db	111	;'o'
   660  00FE6D  73                 	db	115	;'s'
   661  00FE6E  65                 	db	101	;'e'
   662  00FE6F  20                 	db	32
   663  00FE70  31                 	db	49	;'1'
   664  00FE71  20                 	db	32
   665  00FE72  2D                 	db	45
   666  00FE73  20                 	db	32
   667  00FE74  25                 	db	37
   668  00FE75  64                 	db	100	;'d'
   669  00FE76  00                 	db	0
   670  00FE77                     STR_37:
   671  00FE77  44                 	db	68	;'D'
   672  00FE78  69                 	db	105	;'i'
   673  00FE79  73                 	db	115	;'s'
   674  00FE7A  74                 	db	116	;'t'
   675  00FE7B  61                 	db	97	;'a'
   676  00FE7C  6E                 	db	110	;'n'
   677  00FE7D  63                 	db	99	;'c'
   678  00FE7E  65                 	db	101	;'e'
   679  00FE7F  20                 	db	32
   680  00FE80  66                 	db	102	;'f'
   681  00FE81  72                 	db	114	;'r'
   682  00FE82  6F                 	db	111	;'o'
   683  00FE83  6D                 	db	109	;'m'
   684  00FE84  00                 	db	0
   685  00FE85                     STR_55:
   686  00FE85  43                 	db	67	;'C'
   687  00FE86  6C                 	db	108	;'l'
   688  00FE87  65                 	db	101	;'e'
   689  00FE88  61                 	db	97	;'a'
   690  00FE89  72                 	db	114	;'r'
   691  00FE8A  20                 	db	32
   692  00FE8B  48                 	db	72	;'H'
   693  00FE8C  69                 	db	105	;'i'
   694  00FE8D  73                 	db	115	;'s'
   695  00FE8E  74                 	db	116	;'t'
   696  00FE8F  6F                 	db	111	;'o'
   697  00FE90  72                 	db	114	;'r'
   698  00FE91  79                 	db	121	;'y'
   699  00FE92  00                 	db	0
   700  00FE93                     STR_67:
   701  00FE93  4C                 	db	76	;'L'
   702  00FE94  6F                 	db	111	;'o'
   703  00FE95  63                 	db	99	;'c'
   704  00FE96  61                 	db	97	;'a'
   705  00FE97  74                 	db	116	;'t'
   706  00FE98  69                 	db	105	;'i'
   707  00FE99  6F                 	db	111	;'o'
   708  00FE9A  6E                 	db	110	;'n'
   709  00FE9B  20                 	db	32
   710  00FE9C  6F                 	db	111	;'o'
   711  00FE9D  66                 	db	102	;'f'
   712  00FE9E  20                 	db	32
   713  00FE9F  00                 	db	0
   714  00FEA0                     STR_44:
   715  00FEA0  54                 	db	84	;'T'
   716  00FEA1  72                 	db	114	;'r'
   717  00FEA2  61                 	db	97	;'a'
   718  00FEA3  66                 	db	102	;'f'
   719  00FEA4  66                 	db	102	;'f'
   720  00FEA5  69                 	db	105	;'i'
   721  00FEA6  63                 	db	99	;'c'
   722  00FEA7  20                 	db	32
   723  00FEA8  43                 	db	67	;'C'
   724  00FEA9  6F                 	db	111	;'o'
   725  00FEAA  6E                 	db	110	;'n'
   726  00FEAB  65                 	db	101	;'e'
   727  00FEAC  00                 	db	0
   728  00FEAD                     STR_9:
   729  00FEAD  69                 	db	105	;'i'
   730  00FEAE  74                 	db	116	;'t'
   731  00FEAF  2E                 	db	46
   732  00FEB0  2E                 	db	46
   733  00FEB1  2E                 	db	46
   734  00FEB2  20                 	db	32
   735  00FEB3  50                 	db	80	;'P'
   736  00FEB4  6C                 	db	108	;'l'
   737  00FEB5  65                 	db	101	;'e'
   738  00FEB6  61                 	db	97	;'a'
   739  00FEB7  73                 	db	115	;'s'
   740  00FEB8  65                 	db	101	;'e'
   741  00FEB9  00                 	db	0
   742  00FEBA                     STR_6:
   743  00FEBA  63                 	db	99	;'c'
   744  00FEBB  6F                 	db	111	;'o'
   745  00FEBC  6E                 	db	110	;'n'
   746  00FEBD  65                 	db	101	;'e'
   747  00FEBE  20                 	db	32
   748  00FEBF  75                 	db	117	;'u'
   749  00FEC0  73                 	db	115	;'s'
   750  00FEC1  65                 	db	101	;'e'
   751  00FEC2  64                 	db	100	;'d'
   752  00FEC3  20                 	db	32
   753  00FEC4  75                 	db	117	;'u'
   754  00FEC5  70                 	db	112	;'p'
   755  00FEC6  00                 	db	0
   756  00FEC7                     STR_1:
   757  00FEC7  52                 	db	82	;'R'
   758  00FEC8  65                 	db	101	;'e'
   759  00FEC9  74                 	db	116	;'t'
   760  00FECA  75                 	db	117	;'u'
   761  00FECB  72                 	db	114	;'r'
   762  00FECC  6E                 	db	110	;'n'
   763  00FECD  69                 	db	105	;'i'
   764  00FECE  6E                 	db	110	;'n'
   765  00FECF  67                 	db	103	;'g'
   766  00FED0  20                 	db	32
   767  00FED1  74                 	db	116	;'t'
   768  00FED2  6F                 	db	111	;'o'
   769  00FED3  00                 	db	0
   770  00FED4                     STR_66:
   771  00FED4  4E                 	db	78	;'N'
   772  00FED5  75                 	db	117	;'u'
   773  00FED6  6D                 	db	109	;'m'
   774  00FED7  62                 	db	98	;'b'
   775  00FED8  65                 	db	101	;'e'
   776  00FED9  72                 	db	114	;'r'
   777  00FEDA  20                 	db	32
   778  00FEDB  61                 	db	97	;'a'
   779  00FEDC  6E                 	db	110	;'n'
   780  00FEDD  64                 	db	100	;'d'
   781  00FEDE  20                 	db	32
   782  00FEDF  00                 	db	0
   783  00FEE0                     STR_52:
   784  00FEE0  53                 	db	83	;'S'
   785  00FEE1  74                 	db	116	;'t'
   786  00FEE2  61                 	db	97	;'a'
   787  00FEE3  72                 	db	114	;'r'
   788  00FEE4  74                 	db	116	;'t'
   789  00FEE5  20                 	db	32
   790  00FEE6  61                 	db	97	;'a'
   791  00FEE7  20                 	db	32
   792  00FEE8  4E                 	db	78	;'N'
   793  00FEE9  65                 	db	101	;'e'
   794  00FEEA  77                 	db	119	;'w'
   795  00FEEB  00                 	db	0
   796  00FEEC                     STR_7:
   797  00FEEC  6D                 	db	109	;'m'
   798  00FEED  65                 	db	101	;'e'
   799  00FEEE  6D                 	db	109	;'m'
   800  00FEEF  6F                 	db	111	;'o'
   801  00FEF0  72                 	db	114	;'r'
   802  00FEF1  79                 	db	121	;'y'
   803  00FEF2  20                 	db	32
   804  00FEF3  66                 	db	102	;'f'
   805  00FEF4  75                 	db	117	;'u'
   806  00FEF5  6C                 	db	108	;'l'
   807  00FEF6  6C                 	db	108	;'l'
   808  00FEF7  00                 	db	0
   809  00FEF8                     STR_33:
   810  00FEF8  25                 	db	37
   811  00FEF9  64                 	db	100	;'d'
   812  00FEFA  3A                 	db	58	;':'
   813  00FEFB  25                 	db	37
   814  00FEFC  30                 	db	48	;'0'
   815  00FEFD  32                 	db	50	;'2'
   816  00FEFE  64                 	db	100	;'d'
   817  00FEFF  20                 	db	32
   818  00FF00  61                 	db	97	;'a'
   819  00FF01  6D                 	db	109	;'m'
   820  00FF02  00                 	db	0
   821  00FF03                     STR_32:
   822  00FF03  25                 	db	37
   823  00FF04  64                 	db	100	;'d'
   824  00FF05  3A                 	db	58	;':'
   825  00FF06  25                 	db	37
   826  00FF07  30                 	db	48	;'0'
   827  00FF08  32                 	db	50	;'2'
   828  00FF09  64                 	db	100	;'d'
   829  00FF0A  20                 	db	32
   830  00FF0B  70                 	db	112	;'p'
   831  00FF0C  6D                 	db	109	;'m'
   832  00FF0D  00                 	db	0
   833  00FF0E                     STR_35:
   834  00FF0E  43                 	db	67	;'C'
   835  00FF0F  3A                 	db	58	;':'
   836  00FF10  20                 	db	32
   837  00FF11  63                 	db	99	;'c'
   838  00FF12  6F                 	db	111	;'o'
   839  00FF13  6E                 	db	110	;'n'
   840  00FF14  66                 	db	102	;'f'
   841  00FF15  69                 	db	105	;'i'
   842  00FF16  72                 	db	114	;'r'
   843  00FF17  6D                 	db	109	;'m'
   844  00FF18  00                 	db	0
   845  00FF19                     STR_57:
   846  00FF19  20                 	db	32
   847  00FF1A  20                 	db	32
   848  00FF1B  20                 	db	32
   849  00FF1C  20                 	db	32
   850  00FF1D  20                 	db	32
   851  00FF1E  45                 	db	69	;'E'
   852  00FF1F  6D                 	db	109	;'m'
   853  00FF20  70                 	db	112	;'p'
   854  00FF21  74                 	db	116	;'t'
   855  00FF22  79                 	db	121	;'y'
   856  00FF23  00                 	db	0
   857  00FF24                     STR_26:
   858  00FF24  44                 	db	68	;'D'
   859  00FF25  65                 	db	101	;'e'
   860  00FF26  74                 	db	116	;'t'
   861  00FF27  65                 	db	101	;'e'
   862  00FF28  63                 	db	99	;'c'
   863  00FF29  74                 	db	116	;'t'
   864  00FF2A  65                 	db	101	;'e'
   865  00FF2B  64                 	db	100	;'d'
   866  00FF2C  3A                 	db	58	;':'
   867  00FF2D  00                 	db	0
   868  00FF2E                     STR_23:
   869  00FF2E  44                 	db	68	;'D'
   870  00FF2F  65                 	db	101	;'e'
   871  00FF30  70                 	db	112	;'p'
   872  00FF31  6C                 	db	108	;'l'
   873  00FF32  6F                 	db	111	;'o'
   874  00FF33  79                 	db	121	;'y'
   875  00FF34  65                 	db	101	;'e'
   876  00FF35  64                 	db	100	;'d'
   877  00FF36  3A                 	db	58	;':'
   878  00FF37  00                 	db	0
   879  00FF38                     STR_63:
   880  00FF38  4E                 	db	78	;'N'
   881  00FF39  75                 	db	117	;'u'
   882  00FF3A  6D                 	db	109	;'m'
   883  00FF3B  62                 	db	98	;'b'
   884  00FF3C  65                 	db	101	;'e'
   885  00FF3D  72                 	db	114	;'r'
   886  00FF3E  20                 	db	32
   887  00FF3F  6F                 	db	111	;'o'
   888  00FF40  66                 	db	102	;'f'
   889  00FF41  00                 	db	0
   890  00FF42                     STR_53:
   891  00FF42  4F                 	db	79	;'O'
   892  00FF43  70                 	db	112	;'p'
   893  00FF44  65                 	db	101	;'e'
   894  00FF45  72                 	db	114	;'r'
   895  00FF46  61                 	db	97	;'a'
   896  00FF47  74                 	db	116	;'t'
   897  00FF48  69                 	db	105	;'i'
   898  00FF49  6F                 	db	111	;'o'
   899  00FF4A  6E                 	db	110	;'n'
   900  00FF4B  00                 	db	0
   901  00FF4C                     STR_45:
   902  00FF4C  44                 	db	68	;'D'
   903  00FF4D  69                 	db	105	;'i'
   904  00FF4E  73                 	db	115	;'s'
   905  00FF4F  70                 	db	112	;'p'
   906  00FF50  65                 	db	101	;'e'
   907  00FF51  6E                 	db	110	;'n'
   908  00FF52  73                 	db	115	;'s'
   909  00FF53  65                 	db	101	;'e'
   910  00FF54  72                 	db	114	;'r'
   911  00FF55  00                 	db	0
   912  00FF56                     STR_19:
   913  00FF56  25                 	db	37
   914  00FF57  30                 	db	48	;'0'
   915  00FF58  32                 	db	50	;'2'
   916  00FF59  64                 	db	100	;'d'
   917  00FF5A  20                 	db	32
   918  00FF5B  68                 	db	104	;'h'
   919  00FF5C  6F                 	db	111	;'o'
   920  00FF5D  75                 	db	117	;'u'
   921  00FF5E  72                 	db	114	;'r'
   922  00FF5F  00                 	db	0
   923  00FF60                     STR_14:
   924  00FF60  70                 	db	112	;'p'
   925  00FF61  6C                 	db	108	;'l'
   926  00FF62  61                 	db	97	;'a'
   927  00FF63  6E                 	db	110	;'n'
   928  00FF64  41                 	db	65	;'A'
   929  00FF65  20                 	db	32
   930  00FF66  73                 	db	115	;'s'
   931  00FF67  65                 	db	101	;'e'
   932  00FF68  74                 	db	116	;'t'
   933  00FF69  00                 	db	0
   934  00FF6A                     STR_12:
   935  00FF6A  70                 	db	112	;'p'
   936  00FF6B  6C                 	db	108	;'l'
   937  00FF6C  61                 	db	97	;'a'
   938  00FF6D  6E                 	db	110	;'n'
   939  00FF6E  42                 	db	66	;'B'
   940  00FF6F  20                 	db	32
   941  00FF70  73                 	db	115	;'s'
   942  00FF71  65                 	db	101	;'e'
   943  00FF72  74                 	db	116	;'t'
   944  00FF73  00                 	db	0
   945  00FF74                     STR_4:
   946  00FF74  72                 	db	114	;'r'
   947  00FF75  65                 	db	101	;'e'
   948  00FF76  74                 	db	116	;'t'
   949  00FF77  75                 	db	117	;'u'
   950  00FF78  72                 	db	114	;'r'
   951  00FF79  6E                 	db	110	;'n'
   952  00FF7A  69                 	db	105	;'i'
   953  00FF7B  6E                 	db	110	;'n'
   954  00FF7C  67                 	db	103	;'g'
   955  00FF7D  00                 	db	0
   956  00FF7E                     STR_58:
   957  00FF7E  43                 	db	67	;'C'
   958  00FF7F  68                 	db	104	;'h'
   959  00FF80  6F                 	db	111	;'o'
   960  00FF81  6F                 	db	111	;'o'
   961  00FF82  73                 	db	115	;'s'
   962  00FF83  65                 	db	101	;'e'
   963  00FF84  20                 	db	32
   964  00FF85  31                 	db	49	;'1'
   965  00FF86  00                 	db	0
   966  00FF87                     STR_54:
   967  00FF87  50                 	db	80	;'P'
   968  00FF88  72                 	db	114	;'r'
   969  00FF89  65                 	db	101	;'e'
   970  00FF8A  73                 	db	115	;'s'
   971  00FF8B  73                 	db	115	;'s'
   972  00FF8C  20                 	db	32
   973  00FF8D  30                 	db	48	;'0'
   974  00FF8E  3A                 	db	58	;':'
   975  00FF8F  00                 	db	0
   976  00FF90                     STR_60:
   977  00FF90  50                 	db	80	;'P'
   978  00FF91  72                 	db	114	;'r'
   979  00FF92  65                 	db	101	;'e'
   980  00FF93  73                 	db	115	;'s'
   981  00FF94  73                 	db	115	;'s'
   982  00FF95  20                 	db	32
   983  00FF96  31                 	db	49	;'1'
   984  00FF97  3A                 	db	58	;':'
   985  00FF98  00                 	db	0
   986  00FF99                     STR_62:
   987  00FF99  50                 	db	80	;'P'
   988  00FF9A  72                 	db	114	;'r'
   989  00FF9B  65                 	db	101	;'e'
   990  00FF9C  73                 	db	115	;'s'
   991  00FF9D  73                 	db	115	;'s'
   992  00FF9E  20                 	db	32
   993  00FF9F  32                 	db	50	;'2'
   994  00FFA0  3A                 	db	58	;':'
   995  00FFA1  00                 	db	0
   996  00FFA2                     STR_65:
   997  00FFA2  50                 	db	80	;'P'
   998  00FFA3  72                 	db	114	;'r'
   999  00FFA4  65                 	db	101	;'e'
  1000  00FFA5  73                 	db	115	;'s'
  1001  00FFA6  73                 	db	115	;'s'
  1002  00FFA7  20                 	db	32
  1003  00FFA8  33                 	db	51	;'3'
  1004  00FFA9  3A                 	db	58	;':'
  1005  00FFAA  00                 	db	0
  1006  00FFAB                     STR_69:
  1007  00FFAB  50                 	db	80	;'P'
  1008  00FFAC  72                 	db	114	;'r'
  1009  00FFAD  65                 	db	101	;'e'
  1010  00FFAE  73                 	db	115	;'s'
  1011  00FFAF  73                 	db	115	;'s'
  1012  00FFB0  20                 	db	32
  1013  00FFB1  34                 	db	52	;'4'
  1014  00FFB2  3A                 	db	58	;':'
  1015  00FFB3  00                 	db	0
  1016  00FFB4                     STR_51:
  1017  00FFB4  50                 	db	80	;'P'
  1018  00FFB5  72                 	db	114	;'r'
  1019  00FFB6  65                 	db	101	;'e'
  1020  00FFB7  73                 	db	115	;'s'
  1021  00FFB8  73                 	db	115	;'s'
  1022  00FFB9  20                 	db	32
  1023  00FFBA  41                 	db	65	;'A'
  1024  00FFBB  3A                 	db	58	;':'
  1025  00FFBC  00                 	db	0
  1026  00FFBD                     STR_21:
  1027  00FFBD  25                 	db	37
  1028  00FFBE  30                 	db	48	;'0'
  1029  00FFBF  32                 	db	50	;'2'
  1030  00FFC0  64                 	db	100	;'d'
  1031  00FFC1  20                 	db	32
  1032  00FFC2  73                 	db	115	;'s'
  1033  00FFC3  65                 	db	101	;'e'
  1034  00FFC4  63                 	db	99	;'c'
  1035  00FFC5  00                 	db	0
  1036  00FFC6                     STR_20:
  1037  00FFC6  25                 	db	37
  1038  00FFC7  30                 	db	48	;'0'
  1039  00FFC8  32                 	db	50	;'2'
  1040  00FFC9  64                 	db	100	;'d'
  1041  00FFCA  20                 	db	32
  1042  00FFCB  6D                 	db	109	;'m'
  1043  00FFCC  69                 	db	105	;'i'
  1044  00FFCD  6E                 	db	110	;'n'
  1045  00FFCE  00                 	db	0
  1046  00FFCF                     STR_73:
  1047  00FFCF  52                 	db	82	;'R'
  1048  00FFD0  75                 	db	117	;'u'
  1049  00FFD1  6E                 	db	110	;'n'
  1050  00FFD2  6E                 	db	110	;'n'
  1051  00FFD3  69                 	db	105	;'i'
  1052  00FFD4  6E                 	db	110	;'n'
  1053  00FFD5  67                 	db	103	;'g'
  1054  00FFD6  00                 	db	0
  1055  00FFD7                     STR_34:
  1056  00FFD7  43                 	db	67	;'C'
  1057  00FFD8  6C                 	db	108	;'l'
  1058  00FFD9  65                 	db	101	;'e'
  1059  00FFDA  61                 	db	97	;'a'
  1060  00FFDB  72                 	db	114	;'r'
  1061  00FFDC  3F                 	db	63	;'?'
  1062  00FFDD  00                 	db	0
  1063  00FFDE                     STR_13:
  1064  00FFDE  70                 	db	112	;'p'
  1065  00FFDF  6C                 	db	108	;'l'
  1066  00FFE0  61                 	db	97	;'a'
  1067  00FFE1  6E                 	db	110	;'n'
  1068  00FFE2  41                 	db	65	;'A'
  1069  00FFE3  3F                 	db	63	;'?'
  1070  00FFE4  00                 	db	0
  1071  00FFE5                     STR_11:
  1072  00FFE5  70                 	db	112	;'p'
  1073  00FFE6  6C                 	db	108	;'l'
  1074  00FFE7  61                 	db	97	;'a'
  1075  00FFE8  6E                 	db	110	;'n'
  1076  00FFE9  42                 	db	66	;'B'
  1077  00FFEA  3F                 	db	63	;'?'
  1078  00FFEB  00                 	db	0
  1079  00FFEC                     STR_5:
  1080  00FFEC  77                 	db	119	;'w'
  1081  00FFED  72                 	db	114	;'r'
  1082  00FFEE  6F                 	db	111	;'o'
  1083  00FFEF  6E                 	db	110	;'n'
  1084  00FFF0  67                 	db	103	;'g'
  1085  00FFF1  00                 	db	0
  1086  00FFF2                     STR_31:
  1087  00FFF2  23                 	db	35
  1088  00FFF3  25                 	db	37
  1089  00FFF4  64                 	db	100	;'d'
  1090  00FFF5  2E                 	db	46
  1091  00FFF6  00                 	db	0
  1092  00FFF7                     STR_46:
  1093  00FFF7  44                 	db	68	;'D'
  1094  00FFF8  61                 	db	97	;'a'
  1095  00FFF9  74                 	db	116	;'t'
  1096  00FFFA  65                 	db	101	;'e'
  1097  00FFFB  00                 	db	0
  1098  00FFFC                     STR_47:
  1099  00FFFC  32                 	db	50	;'2'
  1100  00FFFD  30                 	db	48	;'0'
  1101  00FFFE  00                 	db	0
  1102  0000                     
  1103                           ; #config settings
  1104  00FFFF  00                 	db	0	; dummy byte at the end
  1105  0000                     
  1106                           	psect	cinit
  1107  00488C                     __pcinit:
  1108                           	opt callstack 0
  1109  00488C                     start_initialization:
  1110                           	opt callstack 0
  1111  00488C                     __initialization:
  1112                           	opt callstack 0
  1113                           
  1114                           ; Initialize objects allocated to BANK0 (23 bytes)
  1115                           ; load TBLPTR registers with __pidataBANK0
  1116  00488C  0EA4               	movlw	low __pidataBANK0
  1117  00488E  6EF6               	movwf	tblptrl,c
  1118  004890  0E54               	movlw	high __pidataBANK0
  1119  004892  6EF7               	movwf	tblptrh,c
  1120  004894  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1121  004896  6EF8               	movwf	tblptru,c
  1122  004898  EE00  F0E8         	lfsr	0,__pdataBANK0
  1123  00489C  EE10 F017          	lfsr	1,23
  1124  0048A0                     copy_data0:
  1125  0048A0  0009               	tblrd		*+
  1126  0048A2  CFF5 FFEE          	movff	tablat,postinc0
  1127  0048A6  50E5               	movf	postdec1,w,c
  1128  0048A8  50E1               	movf	fsr1l,w,c
  1129  0048AA  E1FA               	bnz	copy_data0
  1130                           
  1131                           ; Initialize objects allocated to COMRAM (11 bytes)
  1132                           ; load TBLPTR registers with __pidataCOMRAM
  1133  0048AC  0E7A               	movlw	low __pidataCOMRAM
  1134  0048AE  6EF6               	movwf	tblptrl,c
  1135  0048B0  0E55               	movlw	high __pidataCOMRAM
  1136  0048B2  6EF7               	movwf	tblptrh,c
  1137  0048B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1138  0048B6  6EF8               	movwf	tblptru,c
  1139  0048B8  EE00  F04C         	lfsr	0,__pdataCOMRAM
  1140  0048BC  EE10 F00B          	lfsr	1,11
  1141  0048C0                     copy_data1:
  1142  0048C0  0009               	tblrd		*+
  1143  0048C2  CFF5 FFEE          	movff	tablat,postinc0
  1144  0048C6  50E5               	movf	postdec1,w,c
  1145  0048C8  50E1               	movf	fsr1l,w,c
  1146  0048CA  E1FA               	bnz	copy_data1
  1147                           
  1148                           ; Clear objects allocated to BANK1 (146 bytes)
  1149  0048CC  EE01  F000         	lfsr	0,__pbssBANK1
  1150  0048D0  0E92               	movlw	146
  1151  0048D2                     clear_0:
  1152  0048D2  6AEE               	clrf	postinc0,c
  1153  0048D4  06E8               	decf	wreg,f,c
  1154  0048D6  E1FD               	bnz	clear_0
  1155                           
  1156                           ; Clear objects allocated to BANK0 (48 bytes)
  1157  0048D8  EE00  F0B8         	lfsr	0,__pbssBANK0
  1158  0048DC  0E30               	movlw	48
  1159  0048DE                     clear_1:
  1160  0048DE  6AEE               	clrf	postinc0,c
  1161  0048E0  06E8               	decf	wreg,f,c
  1162  0048E2  E1FD               	bnz	clear_1
  1163                           
  1164                           ; Clear objects allocated to COMRAM (24 bytes)
  1165  0048E4  EE00  F034         	lfsr	0,__pbssCOMRAM
  1166  0048E8  0E18               	movlw	24
  1167  0048EA                     clear_2:
  1168  0048EA  6AEE               	clrf	postinc0,c
  1169  0048EC  06E8               	decf	wreg,f,c
  1170  0048EE  E1FD               	bnz	clear_2
  1171  0048F0                     end_of_initialization:
  1172                           	opt callstack 0
  1173  0048F0                     __end_of__initialization:
  1174                           	opt callstack 0
  1175  0048F0  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1176  0048F2  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1177  0048F4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1178  0048F6  6EF8               	movwf	tblptru,c
  1179  0048F8  0100               	movlb	0
  1180  0048FA  EF09  F000         	goto	_main	;jump to C main() function
  1181                           
  1182                           	psect	bssCOMRAM
  1183  000034                     __pbssCOMRAM:
  1184                           	opt callstack 0
  1185  000034                     _last_problem_bool:
  1186                           	opt callstack 0
  1187  000034                     	ds	8
  1188  00003C                     _rotary_accum:
  1189                           	opt callstack 0
  1190  00003C                     	ds	4
  1191  000040                     _rotary_counter:
  1192                           	opt callstack 0
  1193  000040                     	ds	4
  1194  000044                     _total_op:
  1195                           	opt callstack 0
  1196  000044                     	ds	2
  1197  000046                     _crack_counter:
  1198                           	opt callstack 0
  1199  000046                     	ds	2
  1200  000048                     _hole_counter:
  1201                           	opt callstack 0
  1202  000048                     	ds	2
  1203  00004A                     _add_index:
  1204                           	opt callstack 0
  1205  00004A                     	ds	2
  1206                           
  1207                           	psect	dataCOMRAM
  1208  00004C                     __pdataCOMRAM:
  1209                           	opt callstack 0
  1210  00004C                     _happynewyear:
  1211                           	opt callstack 0
  1212  00004C                     	ds	7
  1213  000053                     _wety_deg:
  1214                           	opt callstack 0
  1215  000053                     	ds	2
  1216  000055                     _start_time:
  1217                           	opt callstack 0
  1218  000055                     	ds	2
  1219                           
  1220                           	psect	bssBANK0
  1221  0000B8                     __pbssBANK0:
  1222                           	opt callstack 0
  1223  0000B8                     _operation_sec:
  1224                           	opt callstack 0
  1225  0000B8                     	ds	4
  1226  0000BC                     _end_sec:
  1227                           	opt callstack 0
  1228  0000BC                     	ds	4
  1229  0000C0                     _start_sec:
  1230                           	opt callstack 0
  1231  0000C0                     	ds	4
  1232  0000C4                     _accum_straight_distance:
  1233                           	opt callstack 0
  1234  0000C4                     	ds	4
  1235  0000C8                     _turns_counter:
  1236                           	opt callstack 0
  1237  0000C8                     	ds	4
  1238  0000CC                     _planB:
  1239                           	opt callstack 0
  1240  0000CC                     	ds	2
  1241  0000CE                     _display_repeat:
  1242                           	opt callstack 0
  1243  0000CE                     	ds	2
  1244  0000D0                     _reg:
  1245                           	opt callstack 0
  1246  0000D0                     	ds	2
  1247  0000D2                     _ddp:
  1248                           	opt callstack 0
  1249  0000D2                     	ds	2
  1250  0000D4                     _disp_standby_page:
  1251                           	opt callstack 0
  1252  0000D4                     	ds	2
  1253  0000D6                     _cones_deployed:
  1254                           	opt callstack 0
  1255  0000D6                     	ds	2
  1256  0000D8                     _drop_index:
  1257                           	opt callstack 0
  1258  0000D8                     	ds	2
  1259  0000DA                     _last_sensed:
  1260                           	opt callstack 0
  1261  0000DA                     	ds	2
  1262  0000DC                     _c:
  1263                           	opt callstack 0
  1264  0000DC                     	ds	2
  1265  0000DE                     _b:
  1266                           	opt callstack 0
  1267  0000DE                     	ds	2
  1268  0000E0                     _a:
  1269                           	opt callstack 0
  1270  0000E0                     	ds	2
  1271  0000E2                     _read_pntr:
  1272                           	opt callstack 0
  1273  0000E2                     	ds	1
  1274  0000E3                     _addrh:
  1275                           	opt callstack 0
  1276  0000E3                     	ds	1
  1277  0000E4                     _addr:
  1278                           	opt callstack 0
  1279  0000E4                     	ds	1
  1280  0000E5                     _key:
  1281                           	opt callstack 0
  1282  0000E5                     	ds	1
  1283  0000E6                     _no_cone:
  1284                           	opt callstack 0
  1285  0000E6                     	ds	1
  1286  0000E7                     _last_dropped:
  1287                           	opt callstack 0
  1288  0000E7                     	ds	1
  1289                           
  1290                           	psect	dataBANK0
  1291  0000E8                     __pdataBANK0:
  1292                           	opt callstack 0
  1293  0000E8                     _times:
  1294                           	opt callstack 0
  1295  0000E8                     	ds	8
  1296  0000F0                     _time:
  1297                           	opt callstack 0
  1298  0000F0                     	ds	7
  1299  0000F7                     _operation_time:
  1300                           	opt callstack 0
  1301  0000F7                     	ds	3
  1302  0000FA                     _ninty_deg:
  1303                           	opt callstack 0
  1304  0000FA                     	ds	2
  1305  0000FC                     _clear_waiter:
  1306                           	opt callstack 0
  1307  0000FC                     	ds	2
  1308  0000FE                     _completion_bool:
  1309                           	opt callstack 0
  1310  0000FE                     	ds	1
  1311                           
  1312                           	psect	bssBANK1
  1313  000100                     __pbssBANK1:
  1314                           	opt callstack 0
  1315  000100                     _drop_position:
  1316                           	opt callstack 0
  1317  000100                     	ds	48
  1318  000130                     _array_cracks_distance:
  1319                           	opt callstack 0
  1320  000130                     	ds	24
  1321  000148                     _array_holes_distance:
  1322                           	opt callstack 0
  1323  000148                     	ds	24
  1324  000160                     _drop_identity:
  1325                           	opt callstack 0
  1326  000160                     	ds	24
  1327  000178                     _print_data:
  1328                           	opt callstack 0
  1329  000178                     	ds	26
  1330                           
  1331                           	psect	cstackBANK1
  1332  000192                     __pcstackBANK1:
  1333                           	opt callstack 0
  1334  000192                     ??_data_disp:
  1335  000192                     sensed_function_3@sth:
  1336                           	opt callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x0
  1339  000192                     	ds	2
  1340  000194                     sensed_function_3@sth_1135:
  1341                           	opt callstack 0
  1342  000194                     data_disp@temp_read:
  1343                           	opt callstack 0
  1344                           
  1345                           ; 2 bytes @ 0x2
  1346  000194                     	ds	2
  1347  000196                     sensed_function_3@sth_1136:
  1348                           	opt callstack 0
  1349  000196                     data_disp@length_i_1925:
  1350                           	opt callstack 0
  1351                           
  1352                           ; 2 bytes @ 0x4
  1353  000196                     	ds	2
  1354  000198                     sensed_function_3@sth_1137:
  1355                           	opt callstack 0
  1356  000198                     data_disp@length_i:
  1357                           	opt callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x6
  1360  000198                     	ds	2
  1361  00019A                     data_disp@datalength:
  1362                           	opt callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x8
  1365  00019A                     	ds	2
  1366  00019C                     ??_main:
  1367                           
  1368                           ; 1 bytes @ 0xA
  1369  00019C                     	ds	2
  1370  00019E                     main@ticks:
  1371                           	opt callstack 0
  1372                           
  1373                           ; 4 bytes @ 0xC
  1374  00019E                     	ds	4
  1375                           
  1376                           	psect	cstackBANK0
  1377  000080                     __pcstackBANK0:
  1378                           	opt callstack 0
  1379  000080                     ??_R_I:
  1380  000080                     ??_L_I:
  1381  000080                     ??_straight:
  1382  000080                     ??_turn_left:
  1383  000080                     ??_turn_right:
  1384  000080                     ??_isdigit:
  1385  000080                     ??_I2C_Master_Wait:
  1386  000080                     ?_digit0:
  1387                           	opt callstack 0
  1388  000080                     ?___awdiv:
  1389                           	opt callstack 0
  1390  000080                     ?___awmod:
  1391                           	opt callstack 0
  1392  000080                     ?___lwdiv:
  1393                           	opt callstack 0
  1394  000080                     ?___fladd:
  1395                           	opt callstack 0
  1396  000080                     ?___fldiv:
  1397                           	opt callstack 0
  1398  000080                     ?___flmul:
  1399                           	opt callstack 0
  1400  000080                     ?___lldiv:
  1401                           	opt callstack 0
  1402  000080                     ?___almod:
  1403                           	opt callstack 0
  1404  000080                     ?___llmod:
  1405                           	opt callstack 0
  1406  000080                     pulse_e@interruptState:
  1407                           	opt callstack 0
  1408  000080                     one_byte_reader@rh:
  1409                           	opt callstack 0
  1410  000080                     nextLine@g:
  1411                           	opt callstack 0
  1412  000080                     digit0@h:
  1413                           	opt callstack 0
  1414  000080                     ___awdiv@dividend:
  1415                           	opt callstack 0
  1416  000080                     ___awmod@dividend:
  1417                           	opt callstack 0
  1418  000080                     ___lwdiv@dividend:
  1419                           	opt callstack 0
  1420  000080                     ___lldiv@dividend:
  1421                           	opt callstack 0
  1422  000080                     ___almod@dividend:
  1423                           	opt callstack 0
  1424  000080                     ___llmod@dividend:
  1425                           	opt callstack 0
  1426  000080                     ___fladd@b:
  1427                           	opt callstack 0
  1428  000080                     ___fldiv@b:
  1429                           	opt callstack 0
  1430  000080                     ___flmul@b:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x0
  1434  000080                     	ds	1
  1435  000081                     I2C_Master_Read@ackBit:
  1436                           	opt callstack 0
  1437  000081                     send_nibble@data:
  1438                           	opt callstack 0
  1439  000081                     one_byte_reader@r:
  1440                           	opt callstack 0
  1441  000081                     _isdigit$2496:
  1442                           	opt callstack 0
  1443  000081                     I2C_Master_Write@byteToWrite:
  1444                           	opt callstack 0
  1445                           
  1446                           ; 2 bytes @ 0x1
  1447  000081                     	ds	1
  1448  000082                     I2C_Master_Read@receivedByte:
  1449                           	opt callstack 0
  1450  000082                     send_byte@data:
  1451                           	opt callstack 0
  1452  000082                     one_byte_reader@out:
  1453                           	opt callstack 0
  1454  000082                     isdigit@c:
  1455                           	opt callstack 0
  1456  000082                     ___awdiv@divisor:
  1457                           	opt callstack 0
  1458  000082                     ___awmod@divisor:
  1459                           	opt callstack 0
  1460  000082                     ___lwdiv@divisor:
  1461                           	opt callstack 0
  1462                           
  1463                           ; 2 bytes @ 0x2
  1464  000082                     	ds	1
  1465  000083                     lcdInst@data:
  1466                           	opt callstack 0
  1467  000083                     putch@data:
  1468                           	opt callstack 0
  1469                           
  1470                           ; 1 bytes @ 0x3
  1471  000083                     	ds	1
  1472  000084                     ??_initLCD:
  1473  000084                     ___awdiv@counter:
  1474                           	opt callstack 0
  1475  000084                     ___awmod@counter:
  1476                           	opt callstack 0
  1477  000084                     ___lwdiv@counter:
  1478                           	opt callstack 0
  1479  000084                     ___lldiv@divisor:
  1480                           	opt callstack 0
  1481  000084                     ___almod@divisor:
  1482                           	opt callstack 0
  1483  000084                     ___llmod@divisor:
  1484                           	opt callstack 0
  1485  000084                     ___fladd@a:
  1486                           	opt callstack 0
  1487  000084                     ___fldiv@a:
  1488                           	opt callstack 0
  1489  000084                     ___flmul@a:
  1490                           	opt callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x4
  1493  000084                     	ds	1
  1494  000085                     ___awdiv@sign:
  1495                           	opt callstack 0
  1496  000085                     ___awmod@sign:
  1497                           	opt callstack 0
  1498  000085                     ___lwdiv@quotient:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 2 bytes @ 0x5
  1502  000085                     	ds	1
  1503  000086                     ___awdiv@quotient:
  1504                           	opt callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x6
  1507  000086                     	ds	1
  1508  000087                     ?___lwmod:
  1509                           	opt callstack 0
  1510  000087                     ___lwmod@dividend:
  1511                           	opt callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x7
  1514  000087                     	ds	1
  1515  000088                     ??___fladd:
  1516  000088                     ??___fldiv:
  1517  000088                     ??___flmul:
  1518  000088                     ?_read_total:
  1519                           	opt callstack 0
  1520  000088                     ?___wmul:
  1521                           	opt callstack 0
  1522  000088                     ___almod@counter:
  1523                           	opt callstack 0
  1524  000088                     ___llmod@counter:
  1525                           	opt callstack 0
  1526  000088                     ___wmul@multiplier:
  1527                           	opt callstack 0
  1528  000088                     ___lldiv@quotient:
  1529                           	opt callstack 0
  1530                           
  1531                           ; 4 bytes @ 0x8
  1532  000088                     	ds	1
  1533  000089                     ___almod@sign:
  1534                           	opt callstack 0
  1535  000089                     ___lwmod@divisor:
  1536                           	opt callstack 0
  1537                           
  1538                           ; 2 bytes @ 0x9
  1539  000089                     	ds	1
  1540  00008A                     ??_read_total:
  1541  00008A                     ?___aldiv:
  1542                           	opt callstack 0
  1543  00008A                     ___wmul@multiplicand:
  1544                           	opt callstack 0
  1545  00008A                     ___aldiv@dividend:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 4 bytes @ 0xA
  1549  00008A                     	ds	1
  1550  00008B                     ___lwmod@counter:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 1 bytes @ 0xB
  1554  00008B                     	ds	1
  1555  00008C                     ___lldiv@counter:
  1556                           	opt callstack 0
  1557  00008C                     ___fladd@signs:
  1558                           	opt callstack 0
  1559  00008C                     ___flmul@sign:
  1560                           	opt callstack 0
  1561  00008C                     read_total@total:
  1562                           	opt callstack 0
  1563  00008C                     ___wmul@product:
  1564                           	opt callstack 0
  1565  00008C                     ___fldiv@rem:
  1566                           	opt callstack 0
  1567                           
  1568                           ; 4 bytes @ 0xC
  1569  00008C                     	ds	1
  1570  00008D                     ___fladd@aexp:
  1571                           	opt callstack 0
  1572  00008D                     ___flmul@aexp:
  1573                           	opt callstack 0
  1574  00008D                     I2C_Master_Init@clockFreq:
  1575                           	opt callstack 0
  1576                           
  1577                           ; 4 bytes @ 0xD
  1578  00008D                     	ds	1
  1579  00008E                     ?_printf:
  1580                           	opt callstack 0
  1581  00008E                     ___fladd@bexp:
  1582                           	opt callstack 0
  1583  00008E                     printf@f:
  1584                           	opt callstack 0
  1585  00008E                     ___aldiv@divisor:
  1586                           	opt callstack 0
  1587  00008E                     ___flmul@grs:
  1588                           	opt callstack 0
  1589                           
  1590                           ; 4 bytes @ 0xE
  1591  00008E                     	ds	1
  1592  00008F                     ___fladd@grs:
  1593                           	opt callstack 0
  1594                           
  1595                           ; 1 bytes @ 0xF
  1596  00008F                     	ds	1
  1597  000090                     ?___flsub:
  1598                           	opt callstack 0
  1599  000090                     ___fldiv@sign:
  1600                           	opt callstack 0
  1601  000090                     drop_record@aa:
  1602                           	opt callstack 0
  1603  000090                     ___fleq@ff1:
  1604                           	opt callstack 0
  1605  000090                     ___flsub@b:
  1606                           	opt callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x10
  1609  000090                     	ds	1
  1610  000091                     ??_I2C_Master_Init:
  1611  000091                     ___fldiv@new_exp:
  1612                           	opt callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x11
  1615  000091                     	ds	1
  1616  000092                     ??_drop_record:
  1617  000092                     ___aldiv@counter:
  1618                           	opt callstack 0
  1619  000092                     ___flmul@bexp:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 1 bytes @ 0x12
  1623  000092                     	ds	1
  1624  000093                     ___aldiv@sign:
  1625                           	opt callstack 0
  1626  000093                     ___fldiv@grs:
  1627                           	opt callstack 0
  1628  000093                     ___flmul@prod:
  1629                           	opt callstack 0
  1630                           
  1631                           ; 4 bytes @ 0x13
  1632  000093                     	ds	1
  1633  000094                     ___aldiv@quotient:
  1634                           	opt callstack 0
  1635  000094                     ___fleq@ff2:
  1636                           	opt callstack 0
  1637  000094                     ___flsub@a:
  1638                           	opt callstack 0
  1639                           
  1640                           ; 4 bytes @ 0x14
  1641  000094                     	ds	1
  1642  000095                     ??_readRTC:
  1643                           
  1644                           ; 1 bytes @ 0x15
  1645  000095                     	ds	1
  1646  000096                     ??_printf:
  1647  000096                     readRTC@i:
  1648                           	opt callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x16
  1651  000096                     	ds	1
  1652  000097                     readRTC@t_data:
  1653                           	opt callstack 0
  1654  000097                     ___fldiv@bexp:
  1655                           	opt callstack 0
  1656  000097                     ___flmul@temp:
  1657                           	opt callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x17
  1660  000097                     	ds	1
  1661  000098                     ??_normal_updater:
  1662  000098                     ??___fleq:
  1663  000098                     ___fldiv@aexp:
  1664                           	opt callstack 0
  1665  000098                     ___flge@ff1:
  1666                           	opt callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x18
  1669  000098                     	ds	1
  1670  000099                     ?___fltol:
  1671                           	opt callstack 0
  1672  000099                     ___fltol@f1:
  1673                           	opt callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x19
  1676  000099                     	ds	1
  1677  00009A                     printf@ap:
  1678                           	opt callstack 0
  1679  00009A                     _normal_updater$2719:
  1680                           	opt callstack 0
  1681                           
  1682                           ; 4 bytes @ 0x1A
  1683  00009A                     	ds	2
  1684  00009C                     printf@prec:
  1685                           	opt callstack 0
  1686  00009C                     ___flge@ff2:
  1687                           	opt callstack 0
  1688                           
  1689                           ; 4 bytes @ 0x1C
  1690  00009C                     	ds	1
  1691  00009D                     ??___fltol:
  1692  00009D                     printf@val:
  1693                           	opt callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x1D
  1696  00009D                     	ds	2
  1697  00009F                     printf@flag:
  1698                           	opt callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x1F
  1701  00009F                     	ds	1
  1702  0000A0                     ??___flge:
  1703  0000A0                     printf@width:
  1704                           	opt callstack 0
  1705                           
  1706                           ; 2 bytes @ 0x20
  1707  0000A0                     	ds	1
  1708  0000A1                     ___fltol@sign1:
  1709                           	opt callstack 0
  1710                           
  1711                           ; 1 bytes @ 0x21
  1712  0000A1                     	ds	1
  1713  0000A2                     printf@c:
  1714                           	opt callstack 0
  1715  0000A2                     ___fltol@exp1:
  1716                           	opt callstack 0
  1717                           
  1718                           ; 1 bytes @ 0x22
  1719  0000A2                     	ds	1
  1720  0000A3                     ??_initmoving_disp:
  1721  0000A3                     ??_data_select:
  1722  0000A3                     ??_record:
  1723  0000A3                     ??_hole_dispense_function:
  1724  0000A3                     ??_page5:
  1725  0000A3                     ot@print_data:
  1726                           	opt callstack 0
  1727  0000A3                     Cones@print_data:
  1728                           	opt callstack 0
  1729  0000A3                     printintarray2@a:
  1730                           	opt callstack 0
  1731  0000A3                     _completion_write$2721:
  1732                           	opt callstack 0
  1733                           
  1734                           ; 2 bytes @ 0x23
  1735  0000A3                     	ds	1
  1736  0000A4                     ?_hole_drop_bool_function:
  1737                           	opt callstack 0
  1738  0000A4                     ?_crack_drop_bool_function:
  1739                           	opt callstack 0
  1740                           
  1741                           ; 2 bytes @ 0x24
  1742  0000A4                     	ds	1
  1743  0000A5                     ??_ot:
  1744  0000A5                     ??_Cones:
  1745  0000A5                     record@corh:
  1746                           	opt callstack 0
  1747  0000A5                     page5@curr_line:
  1748                           	opt callstack 0
  1749  0000A5                     completion_write@value:
  1750                           	opt callstack 0
  1751  0000A5                     printintarray2@b:
  1752                           	opt callstack 0
  1753  0000A5                     hole_dispense_function@tick:
  1754                           	opt callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x25
  1757  0000A5                     	ds	1
  1758  0000A6                     page5@op_counter:
  1759                           	opt callstack 0
  1760  0000A6                     hole_drop_bool_function@x:
  1761                           	opt callstack 0
  1762  0000A6                     crack_drop_bool_function@x:
  1763                           	opt callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x26
  1766  0000A6                     	ds	1
  1767  0000A7                     ??_completion_return:
  1768  0000A7                     ??_printintarray2:
  1769                           
  1770                           ; 1 bytes @ 0x27
  1771  0000A7                     	ds	1
  1772  0000A8                     
  1773                           ; 1 bytes @ 0x28
  1774  0000A8                     	ds	1
  1775  0000A9                     printintarray2@dig:
  1776                           	opt callstack 0
  1777  0000A9                     middle_crack_drop@A:
  1778                           	opt callstack 0
  1779  0000A9                     left_crack_drop@A:
  1780                           	opt callstack 0
  1781  0000A9                     right_crack_drop@A:
  1782                           	opt callstack 0
  1783  0000A9                     _completion_return$2720:
  1784                           	opt callstack 0
  1785                           
  1786                           ; 4 bytes @ 0x29
  1787  0000A9                     	ds	1
  1788  0000AA                     hole_drop_bool_function@y:
  1789                           	opt callstack 0
  1790  0000AA                     crack_drop_bool_function@y:
  1791                           	opt callstack 0
  1792                           
  1793                           ; 4 bytes @ 0x2A
  1794  0000AA                     	ds	1
  1795  0000AB                     printintarray2@left:
  1796                           	opt callstack 0
  1797                           
  1798                           ; 2 bytes @ 0x2B
  1799  0000AB                     	ds	2
  1800  0000AD                     printintarray2@curr_line:
  1801                           	opt callstack 0
  1802  0000AD                     completion_return@tick:
  1803                           	opt callstack 0
  1804  0000AD                     middle_crack_drop@B:
  1805                           	opt callstack 0
  1806  0000AD                     left_crack_drop@B:
  1807                           	opt callstack 0
  1808  0000AD                     right_crack_drop@B:
  1809                           	opt callstack 0
  1810                           
  1811                           ; 4 bytes @ 0x2D
  1812  0000AD                     	ds	1
  1813  0000AE                     ??_sensed_function_3:
  1814  0000AE                     printintarray2@i:
  1815                           	opt callstack 0
  1816                           
  1817                           ; 2 bytes @ 0x2E
  1818  0000AE                     	ds	2
  1819  0000B0                     printintarray2@counter:
  1820                           	opt callstack 0
  1821                           
  1822                           ; 2 bytes @ 0x30
  1823  0000B0                     	ds	1
  1824  0000B1                     
  1825                           ; 1 bytes @ 0x31
  1826  0000B1                     	ds	1
  1827  0000B2                     Holes2@a:
  1828                           	opt callstack 0
  1829  0000B2                     Cracks@a:
  1830                           	opt callstack 0
  1831                           
  1832                           ; 2 bytes @ 0x32
  1833  0000B2                     	ds	2
  1834  0000B4                     Holes2@b:
  1835                           	opt callstack 0
  1836  0000B4                     Cracks@b:
  1837                           	opt callstack 0
  1838                           
  1839                           ; 2 bytes @ 0x34
  1840  0000B4                     	ds	2
  1841  0000B6                     ??_Holes2:
  1842  0000B6                     ??_Cracks:
  1843                           
  1844                           ; 1 bytes @ 0x36
  1845  0000B6                     	ds	2
  1846                           
  1847                           	psect	cstackCOMRAM
  1848  000001                     __pcstackCOMRAM:
  1849                           	opt callstack 0
  1850  000001                     ??i2_I2C_Master_Wait:
  1851  000001                     ??i2_isdigit:
  1852  000001                     ?i2___wmul:
  1853                           	opt callstack 0
  1854  000001                     ?i2___lwdiv:
  1855                           	opt callstack 0
  1856  000001                     ?i2___lldiv:
  1857                           	opt callstack 0
  1858  000001                     ?i2___almod:
  1859                           	opt callstack 0
  1860  000001                     ?i2___fladd:
  1861                           	opt callstack 0
  1862  000001                     ?i2___fldiv:
  1863                           	opt callstack 0
  1864  000001                     i2pulse_e@interruptState:
  1865                           	opt callstack 0
  1866  000001                     i2___wmul@multiplier:
  1867                           	opt callstack 0
  1868  000001                     i2___lwdiv@dividend:
  1869                           	opt callstack 0
  1870  000001                     i2___lldiv@dividend:
  1871                           	opt callstack 0
  1872  000001                     i2___almod@dividend:
  1873                           	opt callstack 0
  1874  000001                     i2___fladd@b:
  1875                           	opt callstack 0
  1876  000001                     i2___fldiv@b:
  1877                           	opt callstack 0
  1878                           
  1879                           ; 4 bytes @ 0x0
  1880  000001                     	ds	1
  1881  000002                     i2I2C_Master_Read@ackBit:
  1882                           	opt callstack 0
  1883  000002                     i2send_nibble@data:
  1884                           	opt callstack 0
  1885  000002                     i2_isdigit$2496:
  1886                           	opt callstack 0
  1887  000002                     i2I2C_Master_Write@byteToWrite:
  1888                           	opt callstack 0
  1889                           
  1890                           ; 2 bytes @ 0x1
  1891  000002                     	ds	1
  1892  000003                     i2I2C_Master_Read@receivedByte:
  1893                           	opt callstack 0
  1894  000003                     i2send_byte@data:
  1895                           	opt callstack 0
  1896  000003                     i2isdigit@c:
  1897                           	opt callstack 0
  1898  000003                     i2___wmul@multiplicand:
  1899                           	opt callstack 0
  1900  000003                     i2___lwdiv@divisor:
  1901                           	opt callstack 0
  1902                           
  1903                           ; 2 bytes @ 0x2
  1904  000003                     	ds	1
  1905  000004                     i2lcdInst@data:
  1906                           	opt callstack 0
  1907  000004                     i2putch@data:
  1908                           	opt callstack 0
  1909                           
  1910                           ; 1 bytes @ 0x3
  1911  000004                     	ds	1
  1912  000005                     i2___wmul@product:
  1913                           	opt callstack 0
  1914  000005                     i2___lwdiv@quotient:
  1915                           	opt callstack 0
  1916  000005                     i2___lldiv@divisor:
  1917                           	opt callstack 0
  1918  000005                     i2___almod@divisor:
  1919                           	opt callstack 0
  1920  000005                     i2___fladd@a:
  1921                           	opt callstack 0
  1922  000005                     i2___fldiv@a:
  1923                           	opt callstack 0
  1924                           
  1925                           ; 4 bytes @ 0x4
  1926  000005                     	ds	2
  1927  000007                     i2___lwdiv@counter:
  1928                           	opt callstack 0
  1929                           
  1930                           ; 1 bytes @ 0x6
  1931  000007                     	ds	1
  1932  000008                     ?i2___lwmod:
  1933                           	opt callstack 0
  1934  000008                     i2___lwmod@dividend:
  1935                           	opt callstack 0
  1936                           
  1937                           ; 2 bytes @ 0x7
  1938  000008                     	ds	1
  1939  000009                     ??i2___fladd:
  1940  000009                     ??i2___fldiv:
  1941  000009                     i2___almod@counter:
  1942                           	opt callstack 0
  1943  000009                     i2___lldiv@quotient:
  1944                           	opt callstack 0
  1945                           
  1946                           ; 4 bytes @ 0x8
  1947  000009                     	ds	1
  1948  00000A                     i2___almod@sign:
  1949                           	opt callstack 0
  1950  00000A                     i2___lwmod@divisor:
  1951                           	opt callstack 0
  1952                           
  1953                           ; 2 bytes @ 0x9
  1954  00000A                     	ds	1
  1955  00000B                     ?i2___aldiv:
  1956                           	opt callstack 0
  1957  00000B                     i2___aldiv@dividend:
  1958                           	opt callstack 0
  1959                           
  1960                           ; 4 bytes @ 0xA
  1961  00000B                     	ds	1
  1962  00000C                     i2___lwmod@counter:
  1963                           	opt callstack 0
  1964                           
  1965                           ; 1 bytes @ 0xB
  1966  00000C                     	ds	1
  1967  00000D                     ?i2_printf:
  1968                           	opt callstack 0
  1969  00000D                     i2___lldiv@counter:
  1970                           	opt callstack 0
  1971  00000D                     i2___fladd@signs:
  1972                           	opt callstack 0
  1973  00000D                     i2printf@f:
  1974                           	opt callstack 0
  1975  00000D                     i2___fldiv@rem:
  1976                           	opt callstack 0
  1977                           
  1978                           ; 4 bytes @ 0xC
  1979  00000D                     	ds	1
  1980  00000E                     i2___fladd@aexp:
  1981                           	opt callstack 0
  1982  00000E                     i2I2C_Master_Init@clockFreq:
  1983                           	opt callstack 0
  1984                           
  1985                           ; 4 bytes @ 0xD
  1986  00000E                     	ds	1
  1987  00000F                     ??i2_printf:
  1988  00000F                     i2___fladd@bexp:
  1989                           	opt callstack 0
  1990  00000F                     i2___aldiv@divisor:
  1991                           	opt callstack 0
  1992                           
  1993                           ; 4 bytes @ 0xE
  1994  00000F                     	ds	1
  1995  000010                     i2___fladd@grs:
  1996                           	opt callstack 0
  1997                           
  1998                           ; 1 bytes @ 0xF
  1999  000010                     	ds	1
  2000  000011                     i2___fldiv@sign:
  2001                           	opt callstack 0
  2002                           
  2003                           ; 1 bytes @ 0x10
  2004  000011                     	ds	1
  2005  000012                     ??i2_I2C_Master_Init:
  2006  000012                     i2___fldiv@new_exp:
  2007                           	opt callstack 0
  2008                           
  2009                           ; 2 bytes @ 0x11
  2010  000012                     	ds	1
  2011  000013                     i2___aldiv@counter:
  2012                           	opt callstack 0
  2013  000013                     i2printf@ap:
  2014                           	opt callstack 0
  2015                           
  2016                           ; 2 bytes @ 0x12
  2017  000013                     	ds	1
  2018  000014                     i2___aldiv@sign:
  2019                           	opt callstack 0
  2020  000014                     i2___fldiv@grs:
  2021                           	opt callstack 0
  2022                           
  2023                           ; 4 bytes @ 0x13
  2024  000014                     	ds	1
  2025  000015                     i2printf@prec:
  2026                           	opt callstack 0
  2027  000015                     i2___aldiv@quotient:
  2028                           	opt callstack 0
  2029                           
  2030                           ; 4 bytes @ 0x14
  2031  000015                     	ds	1
  2032  000016                     ??i2_readRTC:
  2033  000016                     i2printf@val:
  2034                           	opt callstack 0
  2035                           
  2036                           ; 2 bytes @ 0x15
  2037  000016                     	ds	1
  2038  000017                     i2readRTC@i:
  2039                           	opt callstack 0
  2040                           
  2041                           ; 1 bytes @ 0x16
  2042  000017                     	ds	1
  2043  000018                     i2readRTC@t_data:
  2044                           	opt callstack 0
  2045  000018                     i2printf@flag:
  2046                           	opt callstack 0
  2047  000018                     i2___fldiv@bexp:
  2048                           	opt callstack 0
  2049                           
  2050                           ; 1 bytes @ 0x17
  2051  000018                     	ds	1
  2052  000019                     ??i2_normal_updater:
  2053  000019                     i2___fldiv@aexp:
  2054                           	opt callstack 0
  2055  000019                     i2printf@width:
  2056                           	opt callstack 0
  2057                           
  2058                           ; 2 bytes @ 0x18
  2059  000019                     	ds	2
  2060  00001B                     i2printf@c:
  2061                           	opt callstack 0
  2062  00001B                     i2_normal_updater$2898:
  2063                           	opt callstack 0
  2064                           
  2065                           ; 4 bytes @ 0x1A
  2066  00001B                     	ds	1
  2067  00001C                     ??i2_initmoving_disp:
  2068                           
  2069                           ; 1 bytes @ 0x1B
  2070  00001C                     	ds	3
  2071  00001F                     ??_initialize_func:
  2072                           
  2073                           ; 1 bytes @ 0x1E
  2074  00001F                     	ds	2
  2075  000021                     initialize_func@g:
  2076                           	opt callstack 0
  2077                           
  2078                           ; 2 bytes @ 0x20
  2079  000021                     	ds	2
  2080  000023                     ??_interruptHandler:
  2081                           
  2082                           ; 1 bytes @ 0x22
  2083  000023                     	ds	13
  2084  000030                     interruptHandler@b0:
  2085                           	opt callstack 0
  2086                           
  2087                           ; 2 bytes @ 0x2F
  2088  000030                     	ds	2
  2089  000032                     interruptHandler@keypress:
  2090                           	opt callstack 0
  2091                           
  2092                           ; 1 bytes @ 0x31
  2093  000032                     	ds	1
  2094  000033                     interruptHandler@command:
  2095                           	opt callstack 0
  2096                           
  2097                           ; 1 bytes @ 0x32
  2098  000033                     	ds	1
  2099                           
  2100 ;;
  2101 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2102 ;;
  2103 ;; *************** function _main *****************
  2104 ;; Defined at:
  2105 ;;		line 12 in file "main.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  ticks           4   12[BANK1 ] unsigned long 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;Total ram usage:        6 bytes
  2124 ;; Hardware stack levels required when called:   16
  2125 ;; This function calls:
  2126 ;;		_Stop
  2127 ;;		___awdiv
  2128 ;;		___awmod
  2129 ;;		___flge
  2130 ;;		___llmod
  2131 ;;		___wmul
  2132 ;;		_clear_finish
  2133 ;;		_clear_select
  2134 ;;		_completion_return
  2135 ;;		_configureports
  2136 ;;		_data_disp
  2137 ;;		_data_select
  2138 ;;		_drop_function
  2139 ;;		_initLCD
  2140 ;;		_initmoving_disp
  2141 ;;		_lcdInst
  2142 ;;		_moving
  2143 ;;		_normal_updater
  2144 ;;		_printf
  2145 ;;		_read_encoder
  2146 ;;		_read_total
  2147 ;;		_sensed_function_3
  2148 ;;		_standby_rotating
  2149 ;; This function is called by:
  2150 ;;		Startup code after reset
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text0
  2155  000012                     __ptext0:
  2156                           	opt callstack 0
  2157  000012                     _main:
  2158                           	opt callstack 15
  2159                           
  2160                           ;main.c: 13: configureports();
  2161                           
  2162                           ;incstack = 0
  2163  000012  EC04  F028         	call	_configureports	;wreg free
  2164                           
  2165                           ;main.c: 14: initLCD();
  2166  000016  ECB8  F024         	call	_initLCD	;wreg free
  2167                           
  2168                           ;main.c: 15: { lcdInst( (unsigned char)(8 | (1 << 2) | (0 << 1) | 0) );};
  2169  00001A  0E0C               	movlw	12
  2170  00001C  EC9A  F02A         	call	_lcdInst
  2171                           
  2172                           ;main.c: 16: unsigned long ticks = 0;
  2173  000020  0E00               	movlw	0
  2174  000022  0101               	movlb	1	; () banked
  2175  000024  6F9E               	movwf	main@ticks& (0+255),b
  2176  000026  0E00               	movlw	0
  2177  000028  6F9F               	movwf	(main@ticks+1)& (0+255),b
  2178  00002A  0E00               	movlw	0
  2179  00002C  6FA0               	movwf	(main@ticks+2)& (0+255),b
  2180  00002E  0E00               	movlw	0
  2181  000030  6FA1               	movwf	(main@ticks+3)& (0+255),b
  2182                           
  2183                           ; BSR set to: 1
  2184                           ;main.c: 17: total_op = read_total();
  2185  000032  ECEB  F025         	call	_read_total	;wreg free
  2186  000036  C088  F044         	movff	?_read_total,_total_op
  2187  00003A  C089  F045         	movff	?_read_total+1,_total_op+1
  2188  00003E                     l12196:
  2189                           
  2190                           ;main.c: 19: if(!key){
  2191  00003E  0100               	movlb	0	; () banked
  2192  000040  51E5               	movf	_key& (0+255),w,b
  2193  000042  A4D8               	btfss	status,2,c
  2194  000044  D1FE               	goto	l200
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 20: a = PORTBbits.RB2;
  2198  000046  A481               	btfss	3969,2,c	;volatile
  2199  000048  D004               	goto	u12360
  2200  00004A  0101               	movlb	1	; () banked
  2201  00004C  6B9C               	clrf	??_main& (0+255),b
  2202  00004E  2B9C               	incf	??_main& (0+255),f,b
  2203  000050  D002               	goto	u12368
  2204  000052                     u12360:
  2205  000052  0101               	movlb	1	; () banked
  2206  000054  6B9C               	clrf	??_main& (0+255),b
  2207  000056                     u12368:
  2208  000056  519C               	movf	??_main& (0+255),w,b
  2209  000058  0100               	movlb	0	; () banked
  2210  00005A  6FE0               	movwf	_a& (0+255),b
  2211  00005C  6BE1               	clrf	(_a+1)& (0+255),b
  2212                           
  2213                           ;main.c: 21: b = PORTBbits.RB3;
  2214  00005E  A681               	btfss	3969,3,c	;volatile
  2215  000060  D004               	goto	u12370
  2216  000062  0101               	movlb	1	; () banked
  2217  000064  6B9C               	clrf	??_main& (0+255),b
  2218  000066  2B9C               	incf	??_main& (0+255),f,b
  2219  000068  D002               	goto	u12378
  2220  00006A                     u12370:
  2221  00006A  0101               	movlb	1	; () banked
  2222  00006C  6B9C               	clrf	??_main& (0+255),b
  2223  00006E                     u12378:
  2224  00006E  519C               	movf	??_main& (0+255),w,b
  2225  000070  0100               	movlb	0	; () banked
  2226  000072  6FDE               	movwf	_b& (0+255),b
  2227  000074  6BDF               	clrf	(_b+1)& (0+255),b
  2228                           
  2229                           ;main.c: 22: c = PORTAbits.RA1;
  2230  000076  A280               	btfss	3968,1,c	;volatile
  2231  000078  D004               	goto	u12380
  2232  00007A  0101               	movlb	1	; () banked
  2233  00007C  6B9C               	clrf	??_main& (0+255),b
  2234  00007E  2B9C               	incf	??_main& (0+255),f,b
  2235  000080  D002               	goto	u12388
  2236  000082                     u12380:
  2237  000082  0101               	movlb	1	; () banked
  2238  000084  6B9C               	clrf	??_main& (0+255),b
  2239  000086                     u12388:
  2240  000086  519C               	movf	??_main& (0+255),w,b
  2241  000088  0100               	movlb	0	; () banked
  2242  00008A  6FDC               	movwf	_c& (0+255),b
  2243  00008C  6BDD               	clrf	(_c+1)& (0+255),b
  2244                           
  2245                           ; BSR set to: 0
  2246                           ;main.c: 23: read_encoder();
  2247  00008E  EC76  F021         	call	_read_encoder	;wreg free
  2248                           
  2249                           ;main.c: 24: if ((completion_bool == 0)&&((accum_straight_distance>=whole_distance)||(op
      +                          eration_sec>=170))){
  2250  000092  0100               	movlb	0	; () banked
  2251  000094  51FE               	movf	_completion_bool& (0+255),w,b
  2252  000096  A4D8               	btfss	status,2,c
  2253  000098  D024               	goto	l12212
  2254                           
  2255                           ; BSR set to: 0
  2256  00009A  C0C4  F098         	movff	_accum_straight_distance,___flge@ff1
  2257  00009E  C0C5  F099         	movff	_accum_straight_distance+1,___flge@ff1+1
  2258  0000A2  C0C6  F09A         	movff	_accum_straight_distance+2,___flge@ff1+2
  2259  0000A6  C0C7  F09B         	movff	_accum_straight_distance+3,___flge@ff1+3
  2260  0000AA  0E00               	movlw	0
  2261  0000AC  6F9C               	movwf	___flge@ff2& (0+255),b
  2262  0000AE  0E00               	movlw	0
  2263  0000B0  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  2264  0000B2  0E70               	movlw	112
  2265  0000B4  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  2266  0000B6  0E41               	movlw	65
  2267  0000B8  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  2268  0000BA  ECF6  F01D         	call	___flge	;wreg free
  2269  0000BE  0100               	movlb	0	; () banked
  2270  0000C0  B0D8               	btfsc	status,0,c
  2271  0000C2  D00A               	goto	u12410
  2272                           
  2273                           ; BSR set to: 0
  2274  0000C4  BFBB               	btfsc	(_operation_sec+3)& (0+255),7,b
  2275  0000C6  D00D               	goto	l12212
  2276  0000C8  51BB               	movf	(_operation_sec+3)& (0+255),w,b
  2277  0000CA  11BA               	iorwf	(_operation_sec+2)& (0+255),w,b
  2278  0000CC  11B9               	iorwf	(_operation_sec+1)& (0+255),w,b
  2279  0000CE  E104               	bnz	u12410
  2280  0000D0  0EAA               	movlw	170
  2281  0000D2  5DB8               	subwf	_operation_sec& (0+255),w,b
  2282  0000D4  A0D8               	btfss	status,0,c
  2283  0000D6  D005               	goto	l12212
  2284  0000D8                     u12410:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 25: Stop();
  2288  0000D8  ECAA  F02A         	call	_Stop	;wreg free
  2289                           
  2290                           ;main.c: 26: completion_return();
  2291  0000DC  EC0A  F004         	call	_completion_return	;wreg free
  2292                           
  2293                           ;main.c: 27: }
  2294  0000E0  D1A8               	goto	l12320
  2295  0000E2                     l12212:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;main.c: 28: else if((no_cone == 0)&&(completion_bool == 0)&&(drop_identity[drop_index]!
      +                          =0)&&(accum_straight_distance >= drop_position[drop_index])){
  2299  0000E2  51E6               	movf	_no_cone& (0+255),w,b
  2300  0000E4  A4D8               	btfss	status,2,c
  2301  0000E6  D03D               	goto	l12224
  2302                           
  2303                           ; BSR set to: 0
  2304  0000E8  51FE               	movf	_completion_bool& (0+255),w,b
  2305  0000EA  A4D8               	btfss	status,2,c
  2306  0000EC  D03A               	goto	l12224
  2307                           
  2308                           ; BSR set to: 0
  2309  0000EE  90D8               	bcf	status,0,c
  2310  0000F0  35D8               	rlcf	_drop_index& (0+255),w,b
  2311  0000F2  6ED9               	movwf	fsr2l,c
  2312  0000F4  35D9               	rlcf	(_drop_index+1)& (0+255),w,b
  2313  0000F6  6EDA               	movwf	fsr2h,c
  2314  0000F8  0E60               	movlw	low _drop_identity
  2315  0000FA  26D9               	addwf	fsr2l,f,c
  2316  0000FC  0E01               	movlw	high _drop_identity
  2317  0000FE  22DA               	addwfc	fsr2h,f,c
  2318  000100  50DE               	movf	postinc2,w,c
  2319  000102  10DE               	iorwf	postinc2,w,c
  2320  000104  B4D8               	btfsc	status,2,c
  2321  000106  D02D               	goto	l12224
  2322                           
  2323                           ; BSR set to: 0
  2324  000108  C0C4  F098         	movff	_accum_straight_distance,___flge@ff1
  2325  00010C  C0C5  F099         	movff	_accum_straight_distance+1,___flge@ff1+1
  2326  000110  C0C6  F09A         	movff	_accum_straight_distance+2,___flge@ff1+2
  2327  000114  C0C7  F09B         	movff	_accum_straight_distance+3,___flge@ff1+3
  2328  000118  0E00               	movlw	low _drop_position
  2329  00011A  0101               	movlb	1	; () banked
  2330  00011C  6F9C               	movwf	??_main& (0+255),b
  2331  00011E  0E01               	movlw	high _drop_position
  2332  000120  6F9D               	movwf	(??_main+1)& (0+255),b
  2333  000122  90D8               	bcf	status,0,c
  2334  000124  0100               	movlb	0	; () banked
  2335  000126  35D8               	rlcf	_drop_index& (0+255),w,b
  2336  000128  6ED9               	movwf	fsr2l,c
  2337  00012A  35D9               	rlcf	(_drop_index+1)& (0+255),w,b
  2338  00012C  6EDA               	movwf	fsr2h,c
  2339  00012E  90D8               	bcf	status,0,c
  2340  000130  36D9               	rlcf	fsr2l,f,c
  2341  000132  36DA               	rlcf	fsr2h,f,c
  2342  000134  0101               	movlb	1	; () banked
  2343  000136  519C               	movf	??_main& (0+255),w,b
  2344  000138  26D9               	addwf	fsr2l,f,c
  2345  00013A  519D               	movf	(??_main+1)& (0+255),w,b
  2346  00013C  22DA               	addwfc	fsr2h,f,c
  2347  00013E  CFDE F09C          	movff	postinc2,___flge@ff2
  2348  000142  CFDE F09D          	movff	postinc2,___flge@ff2+1
  2349  000146  CFDE F09E          	movff	postinc2,___flge@ff2+2
  2350  00014A  CFDE F09F          	movff	postinc2,___flge@ff2+3
  2351  00014E  ECF6  F01D         	call	___flge	;wreg free
  2352  000152  0100               	movlb	0	; () banked
  2353  000154  A0D8               	btfss	status,0,c
  2354  000156  D005               	goto	l12224
  2355                           
  2356                           ; BSR set to: 0
  2357                           ;main.c: 29: Stop();
  2358  000158  ECAA  F02A         	call	_Stop	;wreg free
  2359                           
  2360                           ;main.c: 30: drop_function();
  2361  00015C  ECDA  F020         	call	_drop_function	;wreg free
  2362                           
  2363                           ;main.c: 31: }
  2364  000160  D168               	goto	l12320
  2365  000162                     l12224:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;main.c: 32: else if((completion_bool==0)&&(a+b+c > 0)){
  2369  000162  51FE               	movf	_completion_bool& (0+255),w,b
  2370  000164  A4D8               	btfss	status,2,c
  2371  000166  D01C               	goto	l12234
  2372                           
  2373                           ; BSR set to: 0
  2374  000168  51DE               	movf	_b& (0+255),w,b
  2375  00016A  25E0               	addwf	_a& (0+255),w,b
  2376  00016C  0101               	movlb	1	; () banked
  2377  00016E  6F9C               	movwf	??_main& (0+255),b
  2378  000170  0100               	movlb	0	; () banked
  2379  000172  51DF               	movf	(_b+1)& (0+255),w,b
  2380  000174  21E1               	addwfc	(_a+1)& (0+255),w,b
  2381  000176  0101               	movlb	1	; () banked
  2382  000178  6F9D               	movwf	(??_main+1)& (0+255),b
  2383  00017A  0100               	movlb	0	; () banked
  2384  00017C  51DC               	movf	_c& (0+255),w,b
  2385  00017E  0101               	movlb	1	; () banked
  2386  000180  279C               	addwf	??_main& (0+255),f,b
  2387  000182  0100               	movlb	0	; () banked
  2388  000184  51DD               	movf	(_c+1)& (0+255),w,b
  2389  000186  0101               	movlb	1	; () banked
  2390  000188  239D               	addwfc	(??_main+1)& (0+255),f,b
  2391  00018A  519C               	movf	??_main& (0+255),w,b
  2392  00018C  119D               	iorwf	(??_main+1)& (0+255),w,b
  2393  00018E  B4D8               	btfsc	status,2,c
  2394  000190  D007               	goto	l12234
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;main.c: 33: Stop();
  2398  000192  ECAA  F02A         	call	_Stop	;wreg free
  2399                           
  2400                           ;main.c: 34: sensed_function_3();
  2401  000196  ECEE  F018         	call	_sensed_function_3	;wreg free
  2402                           
  2403                           ;main.c: 35: initmoving_disp();
  2404  00019A  EC45  F029         	call	_initmoving_disp	;wreg free
  2405                           
  2406                           ;main.c: 36: }
  2407  00019E  D149               	goto	l12320
  2408  0001A0                     l12234:
  2409                           
  2410                           ;main.c: 37: else if(completion_bool == 0){
  2411  0001A0  0100               	movlb	0	; () banked
  2412  0001A2  51FE               	movf	_completion_bool& (0+255),w,b
  2413  0001A4  A4D8               	btfss	status,2,c
  2414  0001A6  D01F               	goto	l12242
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;main.c: 38: moving();
  2418  0001A8  ECFE  F029         	call	_moving	;wreg free
  2419                           
  2420                           ;main.c: 39: if (ticks%1000 == 0){
  2421  0001AC  C19E  F080         	movff	main@ticks,___llmod@dividend
  2422  0001B0  C19F  F081         	movff	main@ticks+1,___llmod@dividend+1
  2423  0001B4  C1A0  F082         	movff	main@ticks+2,___llmod@dividend+2
  2424  0001B8  C1A1  F083         	movff	main@ticks+3,___llmod@dividend+3
  2425  0001BC  0EE8               	movlw	232
  2426  0001BE  0100               	movlb	0	; () banked
  2427  0001C0  6F84               	movwf	___llmod@divisor& (0+255),b
  2428  0001C2  0E03               	movlw	3
  2429  0001C4  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  2430  0001C6  0E00               	movlw	0
  2431  0001C8  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  2432  0001CA  0E00               	movlw	0
  2433  0001CC  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  2434  0001CE  EC24  F025         	call	___llmod	;wreg free
  2435  0001D2  0100               	movlb	0	; () banked
  2436  0001D4  5180               	movf	?___llmod& (0+255),w,b
  2437  0001D6  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  2438  0001D8  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  2439  0001DA  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  2440  0001DC  A4D8               	btfss	status,2,c
  2441  0001DE  D129               	goto	l12320
  2442                           
  2443                           ; BSR set to: 0
  2444                           ;main.c: 40: normal_updater();
  2445  0001E0  ECBD  F01C         	call	_normal_updater	;wreg free
  2446                           
  2447                           ; BSR set to: 0
  2448                           ;main.c: 41: };main.c: 42: }
  2449  0001E4  D126               	goto	l12320
  2450  0001E6                     l12242:
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 43: else if ((completion_bool == 1)&&(ticks%3000 == 0)) {
  2454  0001E6  05FE               	decf	_completion_bool& (0+255),w,b
  2455  0001E8  A4D8               	btfss	status,2,c
  2456  0001EA  D123               	goto	l12320
  2457                           
  2458                           ; BSR set to: 0
  2459  0001EC  C19E  F080         	movff	main@ticks,___llmod@dividend
  2460  0001F0  C19F  F081         	movff	main@ticks+1,___llmod@dividend+1
  2461  0001F4  C1A0  F082         	movff	main@ticks+2,___llmod@dividend+2
  2462  0001F8  C1A1  F083         	movff	main@ticks+3,___llmod@dividend+3
  2463  0001FC  0EB8               	movlw	184
  2464  0001FE  6F84               	movwf	___llmod@divisor& (0+255),b
  2465  000200  0E0B               	movlw	11
  2466  000202  6F85               	movwf	(___llmod@divisor+1)& (0+255),b
  2467  000204  0E00               	movlw	0
  2468  000206  6F86               	movwf	(___llmod@divisor+2)& (0+255),b
  2469  000208  0E00               	movlw	0
  2470  00020A  6F87               	movwf	(___llmod@divisor+3)& (0+255),b
  2471  00020C  EC24  F025         	call	___llmod	;wreg free
  2472  000210  0100               	movlb	0	; () banked
  2473  000212  5180               	movf	?___llmod& (0+255),w,b
  2474  000214  1181               	iorwf	(?___llmod+1)& (0+255),w,b
  2475  000216  1182               	iorwf	(?___llmod+2)& (0+255),w,b
  2476  000218  1183               	iorwf	(?___llmod+3)& (0+255),w,b
  2477  00021A  A4D8               	btfss	status,2,c
  2478  00021C  D10A               	goto	l12320
  2479                           
  2480                           ; BSR set to: 0
  2481                           ;main.c: 44: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2482  00021E  0E01               	movlw	1
  2483  000220  EC9A  F02A         	call	_lcdInst
  2484  000224  0E11               	movlw	17
  2485  000226  0101               	movlb	1	; () banked
  2486  000228  6F9C               	movwf	??_main& (0+255),b
  2487  00022A  0E3A               	movlw	58
  2488  00022C                     u12797:
  2489  00022C  2EE8               	decfsz	wreg,f,c
  2490  00022E  D7FE               	bra	u12797
  2491  000230  2F9C               	decfsz	??_main& (0+255),f,b
  2492  000232  D7FC               	bra	u12797
  2493  000234  F000               	nop	
  2494                           
  2495                           ;main.c: 45: if (reg == 0){
  2496  000236  0100               	movlb	0	; () banked
  2497  000238  51D0               	movf	_reg& (0+255),w,b
  2498  00023A  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2499  00023C  A4D8               	btfss	status,2,c
  2500  00023E  D003               	goto	l12254
  2501                           
  2502                           ; BSR set to: 0
  2503                           ;main.c: 46: standby_rotating();
  2504  000240  EC4A  F022         	call	_standby_rotating	;wreg free
  2505                           
  2506                           ;main.c: 47: }
  2507  000244  D0F6               	goto	l12320
  2508  000246                     l12254:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;main.c: 48: else if ((reg == 10) ||(reg == 20)||(reg == 30)||(reg ==40)){
  2512  000246  0E0A               	movlw	10
  2513  000248  19D0               	xorwf	_reg& (0+255),w,b
  2514  00024A  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2515  00024C  B4D8               	btfsc	status,2,c
  2516  00024E  D00F               	goto	u12560
  2517                           
  2518                           ; BSR set to: 0
  2519  000250  0E14               	movlw	20
  2520  000252  19D0               	xorwf	_reg& (0+255),w,b
  2521  000254  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2522  000256  B4D8               	btfsc	status,2,c
  2523  000258  D00A               	goto	u12560
  2524                           
  2525                           ; BSR set to: 0
  2526  00025A  0E1E               	movlw	30
  2527  00025C  19D0               	xorwf	_reg& (0+255),w,b
  2528  00025E  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2529  000260  B4D8               	btfsc	status,2,c
  2530  000262  D005               	goto	u12560
  2531                           
  2532                           ; BSR set to: 0
  2533  000264  0E28               	movlw	40
  2534  000266  19D0               	xorwf	_reg& (0+255),w,b
  2535  000268  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2536  00026A  A4D8               	btfss	status,2,c
  2537  00026C  D050               	goto	l12286
  2538  00026E                     u12560:
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;main.c: 49: data_select();
  2542  00026E  ECA0  F026         	call	_data_select	;wreg free
  2543                           
  2544                           ;main.c: 50: if ((ddp ==0)&&(reg%10==0)){
  2545  000272  0100               	movlb	0	; () banked
  2546  000274  51D2               	movf	_ddp& (0+255),w,b
  2547  000276  11D3               	iorwf	(_ddp+1)& (0+255),w,b
  2548  000278  A4D8               	btfss	status,2,c
  2549  00027A  D011               	goto	l12270
  2550                           
  2551                           ; BSR set to: 0
  2552  00027C  C0D0  F080         	movff	_reg,___awmod@dividend
  2553  000280  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
  2554  000284  0E00               	movlw	0
  2555  000286  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2556  000288  0E0A               	movlw	10
  2557  00028A  6F82               	movwf	___awmod@divisor& (0+255),b
  2558  00028C  EC7F  F024         	call	___awmod	;wreg free
  2559  000290  0100               	movlb	0	; () banked
  2560  000292  5180               	movf	?___awmod& (0+255),w,b
  2561  000294  1181               	iorwf	(?___awmod+1)& (0+255),w,b
  2562  000296  A4D8               	btfss	status,2,c
  2563  000298  D002               	goto	l12270
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;main.c: 51: display_repeat +=1;
  2567  00029A  4BCE               	infsnz	_display_repeat& (0+255),f,b
  2568  00029C  2BCF               	incf	(_display_repeat+1)& (0+255),f,b
  2569  00029E                     l12270:
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 52: };main.c: 53: if (display_repeat > 1){
  2573  00029E  BFCF               	btfsc	(_display_repeat+1)& (0+255),7,b
  2574  0002A0  D0C8               	goto	l12320
  2575  0002A2  51CF               	movf	(_display_repeat+1)& (0+255),w,b
  2576  0002A4  E104               	bnz	u12590
  2577  0002A6  0E02               	movlw	2
  2578  0002A8  5DCE               	subwf	_display_repeat& (0+255),w,b
  2579  0002AA  A0D8               	btfss	status,0,c
  2580  0002AC  D0C2               	goto	l12320
  2581  0002AE                     u12590:
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;main.c: 54: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  2585  0002AE  0E01               	movlw	1
  2586  0002B0  EC9A  F02A         	call	_lcdInst
  2587  0002B4  0E11               	movlw	17
  2588  0002B6  0101               	movlb	1	; () banked
  2589  0002B8  6F9C               	movwf	??_main& (0+255),b
  2590  0002BA  0E3A               	movlw	58
  2591  0002BC                     u12807:
  2592  0002BC  2EE8               	decfsz	wreg,f,c
  2593  0002BE  D7FE               	bra	u12807
  2594  0002C0  2F9C               	decfsz	??_main& (0+255),f,b
  2595  0002C2  D7FC               	bra	u12807
  2596  0002C4  F000               	nop	
  2597                           
  2598                           ;main.c: 55: printf("Returning to");
  2599  0002C6  0EC7               	movlw	low STR_1
  2600  0002C8  0100               	movlb	0	; () banked
  2601  0002CA  6F8E               	movwf	printf@f& (0+255),b
  2602  0002CC  0EFE               	movlw	high STR_1
  2603  0002CE  6F8F               	movwf	(printf@f+1)& (0+255),b
  2604  0002D0  EC81  F010         	call	_printf	;wreg free
  2605  0002D4  0EC0               	movlw	192
  2606  0002D6  EC9A  F02A         	call	_lcdInst
  2607                           
  2608                           ;main.c: 57: printf("the Main Menu...");
  2609  0002DA  0EAE               	movlw	low STR_2
  2610  0002DC  0100               	movlb	0	; () banked
  2611  0002DE  6F8E               	movwf	printf@f& (0+255),b
  2612  0002E0  0EFD               	movlw	high STR_2
  2613  0002E2  6F8F               	movwf	(printf@f+1)& (0+255),b
  2614  0002E4  EC81  F010         	call	_printf	;wreg free
  2615                           
  2616                           ;main.c: 58: _delay((unsigned long)((500)*(10000000/4000.0)));
  2617  0002E8  0E07               	movlw	7
  2618  0002EA  0101               	movlb	1	; () banked
  2619  0002EC  6F9D               	movwf	(??_main+1)& (0+255),b
  2620  0002EE  0E58               	movlw	88
  2621  0002F0  6F9C               	movwf	??_main& (0+255),b
  2622  0002F2  0E59               	movlw	89
  2623  0002F4                     u12817:
  2624  0002F4  2EE8               	decfsz	wreg,f,c
  2625  0002F6  D7FE               	bra	u12817
  2626  0002F8  2F9C               	decfsz	??_main& (0+255),f,b
  2627  0002FA  D7FC               	bra	u12817
  2628  0002FC  2F9D               	decfsz	(??_main+1)& (0+255),f,b
  2629  0002FE  D7FA               	bra	u12817
  2630  000300  D000               	nop2	
  2631                           
  2632                           ;main.c: 59: display_repeat = 0;
  2633  000302  0E00               	movlw	0
  2634  000304  0100               	movlb	0	; () banked
  2635  000306  6FCF               	movwf	(_display_repeat+1)& (0+255),b
  2636  000308  0E00               	movlw	0
  2637  00030A  6FCE               	movwf	_display_repeat& (0+255),b
  2638  00030C  D07D               	goto	L1
  2639  00030E                     l12286:
  2640                           
  2641                           ; BSR set to: 0
  2642                           ;main.c: 62: else if ((reg/10 > 0)&&(reg/10 < 5)&&(reg%10 > 0)){
  2643  00030E  C0D0  F080         	movff	_reg,___awdiv@dividend
  2644  000312  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  2645  000316  0E00               	movlw	0
  2646  000318  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2647  00031A  0E0A               	movlw	10
  2648  00031C  6F82               	movwf	___awdiv@divisor& (0+255),b
  2649  00031E  EC8D  F022         	call	___awdiv	;wreg free
  2650  000322  0100               	movlb	0	; () banked
  2651  000324  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  2652  000326  D04C               	goto	l12298
  2653  000328  5181               	movf	(?___awdiv+1)& (0+255),w,b
  2654  00032A  E103               	bnz	u12600
  2655  00032C  0580               	decf	?___awdiv& (0+255),w,b
  2656  00032E  A0D8               	btfss	status,0,c
  2657  000330  D047               	goto	l12298
  2658  000332                     u12600:
  2659                           
  2660                           ; BSR set to: 0
  2661  000332  C0D0  F080         	movff	_reg,___awdiv@dividend
  2662  000336  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  2663  00033A  0E00               	movlw	0
  2664  00033C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2665  00033E  0E0A               	movlw	10
  2666  000340  6F82               	movwf	___awdiv@divisor& (0+255),b
  2667  000342  EC8D  F022         	call	___awdiv	;wreg free
  2668  000346  0100               	movlb	0	; () banked
  2669  000348  BF81               	btfsc	(?___awdiv+1)& (0+255),7,b
  2670  00034A  D006               	goto	u12610
  2671  00034C  5181               	movf	(?___awdiv+1)& (0+255),w,b
  2672  00034E  E138               	bnz	l12298
  2673  000350  0E05               	movlw	5
  2674  000352  5D80               	subwf	?___awdiv& (0+255),w,b
  2675  000354  B0D8               	btfsc	status,0,c
  2676  000356  D034               	goto	l12298
  2677  000358                     u12610:
  2678                           
  2679                           ; BSR set to: 0
  2680  000358  C0D0  F080         	movff	_reg,___awmod@dividend
  2681  00035C  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
  2682  000360  0E00               	movlw	0
  2683  000362  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  2684  000364  0E0A               	movlw	10
  2685  000366  6F82               	movwf	___awmod@divisor& (0+255),b
  2686  000368  EC7F  F024         	call	___awmod	;wreg free
  2687  00036C  0100               	movlb	0	; () banked
  2688  00036E  BF81               	btfsc	(?___awmod+1)& (0+255),7,b
  2689  000370  D027               	goto	l12298
  2690  000372  5181               	movf	(?___awmod+1)& (0+255),w,b
  2691  000374  E103               	bnz	u12620
  2692  000376  0580               	decf	?___awmod& (0+255),w,b
  2693  000378  A0D8               	btfss	status,0,c
  2694  00037A  D022               	goto	l12298
  2695  00037C                     u12620:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 63: data_disp();
  2699  00037C  EC94  F007         	call	_data_disp	;wreg free
  2700                           
  2701                           ;main.c: 64: reg = (reg/10)*10;
  2702  000380  0E00               	movlw	0
  2703  000382  0100               	movlb	0	; () banked
  2704  000384  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2705  000386  0E0A               	movlw	10
  2706  000388  6F82               	movwf	___awdiv@divisor& (0+255),b
  2707  00038A  C0D0  F080         	movff	_reg,___awdiv@dividend
  2708  00038E  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  2709  000392  EC8D  F022         	call	___awdiv	;wreg free
  2710  000396  C080  F088         	movff	?___awdiv,___wmul@multiplier
  2711  00039A  C081  F089         	movff	?___awdiv+1,___wmul@multiplier+1
  2712  00039E  0E00               	movlw	0
  2713  0003A0  0100               	movlb	0	; () banked
  2714  0003A2  6F8B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2715  0003A4  0E0A               	movlw	10
  2716  0003A6  6F8A               	movwf	___wmul@multiplicand& (0+255),b
  2717  0003A8  EC59  F029         	call	___wmul	;wreg free
  2718  0003AC  C088  F0D0         	movff	?___wmul,_reg
  2719  0003B0  C089  F0D1         	movff	?___wmul+1,_reg+1
  2720                           
  2721                           ;main.c: 65: display_repeat = 0;
  2722  0003B4  0E00               	movlw	0
  2723  0003B6  0100               	movlb	0	; () banked
  2724  0003B8  6FCF               	movwf	(_display_repeat+1)& (0+255),b
  2725  0003BA  0E00               	movlw	0
  2726  0003BC  6FCE               	movwf	_display_repeat& (0+255),b
  2727                           
  2728                           ;main.c: 66: }
  2729  0003BE  D039               	goto	l12320
  2730  0003C0                     l12298:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;main.c: 67: else if (reg ==50){
  2734  0003C0  0E32               	movlw	50
  2735  0003C2  19D0               	xorwf	_reg& (0+255),w,b
  2736  0003C4  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2737  0003C6  A4D8               	btfss	status,2,c
  2738  0003C8  D024               	goto	l12312
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;main.c: 68: clear_select();
  2742  0003CA  ECB7  F029         	call	_clear_select	;wreg free
  2743  0003CE  0E90               	movlw	144
  2744  0003D0  EC9A  F02A         	call	_lcdInst
  2745                           
  2746                           ;main.c: 70: printf("exit in %d sec",clear_waiter);
  2747  0003D4  0E5A               	movlw	low STR_3
  2748  0003D6  0100               	movlb	0	; () banked
  2749  0003D8  6F8E               	movwf	printf@f& (0+255),b
  2750  0003DA  0EFE               	movlw	high STR_3
  2751  0003DC  6F8F               	movwf	(printf@f+1)& (0+255),b
  2752  0003DE  C0FC  F090         	movff	_clear_waiter,?_printf+2
  2753  0003E2  C0FD  F091         	movff	_clear_waiter+1,?_printf+3
  2754  0003E6  EC81  F010         	call	_printf	;wreg free
  2755                           
  2756                           ;main.c: 71: clear_waiter = clear_waiter - 1;
  2757  0003EA  0EFF               	movlw	255
  2758  0003EC  0100               	movlb	0	; () banked
  2759  0003EE  25FC               	addwf	_clear_waiter& (0+255),w,b
  2760  0003F0  6FFC               	movwf	_clear_waiter& (0+255),b
  2761  0003F2  0EFF               	movlw	255
  2762  0003F4  21FD               	addwfc	(_clear_waiter+1)& (0+255),w,b
  2763  0003F6  6FFD               	movwf	(_clear_waiter+1)& (0+255),b
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;main.c: 72: if (clear_waiter ==0){
  2767  0003F8  51FC               	movf	_clear_waiter& (0+255),w,b
  2768  0003FA  11FD               	iorwf	(_clear_waiter+1)& (0+255),w,b
  2769  0003FC  A4D8               	btfss	status,2,c
  2770  0003FE  D019               	goto	l12320
  2771                           
  2772                           ; BSR set to: 0
  2773                           ;main.c: 73: clear_waiter = 3;
  2774  000400  0E00               	movlw	0
  2775  000402  6FFD               	movwf	(_clear_waiter+1)& (0+255),b
  2776  000404  0E03               	movlw	3
  2777  000406  6FFC               	movwf	_clear_waiter& (0+255),b
  2778  000408                     L1:
  2779                           
  2780                           ;main.c: 74: reg = 0;
  2781  000408  0E00               	movlw	0
  2782  00040A  6FD1               	movwf	(_reg+1)& (0+255),b
  2783  00040C  0E00               	movlw	0
  2784  00040E  6FD0               	movwf	_reg& (0+255),b
  2785  000410  D010               	goto	l12320
  2786  000412                     l12312:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;main.c: 77: else if(reg ==51){
  2790  000412  0E33               	movlw	51
  2791  000414  19D0               	xorwf	_reg& (0+255),w,b
  2792  000416  11D1               	iorwf	(_reg+1)& (0+255),w,b
  2793  000418  A4D8               	btfss	status,2,c
  2794  00041A  D00B               	goto	l12320
  2795                           
  2796                           ; BSR set to: 0
  2797                           ;main.c: 78: clear_finish();
  2798  00041C  EC7E  F02A         	call	_clear_finish	;wreg free
  2799                           
  2800                           ;main.c: 79: reg =0;
  2801  000420  0E00               	movlw	0
  2802  000422  0100               	movlb	0	; () banked
  2803  000424  6FD1               	movwf	(_reg+1)& (0+255),b
  2804  000426  0E00               	movlw	0
  2805  000428  6FD0               	movwf	_reg& (0+255),b
  2806                           
  2807                           ; BSR set to: 0
  2808                           ;main.c: 80: clear_waiter =3;
  2809  00042A  0E00               	movlw	0
  2810  00042C  6FFD               	movwf	(_clear_waiter+1)& (0+255),b
  2811  00042E  0E03               	movlw	3
  2812  000430  6FFC               	movwf	_clear_waiter& (0+255),b
  2813  000432                     l12320:
  2814                           
  2815                           ;main.c: 81: };main.c: 82: };main.c: 83: ticks++;
  2816  000432  0E01               	movlw	1
  2817  000434  0101               	movlb	1	; () banked
  2818  000436  279E               	addwf	main@ticks& (0+255),f,b
  2819  000438  0E00               	movlw	0
  2820  00043A  239F               	addwfc	(main@ticks+1)& (0+255),f,b
  2821  00043C  23A0               	addwfc	(main@ticks+2)& (0+255),f,b
  2822  00043E  23A1               	addwfc	(main@ticks+3)& (0+255),f,b
  2823                           
  2824                           ;main.c: 84: }
  2825  000440  D5FE               	goto	l12196
  2826  000442                     l200:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;main.c: 85: else{;main.c: 86: LATDbits.LATD0 = 1;
  2830  000442  808C               	bsf	3980,0,c	;volatile
  2831                           
  2832                           ;main.c: 87: LATDbits.LATD1 = 0;
  2833  000444  928C               	bcf	3980,1,c	;volatile
  2834                           
  2835                           ; BSR set to: 0
  2836                           ;main.c: 88: _delay((unsigned long)((1)*(10000000/4000.0)));
  2837  000446  0E04               	movlw	4
  2838  000448  0101               	movlb	1	; () banked
  2839  00044A  6F9C               	movwf	??_main& (0+255),b
  2840  00044C  0E3D               	movlw	61
  2841  00044E                     u12827:
  2842  00044E  2EE8               	decfsz	wreg,f,c
  2843  000450  D7FE               	bra	u12827
  2844  000452  2F9C               	decfsz	??_main& (0+255),f,b
  2845  000454  D7FC               	bra	u12827
  2846  000456  D000               	nop2	
  2847                           
  2848                           ;main.c: 89: LATDbits.LATD0 = 0;
  2849  000458  908C               	bcf	3980,0,c	;volatile
  2850                           
  2851                           ;main.c: 90: _delay((unsigned long)((0.8)*(10000000/4000.0)));
  2852  00045A  0E03               	movlw	3
  2853  00045C  0101               	movlb	1	; () banked
  2854  00045E  6F9C               	movwf	??_main& (0+255),b
  2855  000460  0E97               	movlw	151
  2856  000462                     u12837:
  2857  000462  2EE8               	decfsz	wreg,f,c
  2858  000464  D7FE               	bra	u12837
  2859  000466  2F9C               	decfsz	??_main& (0+255),f,b
  2860  000468  D7FC               	bra	u12837
  2861  00046A  D000               	nop2	
  2862  00046C  D5E8               	goto	l12196
  2863  00046E                     __end_of_main:
  2864                           	opt callstack 0
  2865                           
  2866 ;; *************** function _standby_rotating *****************
  2867 ;; Defined at:
  2868 ;;		line 169 in file "display.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;		None
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        0 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:   14
  2889 ;; This function calls:
  2890 ;;		___awmod
  2891 ;;		_page1
  2892 ;;		_page2
  2893 ;;		_page3
  2894 ;;		_page4
  2895 ;;		_page5
  2896 ;;		_page6
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text1
  2903  004494                     __ptext1:
  2904                           	opt callstack 0
  2905  004494                     _standby_rotating:
  2906                           	opt callstack 16
  2907                           
  2908                           ;display.c: 171: if (disp_standby_page == 0){
  2909                           
  2910                           ;incstack = 0
  2911  004494  0100               	movlb	0	; () banked
  2912  004496  51D4               	movf	_disp_standby_page& (0+255),w,b
  2913  004498  11D5               	iorwf	(_disp_standby_page+1)& (0+255),w,b
  2914  00449A  A4D8               	btfss	status,2,c
  2915  00449C  D003               	goto	l12028
  2916                           
  2917                           ; BSR set to: 0
  2918                           ;display.c: 172: page1();
  2919  00449E  ECCC  F028         	call	_page1	;wreg free
  2920                           
  2921                           ;display.c: 173: }
  2922  0044A2  D029               	goto	l1643
  2923  0044A4                     l12028:
  2924                           
  2925                           ; BSR set to: 0
  2926                           ;display.c: 174: else if (disp_standby_page ==1){
  2927  0044A4  05D4               	decf	_disp_standby_page& (0+255),w,b
  2928  0044A6  11D5               	iorwf	(_disp_standby_page+1)& (0+255),w,b
  2929  0044A8  A4D8               	btfss	status,2,c
  2930  0044AA  D003               	goto	l12032
  2931                           
  2932                           ; BSR set to: 0
  2933                           ;display.c: 175: page2();
  2934  0044AC  ECB0  F028         	call	_page2	;wreg free
  2935                           
  2936                           ;display.c: 176: }
  2937  0044B0  D022               	goto	l1643
  2938  0044B2                     l12032:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;display.c: 177: else if (disp_standby_page ==2){
  2942  0044B2  0E02               	movlw	2
  2943  0044B4  19D4               	xorwf	_disp_standby_page& (0+255),w,b
  2944  0044B6  11D5               	iorwf	(_disp_standby_page+1)& (0+255),w,b
  2945  0044B8  A4D8               	btfss	status,2,c
  2946  0044BA  D003               	goto	l12036
  2947  0044BC                     u12080:
  2948                           
  2949                           ; BSR set to: 0
  2950                           ;display.c: 178: page3();
  2951  0044BC  EC12  F023         	call	_page3	;wreg free
  2952                           
  2953                           ;display.c: 179: }
  2954  0044C0  D01A               	goto	l1643
  2955  0044C2                     l12036:
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;display.c: 180: else if (disp_standby_page ==3){
  2959  0044C2  0E03               	movlw	3
  2960  0044C4  19D4               	xorwf	_disp_standby_page& (0+255),w,b
  2961  0044C6  11D5               	iorwf	(_disp_standby_page+1)& (0+255),w,b
  2962  0044C8  A4D8               	btfss	status,2,c
  2963  0044CA  D003               	goto	l12040
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;display.c: 181: page4();
  2967  0044CC  ECF0  F024         	call	_page4	;wreg free
  2968                           
  2969                           ;display.c: 182: }
  2970  0044D0  D012               	goto	l1643
  2971  0044D2                     l12040:
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;display.c: 183: else if (disp_standby_page ==4){
  2975  0044D2  0E04               	movlw	4
  2976  0044D4  19D4               	xorwf	_disp_standby_page& (0+255),w,b
  2977  0044D6  11D5               	iorwf	(_disp_standby_page+1)& (0+255),w,b
  2978  0044D8  A4D8               	btfss	status,2,c
  2979  0044DA  D007               	goto	l12048
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;display.c: 184: if (total_op == 0){
  2983  0044DC  5044               	movf	_total_op,w,c
  2984  0044DE  1045               	iorwf	_total_op+1,w,c
  2985  0044E0  B4D8               	btfsc	status,2,c
  2986  0044E2  D7EC               	goto	u12080
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;display.c: 187: else{;display.c: 188: page5();}
  2990  0044E4  ECA2  F01A         	call	_page5	;wreg free
  2991  0044E8  D006               	goto	l1643
  2992  0044EA                     l12048:
  2993                           
  2994                           ; BSR set to: 0
  2995  0044EA  0E05               	movlw	5
  2996  0044EC  19D4               	xorwf	_disp_standby_page& (0+255),w,b
  2997  0044EE  11D5               	iorwf	(_disp_standby_page+1)& (0+255),w,b
  2998  0044F0  B4D8               	btfsc	status,2,c
  2999                           
  3000                           ; BSR set to: 0
  3001                           ;display.c: 190: page6();
  3002  0044F2  EC93  F029         	call	_page6	;wreg free
  3003  0044F6                     l1643:
  3004                           
  3005                           ;display.c: 191: };display.c: 193: disp_standby_page = (disp_standby_page+1)%6;
  3006                           
  3007                           ; BSR set to: 0
  3008  0044F6  0E01               	movlw	1
  3009  0044F8  0100               	movlb	0	; () banked
  3010  0044FA  25D4               	addwf	_disp_standby_page& (0+255),w,b
  3011  0044FC  6F80               	movwf	___awmod@dividend& (0+255),b
  3012  0044FE  0E00               	movlw	0
  3013  004500  21D5               	addwfc	(_disp_standby_page+1)& (0+255),w,b
  3014  004502  6F81               	movwf	(___awmod@dividend+1)& (0+255),b
  3015  004504  0E00               	movlw	0
  3016  004506  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  3017  004508  0E06               	movlw	6
  3018  00450A  6F82               	movwf	___awmod@divisor& (0+255),b
  3019  00450C  EC7F  F024         	call	___awmod	;wreg free
  3020  004510  C080  F0D4         	movff	?___awmod,_disp_standby_page
  3021  004514  C081  F0D5         	movff	?___awmod+1,_disp_standby_page+1
  3022  004518  0012               	return		;funcret
  3023  00451A                     __end_of_standby_rotating:
  3024                           	opt callstack 0
  3025                           
  3026 ;; *************** function _page6 *****************
  3027 ;; Defined at:
  3028 ;;		line 287 in file "display.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:   13
  3049 ;; This function calls:
  3050 ;;		_lcdInst
  3051 ;;		_printf
  3052 ;; This function is called by:
  3053 ;;		_standby_rotating
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text2
  3058  005326                     __ptext2:
  3059                           	opt callstack 0
  3060  005326                     _page6:
  3061                           	opt callstack 16
  3062                           
  3063                           ;display.c: 288: printf("Press 0:");
  3064                           
  3065                           ;incstack = 0
  3066  005326  0E87               	movlw	low STR_54
  3067  005328  0100               	movlb	0	; () banked
  3068  00532A  6F8E               	movwf	printf@f& (0+255),b
  3069  00532C  0EFF               	movlw	high STR_54
  3070  00532E  6F8F               	movwf	(printf@f+1)& (0+255),b
  3071  005330  EC81  F010         	call	_printf	;wreg free
  3072  005334  0EC0               	movlw	192
  3073  005336  EC9A  F02A         	call	_lcdInst
  3074                           
  3075                           ;display.c: 290: printf("Clear History");
  3076  00533A  0E85               	movlw	low STR_55
  3077  00533C  0100               	movlb	0	; () banked
  3078  00533E  6F8E               	movwf	printf@f& (0+255),b
  3079  005340  0EFE               	movlw	high STR_55
  3080  005342  6F8F               	movwf	(printf@f+1)& (0+255),b
  3081  005344  EC81  F010         	call	_printf	;wreg free
  3082  005348  0012               	return		;funcret
  3083  00534A                     __end_of_page6:
  3084                           	opt callstack 0
  3085                           
  3086 ;; *************** function _page5 *****************
  3087 ;; Defined at:
  3088 ;;		line 115 in file "display.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  op_counter      2   38[BANK0 ] int 
  3093 ;;  curr_line       1   37[BANK0 ] unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        5 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:   13
  3110 ;; This function calls:
  3111 ;;		_lcdInst
  3112 ;;		_nextLine
  3113 ;;		_one_byte_reader
  3114 ;;		_printf
  3115 ;;		_read_pointer
  3116 ;;		_subtract
  3117 ;; This function is called by:
  3118 ;;		_standby_rotating
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text3
  3123  003544                     __ptext3:
  3124                           	opt callstack 0
  3125  003544                     _page5:
  3126                           	opt callstack 16
  3127                           
  3128                           ;incstack = 0
  3129  003544  0E00               	movlw	0
  3130  003546  0100               	movlb	0	; () banked
  3131  003548  6FA5               	movwf	page5@curr_line& (0+255),b
  3132                           
  3133                           ;display.c: 117: for (int op_counter = 0;op_counter < total_op;op_counter++){
  3134  00354A  0E00               	movlw	0
  3135  00354C  6FA7               	movwf	(page5@op_counter+1)& (0+255),b
  3136  00354E  0E00               	movlw	0
  3137  003550  6FA6               	movwf	page5@op_counter& (0+255),b
  3138  003552  D0AE               	goto	l11532
  3139  003554                     l11500:
  3140                           
  3141                           ; BSR set to: 0
  3142                           ;display.c: 118: printf("#%d.",op_counter+1);
  3143  003554  0EF2               	movlw	low STR_31
  3144  003556  6F8E               	movwf	printf@f& (0+255),b
  3145  003558  0EFF               	movlw	high STR_31
  3146  00355A  6F8F               	movwf	(printf@f+1)& (0+255),b
  3147  00355C  0E01               	movlw	1
  3148  00355E  25A6               	addwf	page5@op_counter& (0+255),w,b
  3149  003560  6F90               	movwf	(?_printf+2)& (0+255),b
  3150  003562  0E00               	movlw	0
  3151  003564  21A7               	addwfc	(page5@op_counter+1)& (0+255),w,b
  3152  003566  6F91               	movwf	(?_printf+3)& (0+255),b
  3153  003568  EC81  F010         	call	_printf	;wreg free
  3154                           
  3155                           ;display.c: 119: read_pntr = (total_op - op_counter)*56;
  3156  00356C  0100               	movlb	0	; () banked
  3157  00356E  51A6               	movf	page5@op_counter& (0+255),w,b
  3158  003570  5C44               	subwf	_total_op,w,c
  3159  003572  0D38               	mullw	56
  3160  003574  CFF3 F0E2          	movff	prodl,_read_pntr
  3161                           
  3162                           ; BSR set to: 0
  3163                           ;display.c: 120: read_pointer();
  3164  003578  EC6D  F029         	call	_read_pointer	;wreg free
  3165                           
  3166                           ;display.c: 121: subtract();
  3167  00357C  EC0D  F02A         	call	_subtract	;wreg free
  3168                           
  3169                           ;display.c: 122: times[op_counter*2] = one_byte_reader(addr,addrh);
  3170  003580  90D8               	bcf	status,0,c
  3171  003582  0100               	movlb	0	; () banked
  3172  003584  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3173  003586  6ED9               	movwf	fsr2l,c
  3174  003588  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3175  00358A  6EDA               	movwf	fsr2h,c
  3176  00358C  0EE8               	movlw	low _times
  3177  00358E  26D9               	addwf	fsr2l,f,c
  3178  003590  0E00               	movlw	high _times
  3179  003592  22DA               	addwfc	fsr2h,f,c
  3180  003594  C0E3  F080         	movff	_addrh,one_byte_reader@rh
  3181  003598  51E4               	movf	_addr& (0+255),w,b
  3182  00359A  EC2B  F02A         	call	_one_byte_reader
  3183  00359E  6EDF               	movwf	indf2,c
  3184                           
  3185                           ;display.c: 123: addr +=1;
  3186  0035A0  0100               	movlb	0	; () banked
  3187  0035A2  2BE4               	incf	_addr& (0+255),f,b
  3188                           
  3189                           ; BSR set to: 0
  3190                           ;display.c: 124: if (addr == 0){
  3191  0035A4  51E4               	movf	_addr& (0+255),w,b
  3192  0035A6  B4D8               	btfsc	status,2,c
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;display.c: 125: addrh+=1;
  3196  0035A8  2BE3               	incf	_addrh& (0+255),f,b
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;display.c: 126: };display.c: 127: times[op_counter*2+1] = one_byte_reader(addr,addrh);
  3200  0035AA  90D8               	bcf	status,0,c
  3201  0035AC  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3202  0035AE  6ED9               	movwf	fsr2l,c
  3203  0035B0  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3204  0035B2  6EDA               	movwf	fsr2h,c
  3205  0035B4  0EE9               	movlw	low (_times+1)
  3206  0035B6  26D9               	addwf	fsr2l,f,c
  3207  0035B8  0E00               	movlw	high (_times+1)
  3208  0035BA  22DA               	addwfc	fsr2h,f,c
  3209  0035BC  C0E3  F080         	movff	_addrh,one_byte_reader@rh
  3210  0035C0  51E4               	movf	_addr& (0+255),w,b
  3211  0035C2  EC2B  F02A         	call	_one_byte_reader
  3212  0035C6  6EDF               	movwf	indf2,c
  3213                           
  3214                           ;display.c: 128: if (times[op_counter*2] >= 12){
  3215  0035C8  90D8               	bcf	status,0,c
  3216  0035CA  0100               	movlb	0	; () banked
  3217  0035CC  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3218  0035CE  6ED9               	movwf	fsr2l,c
  3219  0035D0  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3220  0035D2  6EDA               	movwf	fsr2h,c
  3221  0035D4  0EE8               	movlw	low _times
  3222  0035D6  26D9               	addwf	fsr2l,f,c
  3223  0035D8  0E00               	movlw	high _times
  3224  0035DA  22DA               	addwfc	fsr2h,f,c
  3225  0035DC  0E0B               	movlw	11
  3226  0035DE  64DF               	cpfsgt	indf2,c
  3227  0035E0  D038               	goto	l11524
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;display.c: 129: times[op_counter*2] = times[op_counter*2] - 12;
  3231  0035E2  90D8               	bcf	status,0,c
  3232  0035E4  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3233  0035E6  6ED9               	movwf	fsr2l,c
  3234  0035E8  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3235  0035EA  6EDA               	movwf	fsr2h,c
  3236  0035EC  0EE8               	movlw	low _times
  3237  0035EE  26D9               	addwf	fsr2l,f,c
  3238  0035F0  0E00               	movlw	high _times
  3239  0035F2  22DA               	addwfc	fsr2h,f,c
  3240  0035F4  90D8               	bcf	status,0,c
  3241  0035F6  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3242  0035F8  6EE1               	movwf	fsr1l,c
  3243  0035FA  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3244  0035FC  6EE2               	movwf	fsr1h,c
  3245  0035FE  0EE8               	movlw	low _times
  3246  003600  26E1               	addwf	fsr1l,f,c
  3247  003602  0E00               	movlw	high _times
  3248  003604  22E2               	addwfc	fsr1h,f,c
  3249  003606  50E7               	movf	indf1,w,c
  3250  003608  0FF4               	addlw	244
  3251  00360A  6EDF               	movwf	indf2,c
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;display.c: 130: printf("%d:%02d pm",times[op_counter*2],times[op_counter*2+1]);
  3255  00360C  0E03               	movlw	low STR_32
  3256  00360E  6F8E               	movwf	printf@f& (0+255),b
  3257  003610  0EFF               	movlw	high STR_32
  3258  003612  6F8F               	movwf	(printf@f+1)& (0+255),b
  3259  003614  90D8               	bcf	status,0,c
  3260  003616  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3261  003618  6ED9               	movwf	fsr2l,c
  3262  00361A  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3263  00361C  6EDA               	movwf	fsr2h,c
  3264  00361E  0EE8               	movlw	low _times
  3265  003620  26D9               	addwf	fsr2l,f,c
  3266  003622  0E00               	movlw	high _times
  3267  003624  22DA               	addwfc	fsr2h,f,c
  3268  003626  50DF               	movf	indf2,w,c
  3269  003628  6FA3               	movwf	??_page5& (0+255),b
  3270  00362A  51A3               	movf	??_page5& (0+255),w,b
  3271  00362C  6F90               	movwf	(?_printf+2)& (0+255),b
  3272  00362E  6B91               	clrf	(?_printf+3)& (0+255),b
  3273  003630  90D8               	bcf	status,0,c
  3274  003632  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3275  003634  6ED9               	movwf	fsr2l,c
  3276  003636  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3277  003638  6EDA               	movwf	fsr2h,c
  3278  00363A  0EE9               	movlw	low (_times+1)
  3279  00363C  26D9               	addwf	fsr2l,f,c
  3280  00363E  0E00               	movlw	high (_times+1)
  3281  003640  22DA               	addwfc	fsr2h,f,c
  3282  003642  50DF               	movf	indf2,w,c
  3283  003644  6FA4               	movwf	(??_page5+1)& (0+255),b
  3284  003646  51A4               	movf	(??_page5+1)& (0+255),w,b
  3285  003648  6F92               	movwf	(?_printf+4)& (0+255),b
  3286  00364A  6B93               	clrf	(?_printf+5)& (0+255),b
  3287  00364C  EC81  F010         	call	_printf	;wreg free
  3288                           
  3289                           ;display.c: 131: }
  3290  003650  D022               	goto	l11526
  3291  003652                     l11524:
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;display.c: 132: else{;display.c: 133: printf("%d:%02d am",times[op_counter*2],times[op_
      +                          counter*2+1]);
  3295  003652  0EF8               	movlw	low STR_33
  3296  003654  6F8E               	movwf	printf@f& (0+255),b
  3297  003656  0EFE               	movlw	high STR_33
  3298  003658  6F8F               	movwf	(printf@f+1)& (0+255),b
  3299  00365A  90D8               	bcf	status,0,c
  3300  00365C  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3301  00365E  6ED9               	movwf	fsr2l,c
  3302  003660  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3303  003662  6EDA               	movwf	fsr2h,c
  3304  003664  0EE8               	movlw	low _times
  3305  003666  26D9               	addwf	fsr2l,f,c
  3306  003668  0E00               	movlw	high _times
  3307  00366A  22DA               	addwfc	fsr2h,f,c
  3308  00366C  50DF               	movf	indf2,w,c
  3309  00366E  6FA3               	movwf	??_page5& (0+255),b
  3310  003670  51A3               	movf	??_page5& (0+255),w,b
  3311  003672  6F90               	movwf	(?_printf+2)& (0+255),b
  3312  003674  6B91               	clrf	(?_printf+3)& (0+255),b
  3313  003676  90D8               	bcf	status,0,c
  3314  003678  35A6               	rlcf	page5@op_counter& (0+255),w,b
  3315  00367A  6ED9               	movwf	fsr2l,c
  3316  00367C  35A7               	rlcf	(page5@op_counter+1)& (0+255),w,b
  3317  00367E  6EDA               	movwf	fsr2h,c
  3318  003680  0EE9               	movlw	low (_times+1)
  3319  003682  26D9               	addwf	fsr2l,f,c
  3320  003684  0E00               	movlw	high (_times+1)
  3321  003686  22DA               	addwfc	fsr2h,f,c
  3322  003688  50DF               	movf	indf2,w,c
  3323  00368A  6FA4               	movwf	(??_page5+1)& (0+255),b
  3324  00368C  51A4               	movf	(??_page5+1)& (0+255),w,b
  3325  00368E  6F92               	movwf	(?_printf+4)& (0+255),b
  3326  003690  6B93               	clrf	(?_printf+5)& (0+255),b
  3327  003692  EC81  F010         	call	_printf	;wreg free
  3328  003696                     l11526:
  3329                           
  3330                           ;display.c: 134: };display.c: 135: curr_line = nextLine(curr_line);
  3331  003696  0100               	movlb	0	; () banked
  3332  003698  51A5               	movf	page5@curr_line& (0+255),w,b
  3333  00369A  EC1A  F026         	call	_nextLine
  3334  00369E  0100               	movlb	0	; () banked
  3335  0036A0  6FA5               	movwf	page5@curr_line& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;display.c: 136: { lcdInst(0x80 | curr_line);};
  3339  0036A2  51A5               	movf	page5@curr_line& (0+255),w,b
  3340  0036A4  0980               	iorlw	128
  3341  0036A6  EC9A  F02A         	call	_lcdInst
  3342  0036AA  0100               	movlb	0	; () banked
  3343  0036AC  4BA6               	infsnz	page5@op_counter& (0+255),f,b
  3344  0036AE  2BA7               	incf	(page5@op_counter+1)& (0+255),f,b
  3345  0036B0                     l11532:
  3346                           
  3347                           ; BSR set to: 0
  3348  0036B0  5044               	movf	_total_op,w,c
  3349  0036B2  5DA6               	subwf	page5@op_counter& (0+255),w,b
  3350  0036B4  51A7               	movf	(page5@op_counter+1)& (0+255),w,b
  3351  0036B6  0A80               	xorlw	128
  3352  0036B8  6FA3               	movwf	??_page5& (0+255),b
  3353  0036BA  5045               	movf	_total_op+1,w,c
  3354  0036BC  0A80               	xorlw	128
  3355  0036BE  59A3               	subwfb	??_page5& (0+255),w,b
  3356  0036C0  B0D8               	btfsc	status,0,c
  3357  0036C2  0012               	return	
  3358  0036C4  D747               	goto	l11500
  3359  0036C6                     __end_of_page5:
  3360                           	opt callstack 0
  3361                           
  3362 ;; *************** function _page4 *****************
  3363 ;; Defined at:
  3364 ;;		line 292 in file "display.c"
  3365 ;; Parameters:    Size  Location     Type
  3366 ;;		None
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;		None
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3382 ;;Total ram usage:        0 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   13
  3385 ;; This function calls:
  3386 ;;		_lcdInst
  3387 ;;		_printf
  3388 ;;		_read_total
  3389 ;; This function is called by:
  3390 ;;		_standby_rotating
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text4
  3395  0049E0                     __ptext4:
  3396                           	opt callstack 0
  3397  0049E0                     _page4:
  3398                           	opt callstack 16
  3399                           
  3400                           ;display.c: 293: printf("Past Operations:");
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;incstack = 0
  3404  0049E0  0E7B               	movlw	low STR_56
  3405  0049E2  0100               	movlb	0	; () banked
  3406  0049E4  6F8E               	movwf	printf@f& (0+255),b
  3407  0049E6  0EFD               	movlw	high STR_56
  3408  0049E8  6F8F               	movwf	(printf@f+1)& (0+255),b
  3409  0049EA  EC81  F010         	call	_printf	;wreg free
  3410  0049EE  0EC0               	movlw	192
  3411  0049F0  EC9A  F02A         	call	_lcdInst
  3412                           
  3413                           ;display.c: 295: total_op = read_total();
  3414  0049F4  ECEB  F025         	call	_read_total	;wreg free
  3415  0049F8  C088  F044         	movff	?_read_total,_total_op
  3416  0049FC  C089  F045         	movff	?_read_total+1,_total_op+1
  3417                           
  3418                           ;display.c: 296: if (total_op == 0){
  3419  004A00  5044               	movf	_total_op,w,c
  3420  004A02  1045               	iorwf	_total_op+1,w,c
  3421  004A04  A4D8               	btfss	status,2,c
  3422  004A06  D008               	goto	l11612
  3423                           
  3424                           ;display.c: 297: printf("     Empty");
  3425  004A08  0E19               	movlw	low STR_57
  3426  004A0A  0100               	movlb	0	; () banked
  3427  004A0C  6F8E               	movwf	printf@f& (0+255),b
  3428  004A0E  0EFF               	movlw	high STR_57
  3429  004A10  6F8F               	movwf	(printf@f+1)& (0+255),b
  3430  004A12  EC81  F010         	call	_printf	;wreg free
  3431                           
  3432                           ;display.c: 298: }
  3433  004A16  0012               	return	
  3434  004A18                     l11612:
  3435                           
  3436                           ;display.c: 299: else if (total_op == 1){
  3437  004A18  0444               	decf	_total_op,w,c
  3438  004A1A  1045               	iorwf	_total_op+1,w,c
  3439  004A1C  A4D8               	btfss	status,2,c
  3440  004A1E  D008               	goto	l11616
  3441                           
  3442                           ;display.c: 300: printf("Choose 1");
  3443  004A20  0E7E               	movlw	low STR_58
  3444  004A22  0100               	movlb	0	; () banked
  3445  004A24  6F8E               	movwf	printf@f& (0+255),b
  3446  004A26  0EFF               	movlw	high STR_58
  3447  004A28  6F8F               	movwf	(printf@f+1)& (0+255),b
  3448  004A2A  EC81  F010         	call	_printf	;wreg free
  3449                           
  3450                           ;display.c: 301: }
  3451  004A2E  0012               	return	
  3452  004A30                     l11616:
  3453                           
  3454                           ;display.c: 302: else{;display.c: 303: printf("Choose 1 - %d",total_op);}
  3455  004A30  0E69               	movlw	low STR_59
  3456  004A32  0100               	movlb	0	; () banked
  3457  004A34  6F8E               	movwf	printf@f& (0+255),b
  3458  004A36  0EFE               	movlw	high STR_59
  3459  004A38  6F8F               	movwf	(printf@f+1)& (0+255),b
  3460  004A3A  C044  F090         	movff	_total_op,?_printf+2
  3461  004A3E  C045  F091         	movff	_total_op+1,?_printf+3
  3462  004A42  EC81  F010         	call	_printf	;wreg free
  3463  004A46  0012               	return		;funcret
  3464  004A48                     __end_of_page4:
  3465                           	opt callstack 0
  3466                           
  3467 ;; *************** function _read_total *****************
  3468 ;; Defined at:
  3469 ;;		line 227 in file "EEPROM.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  total           2   12[BANK0 ] int 
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  2    8[BANK0 ] int 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2, status,0, cstack
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3483 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;Total ram usage:        6 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    9
  3490 ;; This function calls:
  3491 ;;		___awdiv
  3492 ;;		_read_pointer
  3493 ;; This function is called by:
  3494 ;;		_main
  3495 ;;		_page4
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text5
  3500  004BD6                     __ptext5:
  3501                           	opt callstack 0
  3502  004BD6                     _read_total:
  3503                           	opt callstack 19
  3504                           
  3505                           ;EEPROM.c: 228: read_pointer();
  3506                           
  3507                           ;incstack = 0
  3508  004BD6  EC6D  F029         	call	_read_pointer	;wreg free
  3509                           
  3510                           ;EEPROM.c: 231: int total = ((addrh*256 + addr)-2)/56;
  3511  004BDA  0100               	movlb	0	; () banked
  3512  004BDC  51E4               	movf	_addr& (0+255),w,b
  3513  004BDE  C0E3  F08A         	movff	_addrh,??_read_total
  3514  004BE2  6B8B               	clrf	(??_read_total+1)& (0+255),b
  3515  004BE4  C08A  F08B         	movff	??_read_total,??_read_total+1
  3516  004BE8  6B8A               	clrf	??_read_total& (0+255),b
  3517  004BEA  278A               	addwf	??_read_total& (0+255),f,b
  3518  004BEC  0E00               	movlw	0
  3519  004BEE  238B               	addwfc	(??_read_total+1)& (0+255),f,b
  3520  004BF0  0EFE               	movlw	254
  3521  004BF2  258A               	addwf	??_read_total& (0+255),w,b
  3522  004BF4  6F80               	movwf	___awdiv@dividend& (0+255),b
  3523  004BF6  0EFF               	movlw	255
  3524  004BF8  218B               	addwfc	(??_read_total+1)& (0+255),w,b
  3525  004BFA  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
  3526  004BFC  0E00               	movlw	0
  3527  004BFE  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3528  004C00  0E38               	movlw	56
  3529  004C02  6F82               	movwf	___awdiv@divisor& (0+255),b
  3530  004C04  EC8D  F022         	call	___awdiv	;wreg free
  3531  004C08  C080  F08C         	movff	?___awdiv,read_total@total
  3532  004C0C  C081  F08D         	movff	?___awdiv+1,read_total@total+1
  3533                           
  3534                           ;EEPROM.c: 234: if (total > 4){
  3535  004C10  0100               	movlb	0	; () banked
  3536  004C12  BF8D               	btfsc	(read_total@total+1)& (0+255),7,b
  3537  004C14  D00A               	goto	l10306
  3538  004C16  518D               	movf	(read_total@total+1)& (0+255),w,b
  3539  004C18  E104               	bnz	u10320
  3540  004C1A  0E05               	movlw	5
  3541  004C1C  5D8C               	subwf	read_total@total& (0+255),w,b
  3542  004C1E  A0D8               	btfss	status,0,c
  3543  004C20  D004               	goto	l10306
  3544  004C22                     u10320:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;EEPROM.c: 235: total = 4;
  3548  004C22  0E00               	movlw	0
  3549  004C24  6F8D               	movwf	(read_total@total+1)& (0+255),b
  3550  004C26  0E04               	movlw	4
  3551  004C28  6F8C               	movwf	read_total@total& (0+255),b
  3552  004C2A                     l10306:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;EEPROM.c: 236: };EEPROM.c: 237: return total;
  3556  004C2A  C08C  F088         	movff	read_total@total,?_read_total
  3557  004C2E  C08D  F089         	movff	read_total@total+1,?_read_total+1
  3558                           
  3559                           ; BSR set to: 0
  3560  004C32  0012               	return		;funcret
  3561  004C34                     __end_of_read_total:
  3562                           	opt callstack 0
  3563                           
  3564 ;; *************** function _page3 *****************
  3565 ;; Defined at:
  3566 ;;		line 268 in file "display.c"
  3567 ;; Parameters:    Size  Location     Type
  3568 ;;		None
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;Total ram usage:        0 bytes
  3585 ;; Hardware stack levels used:    1
  3586 ;; Hardware stack levels required when called:   13
  3587 ;; This function calls:
  3588 ;;		_lcdInst
  3589 ;;		_printf
  3590 ;;		_readRTC
  3591 ;; This function is called by:
  3592 ;;		_standby_rotating
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text6
  3597  004624                     __ptext6:
  3598                           	opt callstack 0
  3599  004624                     _page3:
  3600                           	opt callstack 16
  3601                           
  3602                           ;display.c: 269: readRTC();
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;incstack = 0
  3606  004624  EC37  F020         	call	_readRTC	;wreg free
  3607                           
  3608                           ;display.c: 270: printf("Date");
  3609  004628  0EF7               	movlw	low STR_46
  3610  00462A  0100               	movlb	0	; () banked
  3611  00462C  6F8E               	movwf	printf@f& (0+255),b
  3612  00462E  0EFF               	movlw	high STR_46
  3613  004630  6F8F               	movwf	(printf@f+1)& (0+255),b
  3614  004632  EC81  F010         	call	_printf	;wreg free
  3615  004636  0EC0               	movlw	192
  3616  004638  EC9A  F02A         	call	_lcdInst
  3617                           
  3618                           ;display.c: 272: printf("20");
  3619  00463C  0EFC               	movlw	low STR_47
  3620  00463E  0100               	movlb	0	; () banked
  3621  004640  6F8E               	movwf	printf@f& (0+255),b
  3622  004642  0EFF               	movlw	high STR_47
  3623  004644  6F8F               	movwf	(printf@f+1)& (0+255),b
  3624  004646  EC81  F010         	call	_printf	;wreg free
  3625                           
  3626                           ;display.c: 273: printf("%02d-%02d-%02d",time[6],time[5],time[4]);
  3627  00464A  0E0F               	movlw	low STR_48
  3628  00464C  0100               	movlb	0	; () banked
  3629  00464E  6F8E               	movwf	printf@f& (0+255),b
  3630  004650  0EFE               	movlw	high STR_48
  3631  004652  6F8F               	movwf	(printf@f+1)& (0+255),b
  3632  004654  C0F6  F090         	movff	_time+6,?_printf+2
  3633  004658  6B91               	clrf	(?_printf+3)& (0+255),b
  3634  00465A  C0F5  F092         	movff	_time+5,?_printf+4
  3635  00465E  6B93               	clrf	(?_printf+5)& (0+255),b
  3636  004660  C0F4  F094         	movff	_time+4,?_printf+6
  3637  004664  6B95               	clrf	(?_printf+7)& (0+255),b
  3638  004666  EC81  F010         	call	_printf	;wreg free
  3639  00466A  0E90               	movlw	144
  3640  00466C  EC9A  F02A         	call	_lcdInst
  3641                           
  3642                           ;display.c: 275: printf("Time");
  3643  004670  0E55               	movlw	low (STR_61+10)
  3644  004672  0100               	movlb	0	; () banked
  3645  004674  6F8E               	movwf	printf@f& (0+255),b
  3646  004676  0EFE               	movlw	high (STR_61+10)
  3647  004678  6F8F               	movwf	(printf@f+1)& (0+255),b
  3648  00467A  EC81  F010         	call	_printf	;wreg free
  3649  00467E  0ED0               	movlw	208
  3650  004680  EC9A  F02A         	call	_lcdInst
  3651                           
  3652                           ;display.c: 277: printf("%02d:%02d:%02d",time[2],time[1],time[0]);
  3653  004684  0E1E               	movlw	low STR_50
  3654  004686  0100               	movlb	0	; () banked
  3655  004688  6F8E               	movwf	printf@f& (0+255),b
  3656  00468A  0EFE               	movlw	high STR_50
  3657  00468C  6F8F               	movwf	(printf@f+1)& (0+255),b
  3658  00468E  C0F2  F090         	movff	_time+2,?_printf+2
  3659  004692  6B91               	clrf	(?_printf+3)& (0+255),b
  3660  004694  C0F1  F092         	movff	_time+1,?_printf+4
  3661  004698  6B93               	clrf	(?_printf+5)& (0+255),b
  3662  00469A  C0F0  F094         	movff	_time,?_printf+6
  3663  00469E  6B95               	clrf	(?_printf+7)& (0+255),b
  3664  0046A0  EC81  F010         	call	_printf	;wreg free
  3665  0046A4  0012               	return		;funcret
  3666  0046A6                     __end_of_page3:
  3667                           	opt callstack 0
  3668                           
  3669 ;; *************** function _page2 *****************
  3670 ;; Defined at:
  3671 ;;		line 280 in file "display.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:   13
  3692 ;; This function calls:
  3693 ;;		_lcdInst
  3694 ;;		_printf
  3695 ;; This function is called by:
  3696 ;;		_standby_rotating
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text7
  3701  005160                     __ptext7:
  3702                           	opt callstack 0
  3703  005160                     _page2:
  3704                           	opt callstack 16
  3705                           
  3706                           ;display.c: 281: printf("Press A:");
  3707                           
  3708                           ;incstack = 0
  3709  005160  0EB4               	movlw	low STR_51
  3710  005162  0100               	movlb	0	; () banked
  3711  005164  6F8E               	movwf	printf@f& (0+255),b
  3712  005166  0EFF               	movlw	high STR_51
  3713  005168  6F8F               	movwf	(printf@f+1)& (0+255),b
  3714  00516A  EC81  F010         	call	_printf	;wreg free
  3715  00516E  0EC0               	movlw	192
  3716  005170  EC9A  F02A         	call	_lcdInst
  3717                           
  3718                           ;display.c: 283: printf("Start a New");
  3719  005174  0EE0               	movlw	low STR_52
  3720  005176  0100               	movlb	0	; () banked
  3721  005178  6F8E               	movwf	printf@f& (0+255),b
  3722  00517A  0EFE               	movlw	high STR_52
  3723  00517C  6F8F               	movwf	(printf@f+1)& (0+255),b
  3724  00517E  EC81  F010         	call	_printf	;wreg free
  3725  005182  0E90               	movlw	144
  3726  005184  EC9A  F02A         	call	_lcdInst
  3727                           
  3728                           ;display.c: 285: printf("Operation");
  3729  005188  0E42               	movlw	low STR_53
  3730  00518A  0100               	movlb	0	; () banked
  3731  00518C  6F8E               	movwf	printf@f& (0+255),b
  3732  00518E  0EFF               	movlw	high STR_53
  3733  005190  6F8F               	movwf	(printf@f+1)& (0+255),b
  3734  005192  EC81  F010         	call	_printf	;wreg free
  3735  005196  0012               	return		;funcret
  3736  005198                     __end_of_page2:
  3737                           	opt callstack 0
  3738                           
  3739 ;; *************** function _page1 *****************
  3740 ;; Defined at:
  3741 ;;		line 261 in file "display.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1    wreg      void 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 0/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:   13
  3762 ;; This function calls:
  3763 ;;		_lcdInst
  3764 ;;		_printf
  3765 ;; This function is called by:
  3766 ;;		_standby_rotating
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text8
  3771  005198                     __ptext8:
  3772                           	opt callstack 0
  3773  005198                     _page1:
  3774                           	opt callstack 16
  3775                           
  3776                           ;display.c: 262: printf("Thanks for using ");
  3777                           
  3778                           ;incstack = 0
  3779  005198  0E46               	movlw	low STR_43
  3780  00519A  0100               	movlb	0	; () banked
  3781  00519C  6F8E               	movwf	printf@f& (0+255),b
  3782  00519E  0EFD               	movlw	high STR_43
  3783  0051A0  6F8F               	movwf	(printf@f+1)& (0+255),b
  3784  0051A2  EC81  F010         	call	_printf	;wreg free
  3785  0051A6  0EC0               	movlw	192
  3786  0051A8  EC9A  F02A         	call	_lcdInst
  3787                           
  3788                           ;display.c: 264: printf("Traffic Cone");
  3789  0051AC  0EA0               	movlw	low STR_44
  3790  0051AE  0100               	movlb	0	; () banked
  3791  0051B0  6F8E               	movwf	printf@f& (0+255),b
  3792  0051B2  0EFE               	movlw	high STR_44
  3793  0051B4  6F8F               	movwf	(printf@f+1)& (0+255),b
  3794  0051B6  EC81  F010         	call	_printf	;wreg free
  3795  0051BA  0E90               	movlw	144
  3796  0051BC  EC9A  F02A         	call	_lcdInst
  3797                           
  3798                           ;display.c: 266: printf("Dispenser");
  3799  0051C0  0E4C               	movlw	low STR_45
  3800  0051C2  0100               	movlb	0	; () banked
  3801  0051C4  6F8E               	movwf	printf@f& (0+255),b
  3802  0051C6  0EFF               	movlw	high STR_45
  3803  0051C8  6F8F               	movwf	(printf@f+1)& (0+255),b
  3804  0051CA  EC81  F010         	call	_printf	;wreg free
  3805  0051CE  0012               	return		;funcret
  3806  0051D0                     __end_of_page1:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _sensed_function_3 *****************
  3810 ;; Defined at:
  3811 ;;		line 79 in file "sensor.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;  sth             2    6[BANK1 ] int 
  3816 ;;  sth             2    4[BANK1 ] int 
  3817 ;;  sth             2    2[BANK1 ] int 
  3818 ;;  sth             2    0[BANK1 ] int 
  3819 ;; Return value:  Size  Location     Type
  3820 ;;                  1    wreg      void 
  3821 ;; Registers used:
  3822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3823 ;; Tracked objects:
  3824 ;;		On entry : 0/0
  3825 ;;		On exit  : 0/0
  3826 ;;		Unchanged: 0/0
  3827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3831 ;;      Totals:         0       5       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;Total ram usage:       13 bytes
  3833 ;; Hardware stack levels used:    1
  3834 ;; Hardware stack levels required when called:   14
  3835 ;; This function calls:
  3836 ;;		_Stop
  3837 ;;		_crack_drop_bool_function
  3838 ;;		_drop_record
  3839 ;;		_hole_drop_bool_function
  3840 ;;		_moving
  3841 ;;		_read_encoder
  3842 ;;		_record
  3843 ;; This function is called by:
  3844 ;;		_main
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text9
  3849  0031DC                     __ptext9:
  3850                           	opt callstack 0
  3851  0031DC                     _sensed_function_3:
  3852                           	opt callstack 16
  3853                           
  3854                           ;sensor.c: 80: read_encoder();
  3855                           
  3856                           ;incstack = 0
  3857  0031DC  EC76  F021         	call	_read_encoder	;wreg free
  3858                           
  3859                           ;sensor.c: 81: if (a+c == 2){
  3860  0031E0  0100               	movlb	0	; () banked
  3861  0031E2  51DC               	movf	_c& (0+255),w,b
  3862  0031E4  25E0               	addwf	_a& (0+255),w,b
  3863  0031E6  6FAE               	movwf	??_sensed_function_3& (0+255),b
  3864  0031E8  51DD               	movf	(_c+1)& (0+255),w,b
  3865  0031EA  21E1               	addwfc	(_a+1)& (0+255),w,b
  3866  0031EC  6FAF               	movwf	(??_sensed_function_3+1)& (0+255),b
  3867  0031EE  0E02               	movlw	2
  3868  0031F0  19AE               	xorwf	??_sensed_function_3& (0+255),w,b
  3869  0031F2  11AF               	iorwf	(??_sensed_function_3+1)& (0+255),w,b
  3870  0031F4  A4D8               	btfss	status,2,c
  3871  0031F6  D026               	goto	l11958
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;sensor.c: 82: int sth = crack_drop_bool_function();
  3875  0031F8  EC10  F01C         	call	_crack_drop_bool_function	;wreg free
  3876  0031FC  C0A4  F192         	movff	?_crack_drop_bool_function,sensed_function_3@sth
  3877  003200  C0A5  F193         	movff	?_crack_drop_bool_function+1,sensed_function_3@sth+1
  3878                           
  3879                           ;sensor.c: 83: if (sth){
  3880  003204  0101               	movlb	1	; () banked
  3881  003206  5192               	movf	sensed_function_3@sth& (0+255),w,b
  3882  003208  1193               	iorwf	(sensed_function_3@sth+1)& (0+255),w,b
  3883  00320A  B4D8               	btfsc	status,2,c
  3884  00320C  D017               	goto	l11956
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;sensor.c: 84: drop_record(2);
  3888  00320E  0E00               	movlw	0
  3889  003210  0100               	movlb	0	; () banked
  3890  003212  6F91               	movwf	(drop_record@aa+1)& (0+255),b
  3891  003214  0E02               	movlw	2
  3892  003216  6F90               	movwf	drop_record@aa& (0+255),b
  3893  003218  EC94  F023         	call	_drop_record	;wreg free
  3894                           
  3895                           ;sensor.c: 86: last_problem_bool[0] = 0;
  3896  00321C  0E00               	movlw	0
  3897  00321E  6E34               	movwf	_last_problem_bool,c
  3898  003220  0E00               	movlw	0
  3899  003222  6E35               	movwf	_last_problem_bool+1,c
  3900  003224  0E00               	movlw	0
  3901  003226  6E36               	movwf	_last_problem_bool+2,c
  3902  003228  0E00               	movlw	0
  3903  00322A  6E37               	movwf	_last_problem_bool+3,c
  3904                           
  3905                           ;sensor.c: 87: last_problem_bool[1] = accum_straight_distance;
  3906  00322C  C0C4  F038         	movff	_accum_straight_distance,_last_problem_bool+4
  3907  003230  C0C5  F039         	movff	_accum_straight_distance+1,_last_problem_bool+5
  3908  003234  C0C6  F03A         	movff	_accum_straight_distance+2,_last_problem_bool+6
  3909  003238  C0C7  F03B         	movff	_accum_straight_distance+3,_last_problem_bool+7
  3910  00323C                     l11956:
  3911                           
  3912                           ;sensor.c: 88: };sensor.c: 89: record('c');
  3913  00323C  0E63               	movlw	99
  3914  00323E  ECD2  F012         	call	_record
  3915                           
  3916                           ;sensor.c: 90: }
  3917  003242  D07C               	goto	l12000
  3918  003244                     l11958:
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;sensor.c: 91: else if (a == 1){
  3922  003244  05E0               	decf	_a& (0+255),w,b
  3923  003246  11E1               	iorwf	(_a+1)& (0+255),w,b
  3924  003248  A4D8               	btfss	status,2,c
  3925  00324A  D026               	goto	l11972
  3926                           
  3927                           ; BSR set to: 0
  3928                           ;sensor.c: 94: int sth = crack_drop_bool_function();
  3929  00324C  EC10  F01C         	call	_crack_drop_bool_function	;wreg free
  3930  003250  C0A4  F194         	movff	?_crack_drop_bool_function,sensed_function_3@sth_1135
  3931  003254  C0A5  F195         	movff	?_crack_drop_bool_function+1,sensed_function_3@sth_1135+1
  3932                           
  3933                           ;sensor.c: 95: if (sth){
  3934  003258  0101               	movlb	1	; () banked
  3935  00325A  5194               	movf	sensed_function_3@sth_1135& (0+255),w,b
  3936  00325C  1195               	iorwf	(sensed_function_3@sth_1135+1)& (0+255),w,b
  3937  00325E  B4D8               	btfsc	status,2,c
  3938  003260  D017               	goto	l11970
  3939                           
  3940                           ; BSR set to: 1
  3941                           ;sensor.c: 96: drop_record(1);
  3942  003262  0E00               	movlw	0
  3943  003264  0100               	movlb	0	; () banked
  3944  003266  6F91               	movwf	(drop_record@aa+1)& (0+255),b
  3945  003268  0E01               	movlw	1
  3946  00326A  6F90               	movwf	drop_record@aa& (0+255),b
  3947  00326C  EC94  F023         	call	_drop_record	;wreg free
  3948                           
  3949                           ;sensor.c: 98: last_problem_bool[0] = 0;
  3950  003270  0E00               	movlw	0
  3951  003272  6E34               	movwf	_last_problem_bool,c
  3952  003274  0E00               	movlw	0
  3953  003276  6E35               	movwf	_last_problem_bool+1,c
  3954  003278  0E00               	movlw	0
  3955  00327A  6E36               	movwf	_last_problem_bool+2,c
  3956  00327C  0E00               	movlw	0
  3957  00327E  6E37               	movwf	_last_problem_bool+3,c
  3958                           
  3959                           ;sensor.c: 99: last_problem_bool[1] = accum_straight_distance;
  3960  003280  C0C4  F038         	movff	_accum_straight_distance,_last_problem_bool+4
  3961  003284  C0C5  F039         	movff	_accum_straight_distance+1,_last_problem_bool+5
  3962  003288  C0C6  F03A         	movff	_accum_straight_distance+2,_last_problem_bool+6
  3963  00328C  C0C7  F03B         	movff	_accum_straight_distance+3,_last_problem_bool+7
  3964  003290                     l11970:
  3965                           
  3966                           ;sensor.c: 100: };sensor.c: 101: record('c');
  3967  003290  0E63               	movlw	99
  3968  003292  ECD2  F012         	call	_record
  3969                           
  3970                           ;sensor.c: 102: }
  3971  003296  D052               	goto	l12000
  3972  003298                     l11972:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;sensor.c: 103: else if (c ==1){
  3976  003298  05DC               	decf	_c& (0+255),w,b
  3977  00329A  11DD               	iorwf	(_c+1)& (0+255),w,b
  3978  00329C  A4D8               	btfss	status,2,c
  3979  00329E  D026               	goto	l11986
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;sensor.c: 106: int sth = crack_drop_bool_function();
  3983  0032A0  EC10  F01C         	call	_crack_drop_bool_function	;wreg free
  3984  0032A4  C0A4  F196         	movff	?_crack_drop_bool_function,sensed_function_3@sth_1136
  3985  0032A8  C0A5  F197         	movff	?_crack_drop_bool_function+1,sensed_function_3@sth_1136+1
  3986                           
  3987                           ;sensor.c: 107: if (sth){
  3988  0032AC  0101               	movlb	1	; () banked
  3989  0032AE  5196               	movf	sensed_function_3@sth_1136& (0+255),w,b
  3990  0032B0  1197               	iorwf	(sensed_function_3@sth_1136+1)& (0+255),w,b
  3991  0032B2  B4D8               	btfsc	status,2,c
  3992  0032B4  D017               	goto	l11984
  3993                           
  3994                           ; BSR set to: 1
  3995                           ;sensor.c: 108: drop_record(3);
  3996  0032B6  0E00               	movlw	0
  3997  0032B8  0100               	movlb	0	; () banked
  3998  0032BA  6F91               	movwf	(drop_record@aa+1)& (0+255),b
  3999  0032BC  0E03               	movlw	3
  4000  0032BE  6F90               	movwf	drop_record@aa& (0+255),b
  4001  0032C0  EC94  F023         	call	_drop_record	;wreg free
  4002                           
  4003                           ;sensor.c: 110: last_problem_bool[0] = 0;
  4004  0032C4  0E00               	movlw	0
  4005  0032C6  6E34               	movwf	_last_problem_bool,c
  4006  0032C8  0E00               	movlw	0
  4007  0032CA  6E35               	movwf	_last_problem_bool+1,c
  4008  0032CC  0E00               	movlw	0
  4009  0032CE  6E36               	movwf	_last_problem_bool+2,c
  4010  0032D0  0E00               	movlw	0
  4011  0032D2  6E37               	movwf	_last_problem_bool+3,c
  4012                           
  4013                           ;sensor.c: 111: last_problem_bool[1] = accum_straight_distance;
  4014  0032D4  C0C4  F038         	movff	_accum_straight_distance,_last_problem_bool+4
  4015  0032D8  C0C5  F039         	movff	_accum_straight_distance+1,_last_problem_bool+5
  4016  0032DC  C0C6  F03A         	movff	_accum_straight_distance+2,_last_problem_bool+6
  4017  0032E0  C0C7  F03B         	movff	_accum_straight_distance+3,_last_problem_bool+7
  4018  0032E4                     l11984:
  4019                           
  4020                           ;sensor.c: 112: };sensor.c: 113: record('c');
  4021  0032E4  0E63               	movlw	99
  4022  0032E6  ECD2  F012         	call	_record
  4023                           
  4024                           ;sensor.c: 114: }
  4025  0032EA  D028               	goto	l12000
  4026  0032EC                     l11986:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;sensor.c: 115: else{;sensor.c: 118: int sth = hole_drop_bool_function();
  4030  0032EC  EC63  F01B         	call	_hole_drop_bool_function	;wreg free
  4031  0032F0  C0A4  F198         	movff	?_hole_drop_bool_function,sensed_function_3@sth_1137
  4032  0032F4  C0A5  F199         	movff	?_hole_drop_bool_function+1,sensed_function_3@sth_1137+1
  4033                           
  4034                           ;sensor.c: 119: if (sth ==1){
  4035  0032F8  0101               	movlb	1	; () banked
  4036  0032FA  0598               	decf	sensed_function_3@sth_1137& (0+255),w,b
  4037  0032FC  1199               	iorwf	(sensed_function_3@sth_1137+1)& (0+255),w,b
  4038  0032FE  A4D8               	btfss	status,2,c
  4039  003300  D017               	goto	l11996
  4040                           
  4041                           ; BSR set to: 1
  4042                           ;sensor.c: 120: drop_record(4);
  4043  003302  0E00               	movlw	0
  4044  003304  0100               	movlb	0	; () banked
  4045  003306  6F91               	movwf	(drop_record@aa+1)& (0+255),b
  4046  003308  0E04               	movlw	4
  4047  00330A  6F90               	movwf	drop_record@aa& (0+255),b
  4048  00330C  EC94  F023         	call	_drop_record	;wreg free
  4049                           
  4050                           ;sensor.c: 122: last_problem_bool[0] = 1;
  4051  003310  0E00               	movlw	0
  4052  003312  6E34               	movwf	_last_problem_bool,c
  4053  003314  0E00               	movlw	0
  4054  003316  6E35               	movwf	_last_problem_bool+1,c
  4055  003318  0E80               	movlw	128
  4056  00331A  6E36               	movwf	_last_problem_bool+2,c
  4057  00331C  0E3F               	movlw	63
  4058  00331E  6E37               	movwf	_last_problem_bool+3,c
  4059                           
  4060                           ;sensor.c: 123: last_problem_bool[1] = accum_straight_distance;
  4061  003320  C0C4  F038         	movff	_accum_straight_distance,_last_problem_bool+4
  4062  003324  C0C5  F039         	movff	_accum_straight_distance+1,_last_problem_bool+5
  4063  003328  C0C6  F03A         	movff	_accum_straight_distance+2,_last_problem_bool+6
  4064  00332C  C0C7  F03B         	movff	_accum_straight_distance+3,_last_problem_bool+7
  4065  003330                     l11996:
  4066                           
  4067                           ;sensor.c: 124: };sensor.c: 125: record('h');
  4068  003330  0E68               	movlw	104
  4069  003332  ECD2  F012         	call	_record
  4070  003336  D002               	goto	l12000
  4071  003338                     l11998:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;sensor.c: 128: moving();
  4075  003338  ECFE  F029         	call	_moving	;wreg free
  4076  00333C                     l12000:
  4077  00333C  A280               	btfss	3968,1,c	;volatile
  4078  00333E  D004               	goto	u12020
  4079  003340  0100               	movlb	0	; () banked
  4080  003342  6BAE               	clrf	??_sensed_function_3& (0+255),b
  4081  003344  2BAE               	incf	??_sensed_function_3& (0+255),f,b
  4082  003346  D002               	goto	u12028
  4083  003348                     u12020:
  4084  003348  0100               	movlb	0	; () banked
  4085  00334A  6BAE               	clrf	??_sensed_function_3& (0+255),b
  4086  00334C                     u12028:
  4087  00334C  51AE               	movf	??_sensed_function_3& (0+255),w,b
  4088  00334E  A681               	btfss	3969,3,c	;volatile
  4089  003350  D003               	goto	u12030
  4090  003352  6BAF               	clrf	(??_sensed_function_3+1)& (0+255),b
  4091  003354  2BAF               	incf	(??_sensed_function_3+1)& (0+255),f,b
  4092  003356  D002               	goto	u12038
  4093  003358                     u12030:
  4094  003358  0100               	movlb	0	; () banked
  4095  00335A  6BAF               	clrf	(??_sensed_function_3+1)& (0+255),b
  4096  00335C                     u12038:
  4097  00335C  C0AF  F0B0         	movff	??_sensed_function_3+1,??_sensed_function_3+2
  4098  003360  6BB1               	clrf	(??_sensed_function_3+3)& (0+255),b
  4099  003362  27B0               	addwf	(??_sensed_function_3+2)& (0+255),f,b
  4100  003364  0E00               	movlw	0
  4101  003366  23B1               	addwfc	(??_sensed_function_3+3)& (0+255),f,b
  4102  003368  A481               	btfss	3969,2,c	;volatile
  4103  00336A  D003               	goto	u12040
  4104  00336C  6BB2               	clrf	(??_sensed_function_3+4)& (0+255),b
  4105  00336E  2BB2               	incf	(??_sensed_function_3+4)& (0+255),f,b
  4106  003370  D002               	goto	u12048
  4107  003372                     u12040:
  4108  003372  0100               	movlb	0	; () banked
  4109  003374  6BB2               	clrf	(??_sensed_function_3+4)& (0+255),b
  4110  003376                     u12048:
  4111  003376  51B2               	movf	(??_sensed_function_3+4)& (0+255),w,b
  4112  003378  27B0               	addwf	(??_sensed_function_3+2)& (0+255),f,b
  4113  00337A  0E00               	movlw	0
  4114  00337C  23B1               	addwfc	(??_sensed_function_3+3)& (0+255),f,b
  4115  00337E  BFB1               	btfsc	(??_sensed_function_3+3)& (0+255),7,b
  4116  003380  D005               	goto	u12050
  4117  003382  51B1               	movf	(??_sensed_function_3+3)& (0+255),w,b
  4118  003384  E1D9               	bnz	l11998
  4119  003386  05B0               	decf	(??_sensed_function_3+2)& (0+255),w,b
  4120  003388  B0D8               	btfsc	status,0,c
  4121  00338A  D7D6               	goto	l11998
  4122  00338C                     u12050:
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;sensor.c: 129: };sensor.c: 130: Stop();
  4126  00338C  ECAA  F02A         	call	_Stop	;wreg free
  4127  003390  0012               	return		;funcret
  4128  003392                     __end_of_sensed_function_3:
  4129                           	opt callstack 0
  4130                           
  4131 ;; *************** function _record *****************
  4132 ;; Defined at:
  4133 ;;		line 132 in file "sensor.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  corh            1    wreg     unsigned char 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  corh            1   37[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      void 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;Total ram usage:        3 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:   13
  4154 ;; This function calls:
  4155 ;;		___flmul
  4156 ;;		___fltol
  4157 ;;		_printf
  4158 ;; This function is called by:
  4159 ;;		_sensed_function_3
  4160 ;; This function uses a non-reentrant model
  4161 ;;
  4162                           
  4163                           	psect	text10
  4164  0025A4                     __ptext10:
  4165                           	opt callstack 0
  4166  0025A4                     _record:
  4167                           	opt callstack 16
  4168                           
  4169                           ;incstack = 0
  4170                           ;record@corh stored from wreg
  4171  0025A4  0100               	movlb	0	; () banked
  4172  0025A6  6FA5               	movwf	record@corh& (0+255),b
  4173                           
  4174                           ;sensor.c: 133: if (corh == 'c'){
  4175  0025A8  0E63               	movlw	99
  4176  0025AA  0100               	movlb	0	; () banked
  4177  0025AC  19A5               	xorwf	record@corh& (0+255),w,b
  4178  0025AE  A4D8               	btfss	status,2,c
  4179  0025B0  D07A               	goto	l11194
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;sensor.c: 134: array_cracks_distance[crack_counter] = (int) (accum_straight_distance*28
      +                          .3);
  4183  0025B2  0E66               	movlw	102
  4184  0025B4  6F84               	movwf	___flmul@a& (0+255),b
  4185  0025B6  0E66               	movlw	102
  4186  0025B8  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4187  0025BA  0EE2               	movlw	226
  4188  0025BC  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4189  0025BE  0E41               	movlw	65
  4190  0025C0  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4191  0025C2  C0C4  F080         	movff	_accum_straight_distance,___flmul@b
  4192  0025C6  C0C5  F081         	movff	_accum_straight_distance+1,___flmul@b+1
  4193  0025CA  C0C6  F082         	movff	_accum_straight_distance+2,___flmul@b+2
  4194  0025CE  C0C7  F083         	movff	_accum_straight_distance+3,___flmul@b+3
  4195  0025D2  EC41  F009         	call	___flmul	;wreg free
  4196  0025D6  C080  F099         	movff	?___flmul,___fltol@f1
  4197  0025DA  C081  F09A         	movff	?___flmul+1,___fltol@f1+1
  4198  0025DE  C082  F09B         	movff	?___flmul+2,___fltol@f1+2
  4199  0025E2  C083  F09C         	movff	?___flmul+3,___fltol@f1+3
  4200  0025E6  EC2C  F01F         	call	___fltol	;wreg free
  4201  0025EA  90D8               	bcf	status,0,c
  4202  0025EC  3446               	rlcf	_crack_counter,w,c
  4203  0025EE  6ED9               	movwf	fsr2l,c
  4204  0025F0  3447               	rlcf	_crack_counter+1,w,c
  4205  0025F2  6EDA               	movwf	fsr2h,c
  4206  0025F4  0E30               	movlw	low _array_cracks_distance
  4207  0025F6  26D9               	addwf	fsr2l,f,c
  4208  0025F8  0E01               	movlw	high _array_cracks_distance
  4209  0025FA  22DA               	addwfc	fsr2h,f,c
  4210  0025FC  0100               	movlb	0	; () banked
  4211  0025FE  C099  FFDE         	movff	?___fltol,postinc2
  4212  002602  C09A  FFDD         	movff	?___fltol+1,postdec2
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;sensor.c: 135: crack_counter +=1;
  4216  002606  4A46               	infsnz	_crack_counter,f,c
  4217  002608  2A47               	incf	_crack_counter+1,f,c
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;sensor.c: 136: if (last_sensed == 2){
  4221  00260A  0E02               	movlw	2
  4222  00260C  19DA               	xorwf	_last_sensed& (0+255),w,b
  4223  00260E  11DB               	iorwf	(_last_sensed+1)& (0+255),w,b
  4224  002610  A4D8               	btfss	status,2,c
  4225  002612  D010               	goto	l11172
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;sensor.c: 137: LATDbits.LATD0 = 1;
  4229  002614  808C               	bsf	3980,0,c	;volatile
  4230                           
  4231                           ;sensor.c: 138: LATDbits.LATD1 = 0;
  4232  002616  928C               	bcf	3980,1,c	;volatile
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;sensor.c: 139: _delay((unsigned long)((wety_deg)*(10000000/4000.0)));
  4236  002618  0E08               	movlw	8
  4237  00261A  0100               	movlb	0	; () banked
  4238  00261C  6FA4               	movwf	(??_record+1)& (0+255),b
  4239  00261E  0E9D               	movlw	157
  4240  002620  6FA3               	movwf	??_record& (0+255),b
  4241  002622  0E05               	movlw	5
  4242  002624                     u12847:
  4243  002624  2EE8               	decfsz	wreg,f,c
  4244  002626  D7FE               	bra	u12847
  4245  002628  2FA3               	decfsz	??_record& (0+255),f,b
  4246  00262A  D7FC               	bra	u12847
  4247  00262C  2FA4               	decfsz	(??_record+1)& (0+255),f,b
  4248  00262E  D7FA               	bra	u12847
  4249  002630  D000               	nop2	
  4250                           
  4251                           ;sensor.c: 140: }
  4252  002632  D031               	goto	l11188
  4253  002634                     l11172:
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;sensor.c: 141: else if(last_sensed == 0){
  4257  002634  51DA               	movf	_last_sensed& (0+255),w,b
  4258  002636  11DB               	iorwf	(_last_sensed+1)& (0+255),w,b
  4259  002638  A4D8               	btfss	status,2,c
  4260  00263A  D00F               	goto	l661
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;sensor.c: 142: LATDbits.LATD0 = 1;
  4264  00263C  808C               	bsf	3980,0,c	;volatile
  4265                           
  4266                           ;sensor.c: 143: LATDbits.LATD1 = 0;
  4267  00263E  928C               	bcf	3980,1,c	;volatile
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;sensor.c: 144: _delay((unsigned long)((ninty_deg)*(10000000/4000.0)));
  4271  002640  0E04               	movlw	4
  4272  002642  0100               	movlb	0	; () banked
  4273  002644  6FA4               	movwf	(??_record+1)& (0+255),b
  4274  002646  0E4D               	movlw	77
  4275  002648  6FA3               	movwf	??_record& (0+255),b
  4276  00264A  0E23               	movlw	35
  4277  00264C                     u12857:
  4278  00264C  2EE8               	decfsz	wreg,f,c
  4279  00264E  D7FE               	bra	u12857
  4280  002650  2FA3               	decfsz	??_record& (0+255),f,b
  4281  002652  D7FC               	bra	u12857
  4282  002654  2FA4               	decfsz	(??_record+1)& (0+255),f,b
  4283  002656  D7FA               	bra	u12857
  4284                           
  4285                           ;sensor.c: 145: }
  4286  002658  D01E               	goto	l11188
  4287  00265A                     l661:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;sensor.c: 146: else{;sensor.c: 147: LATDbits.LATD0 = 1;
  4291  00265A  808C               	bsf	3980,0,c	;volatile
  4292                           
  4293                           ;sensor.c: 148: LATDbits.LATD1 = 0;
  4294  00265C  928C               	bcf	3980,1,c	;volatile
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;sensor.c: 149: _delay((unsigned long)((50)*(10000000/4000.0)));
  4298  00265E  0EA3               	movlw	163
  4299  002660  0100               	movlb	0	; () banked
  4300  002662  6FA3               	movwf	??_record& (0+255),b
  4301  002664  0E55               	movlw	85
  4302  002666                     u12867:
  4303  002666  2EE8               	decfsz	wreg,f,c
  4304  002668  D7FE               	bra	u12867
  4305  00266A  2FA3               	decfsz	??_record& (0+255),f,b
  4306  00266C  D7FC               	bra	u12867
  4307                           
  4308                           ;sensor.c: 150: LATDbits.LATD0 = 0;
  4309  00266E  908C               	bcf	3980,0,c	;volatile
  4310                           
  4311                           ;sensor.c: 151: LATDbits.LATD1 = 0;
  4312  002670  928C               	bcf	3980,1,c	;volatile
  4313                           
  4314                           ;sensor.c: 152: _delay((unsigned long)((50)*(10000000/4000.0)));
  4315  002672  0EA3               	movlw	163
  4316  002674  0100               	movlb	0	; () banked
  4317  002676  6FA3               	movwf	??_record& (0+255),b
  4318  002678  0E55               	movlw	85
  4319  00267A                     u12877:
  4320  00267A  2EE8               	decfsz	wreg,f,c
  4321  00267C  D7FE               	bra	u12877
  4322  00267E  2FA3               	decfsz	??_record& (0+255),f,b
  4323  002680  D7FC               	bra	u12877
  4324                           
  4325                           ;sensor.c: 153: LATDbits.LATD0 = 0;
  4326  002682  908C               	bcf	3980,0,c	;volatile
  4327                           
  4328                           ;sensor.c: 154: LATDbits.LATD1 = 1;
  4329  002684  828C               	bsf	3980,1,c	;volatile
  4330                           
  4331                           ;sensor.c: 155: _delay((unsigned long)((50)*(10000000/4000.0)));
  4332  002686  0EA3               	movlw	163
  4333  002688  0100               	movlb	0	; () banked
  4334  00268A  6FA3               	movwf	??_record& (0+255),b
  4335  00268C  0E55               	movlw	85
  4336  00268E                     u12887:
  4337  00268E  2EE8               	decfsz	wreg,f,c
  4338  002690  D7FE               	bra	u12887
  4339  002692  2FA3               	decfsz	??_record& (0+255),f,b
  4340  002694  D7FC               	bra	u12887
  4341  002696                     l11188:
  4342                           
  4343                           ;sensor.c: 156: };sensor.c: 157: LATDbits.LATD0 = 0;
  4344  002696  908C               	bcf	3980,0,c	;volatile
  4345                           
  4346                           ;sensor.c: 158: LATDbits.LATD1 = 0;
  4347  002698  928C               	bcf	3980,1,c	;volatile
  4348                           
  4349                           ;sensor.c: 160: last_sensed = 1;
  4350  00269A  0E00               	movlw	0
  4351  00269C  0100               	movlb	0	; () banked
  4352  00269E  6FDB               	movwf	(_last_sensed+1)& (0+255),b
  4353  0026A0  0E01               	movlw	1
  4354  0026A2  6FDA               	movwf	_last_sensed& (0+255),b
  4355                           
  4356                           ;sensor.c: 162: }
  4357  0026A4  0012               	return	
  4358  0026A6                     l11194:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;sensor.c: 163: else if (corh == 'h'){
  4362  0026A6  0E68               	movlw	104
  4363  0026A8  19A5               	xorwf	record@corh& (0+255),w,b
  4364  0026AA  A4D8               	btfss	status,2,c
  4365  0026AC  D079               	goto	l11228
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;sensor.c: 164: array_holes_distance[hole_counter] = (int) (accum_straight_distance*28.3
      +                          );
  4369  0026AE  0E66               	movlw	102
  4370  0026B0  6F84               	movwf	___flmul@a& (0+255),b
  4371  0026B2  0E66               	movlw	102
  4372  0026B4  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4373  0026B6  0EE2               	movlw	226
  4374  0026B8  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4375  0026BA  0E41               	movlw	65
  4376  0026BC  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4377  0026BE  C0C4  F080         	movff	_accum_straight_distance,___flmul@b
  4378  0026C2  C0C5  F081         	movff	_accum_straight_distance+1,___flmul@b+1
  4379  0026C6  C0C6  F082         	movff	_accum_straight_distance+2,___flmul@b+2
  4380  0026CA  C0C7  F083         	movff	_accum_straight_distance+3,___flmul@b+3
  4381  0026CE  EC41  F009         	call	___flmul	;wreg free
  4382  0026D2  C080  F099         	movff	?___flmul,___fltol@f1
  4383  0026D6  C081  F09A         	movff	?___flmul+1,___fltol@f1+1
  4384  0026DA  C082  F09B         	movff	?___flmul+2,___fltol@f1+2
  4385  0026DE  C083  F09C         	movff	?___flmul+3,___fltol@f1+3
  4386  0026E2  EC2C  F01F         	call	___fltol	;wreg free
  4387  0026E6  90D8               	bcf	status,0,c
  4388  0026E8  3448               	rlcf	_hole_counter,w,c
  4389  0026EA  6ED9               	movwf	fsr2l,c
  4390  0026EC  3449               	rlcf	_hole_counter+1,w,c
  4391  0026EE  6EDA               	movwf	fsr2h,c
  4392  0026F0  0E48               	movlw	low _array_holes_distance
  4393  0026F2  26D9               	addwf	fsr2l,f,c
  4394  0026F4  0E01               	movlw	high _array_holes_distance
  4395  0026F6  22DA               	addwfc	fsr2h,f,c
  4396  0026F8  0100               	movlb	0	; () banked
  4397  0026FA  C099  FFDE         	movff	?___fltol,postinc2
  4398  0026FE  C09A  FFDD         	movff	?___fltol+1,postdec2
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;sensor.c: 165: hole_counter +=1;
  4402  002702  4A48               	infsnz	_hole_counter,f,c
  4403  002704  2A49               	incf	_hole_counter+1,f,c
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;sensor.c: 166: if (last_sensed == 1){
  4407  002706  05DA               	decf	_last_sensed& (0+255),w,b
  4408  002708  11DB               	iorwf	(_last_sensed+1)& (0+255),w,b
  4409  00270A  A4D8               	btfss	status,2,c
  4410  00270C  D010               	goto	l11206
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;sensor.c: 167: LATDbits.LATD0 = 1;
  4414  00270E  808C               	bsf	3980,0,c	;volatile
  4415                           
  4416                           ;sensor.c: 168: LATDbits.LATD1 = 0;
  4417  002710  928C               	bcf	3980,1,c	;volatile
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;sensor.c: 169: _delay((unsigned long)((wety_deg)*(10000000/4000.0)));
  4421  002712  0E08               	movlw	8
  4422  002714  0100               	movlb	0	; () banked
  4423  002716  6FA4               	movwf	(??_record+1)& (0+255),b
  4424  002718  0E9D               	movlw	157
  4425  00271A  6FA3               	movwf	??_record& (0+255),b
  4426  00271C  0E05               	movlw	5
  4427  00271E                     u12897:
  4428  00271E  2EE8               	decfsz	wreg,f,c
  4429  002720  D7FE               	bra	u12897
  4430  002722  2FA3               	decfsz	??_record& (0+255),f,b
  4431  002724  D7FC               	bra	u12897
  4432  002726  2FA4               	decfsz	(??_record+1)& (0+255),f,b
  4433  002728  D7FA               	bra	u12897
  4434  00272A  D000               	nop2	
  4435                           
  4436                           ;sensor.c: 170: }
  4437  00272C  D031               	goto	l11222
  4438  00272E                     l11206:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;sensor.c: 171: else if (last_sensed == 0){
  4442  00272E  51DA               	movf	_last_sensed& (0+255),w,b
  4443  002730  11DB               	iorwf	(_last_sensed+1)& (0+255),w,b
  4444  002732  A4D8               	btfss	status,2,c
  4445  002734  D00F               	goto	l667
  4446                           
  4447                           ; BSR set to: 0
  4448                           ;sensor.c: 172: LATDbits.LATD0 = 0;
  4449  002736  908C               	bcf	3980,0,c	;volatile
  4450                           
  4451                           ;sensor.c: 173: LATDbits.LATD1 = 1;
  4452  002738  828C               	bsf	3980,1,c	;volatile
  4453                           
  4454                           ; BSR set to: 0
  4455                           ;sensor.c: 174: _delay((unsigned long)((ninty_deg)*(10000000/4000.0)));
  4456  00273A  0E04               	movlw	4
  4457  00273C  0100               	movlb	0	; () banked
  4458  00273E  6FA4               	movwf	(??_record+1)& (0+255),b
  4459  002740  0E4D               	movlw	77
  4460  002742  6FA3               	movwf	??_record& (0+255),b
  4461  002744  0E23               	movlw	35
  4462  002746                     u12907:
  4463  002746  2EE8               	decfsz	wreg,f,c
  4464  002748  D7FE               	bra	u12907
  4465  00274A  2FA3               	decfsz	??_record& (0+255),f,b
  4466  00274C  D7FC               	bra	u12907
  4467  00274E  2FA4               	decfsz	(??_record+1)& (0+255),f,b
  4468  002750  D7FA               	bra	u12907
  4469                           
  4470                           ;sensor.c: 175: }
  4471  002752  D01E               	goto	l11222
  4472  002754                     l667:
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;sensor.c: 176: else{;sensor.c: 177: LATDbits.LATD0 = 1;
  4476  002754  808C               	bsf	3980,0,c	;volatile
  4477                           
  4478                           ;sensor.c: 178: LATDbits.LATD1 = 0;
  4479  002756  928C               	bcf	3980,1,c	;volatile
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;sensor.c: 179: _delay((unsigned long)((50)*(10000000/4000.0)));
  4483  002758  0EA3               	movlw	163
  4484  00275A  0100               	movlb	0	; () banked
  4485  00275C  6FA3               	movwf	??_record& (0+255),b
  4486  00275E  0E55               	movlw	85
  4487  002760                     u12917:
  4488  002760  2EE8               	decfsz	wreg,f,c
  4489  002762  D7FE               	bra	u12917
  4490  002764  2FA3               	decfsz	??_record& (0+255),f,b
  4491  002766  D7FC               	bra	u12917
  4492                           
  4493                           ;sensor.c: 180: LATDbits.LATD0 = 0;
  4494  002768  908C               	bcf	3980,0,c	;volatile
  4495                           
  4496                           ;sensor.c: 181: LATDbits.LATD1 = 0;
  4497  00276A  928C               	bcf	3980,1,c	;volatile
  4498                           
  4499                           ;sensor.c: 182: _delay((unsigned long)((50)*(10000000/4000.0)));
  4500  00276C  0EA3               	movlw	163
  4501  00276E  0100               	movlb	0	; () banked
  4502  002770  6FA3               	movwf	??_record& (0+255),b
  4503  002772  0E55               	movlw	85
  4504  002774                     u12927:
  4505  002774  2EE8               	decfsz	wreg,f,c
  4506  002776  D7FE               	bra	u12927
  4507  002778  2FA3               	decfsz	??_record& (0+255),f,b
  4508  00277A  D7FC               	bra	u12927
  4509                           
  4510                           ;sensor.c: 183: LATDbits.LATD0 = 0;
  4511  00277C  908C               	bcf	3980,0,c	;volatile
  4512                           
  4513                           ;sensor.c: 184: LATDbits.LATD1 = 1;
  4514  00277E  828C               	bsf	3980,1,c	;volatile
  4515                           
  4516                           ;sensor.c: 185: _delay((unsigned long)((50)*(10000000/4000.0)));
  4517  002780  0EA3               	movlw	163
  4518  002782  0100               	movlb	0	; () banked
  4519  002784  6FA3               	movwf	??_record& (0+255),b
  4520  002786  0E55               	movlw	85
  4521  002788                     u12937:
  4522  002788  2EE8               	decfsz	wreg,f,c
  4523  00278A  D7FE               	bra	u12937
  4524  00278C  2FA3               	decfsz	??_record& (0+255),f,b
  4525  00278E  D7FC               	bra	u12937
  4526  002790                     l11222:
  4527                           
  4528                           ;sensor.c: 186: };sensor.c: 187: LATDbits.LATD0 = 0;
  4529  002790  908C               	bcf	3980,0,c	;volatile
  4530                           
  4531                           ;sensor.c: 188: LATDbits.LATD1 = 0;
  4532  002792  928C               	bcf	3980,1,c	;volatile
  4533                           
  4534                           ;sensor.c: 189: last_sensed = 2;
  4535  002794  0E00               	movlw	0
  4536  002796  0100               	movlb	0	; () banked
  4537  002798  6FDB               	movwf	(_last_sensed+1)& (0+255),b
  4538  00279A  0E02               	movlw	2
  4539  00279C  6FDA               	movwf	_last_sensed& (0+255),b
  4540                           
  4541                           ;sensor.c: 191: }
  4542  00279E  0012               	return	
  4543  0027A0                     l11228:
  4544                           
  4545                           ; BSR set to: 0
  4546                           ;sensor.c: 192: else{;sensor.c: 193: printf("wrong");
  4547  0027A0  0EEC               	movlw	low STR_5
  4548  0027A2  6F8E               	movwf	printf@f& (0+255),b
  4549  0027A4  0EFF               	movlw	high STR_5
  4550  0027A6  6F8F               	movwf	(printf@f+1)& (0+255),b
  4551  0027A8  EC81  F010         	call	_printf	;wreg free
  4552                           
  4553                           ;sensor.c: 194: _delay((unsigned long)((10000)*(10000000/4000.0)));
  4554  0027AC  0E7F               	movlw	127
  4555  0027AE  0100               	movlb	0	; () banked
  4556  0027B0  6FA4               	movwf	(??_record+1)& (0+255),b
  4557  0027B2  0ED4               	movlw	212
  4558  0027B4  6FA3               	movwf	??_record& (0+255),b
  4559  0027B6  0E31               	movlw	49
  4560  0027B8                     u12947:
  4561  0027B8  2EE8               	decfsz	wreg,f,c
  4562  0027BA  D7FE               	bra	u12947
  4563  0027BC  2FA3               	decfsz	??_record& (0+255),f,b
  4564  0027BE  D7FC               	bra	u12947
  4565  0027C0  2FA4               	decfsz	(??_record+1)& (0+255),f,b
  4566  0027C2  D7FA               	bra	u12947
  4567  0027C4  D000               	nop2	
  4568  0027C6  0012               	return		;funcret
  4569  0027C8                     __end_of_record:
  4570                           	opt callstack 0
  4571                           
  4572 ;; *************** function ___fltol *****************
  4573 ;; Defined at:
  4574 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  4575 ;; Parameters:    Size  Location     Type
  4576 ;;  f1              4   25[BANK0 ] void 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  exp1            1   34[BANK0 ] unsigned char 
  4579 ;;  sign1           1   33[BANK0 ] unsigned char 
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  4   25[BANK0 ] long 
  4582 ;; Registers used:
  4583 ;;		wreg, status,2, status,0
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4589 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;Total ram usage:       10 bytes
  4594 ;; Hardware stack levels used:    1
  4595 ;; Hardware stack levels required when called:    8
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_completion_return
  4600 ;;		_record
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text11
  4605  003E58                     __ptext11:
  4606                           	opt callstack 0
  4607  003E58                     ___fltol:
  4608                           	opt callstack 20
  4609                           
  4610                           ;incstack = 0
  4611  003E58  0100               	movlb	0	; () banked
  4612  003E5A  359B               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4613  003E5C  359C               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4614  003E5E  6FA2               	movwf	___fltol@exp1& (0+255),b
  4615  003E60  51A2               	movf	___fltol@exp1& (0+255),w,b
  4616  003E62  A4D8               	btfss	status,2,c
  4617  003E64  D009               	goto	l10928
  4618  003E66                     u10990:
  4619                           
  4620                           ; BSR set to: 0
  4621  003E66  0E00               	movlw	0
  4622  003E68  6F99               	movwf	?___fltol& (0+255),b
  4623  003E6A  0E00               	movlw	0
  4624  003E6C  6F9A               	movwf	(?___fltol+1)& (0+255),b
  4625  003E6E  0E00               	movlw	0
  4626  003E70  6F9B               	movwf	(?___fltol+2)& (0+255),b
  4627  003E72  0E00               	movlw	0
  4628  003E74  6F9C               	movwf	(?___fltol+3)& (0+255),b
  4629  003E76  0012               	return	
  4630  003E78                     l10928:
  4631                           
  4632                           ; BSR set to: 0
  4633  003E78  C099  F09D         	movff	___fltol@f1,??___fltol
  4634  003E7C  C09A  F09E         	movff	___fltol@f1+1,??___fltol+1
  4635  003E80  C09B  F09F         	movff	___fltol@f1+2,??___fltol+2
  4636  003E84  C09C  F0A0         	movff	___fltol@f1+3,??___fltol+3
  4637  003E88  0E20               	movlw	32
  4638  003E8A  D005               	goto	u11000
  4639  003E8C                     u11005:
  4640  003E8C  90D8               	bcf	status,0,c
  4641  003E8E  33A0               	rrcf	(??___fltol+3)& (0+255),f,b
  4642  003E90  339F               	rrcf	(??___fltol+2)& (0+255),f,b
  4643  003E92  339E               	rrcf	(??___fltol+1)& (0+255),f,b
  4644  003E94  339D               	rrcf	??___fltol& (0+255),f,b
  4645  003E96                     u11000:
  4646  003E96  2EE8               	decfsz	wreg,f,c
  4647  003E98  D7F9               	goto	u11005
  4648  003E9A  519D               	movf	??___fltol& (0+255),w,b
  4649  003E9C  6FA1               	movwf	___fltol@sign1& (0+255),b
  4650                           
  4651                           ; BSR set to: 0
  4652  003E9E  8F9B               	bsf	(___fltol@f1+2)& (0+255),7,b
  4653                           
  4654                           ; BSR set to: 0
  4655  003EA0  0EFF               	movlw	255
  4656  003EA2  1799               	andwf	___fltol@f1& (0+255),f,b
  4657  003EA4  0EFF               	movlw	255
  4658  003EA6  179A               	andwf	(___fltol@f1+1)& (0+255),f,b
  4659  003EA8  0EFF               	movlw	255
  4660  003EAA  179B               	andwf	(___fltol@f1+2)& (0+255),f,b
  4661  003EAC  0E00               	movlw	0
  4662  003EAE  179C               	andwf	(___fltol@f1+3)& (0+255),f,b
  4663                           
  4664                           ; BSR set to: 0
  4665  003EB0  0E96               	movlw	150
  4666  003EB2  5FA2               	subwf	___fltol@exp1& (0+255),f,b
  4667                           
  4668                           ; BSR set to: 0
  4669  003EB4  AFA2               	btfss	___fltol@exp1& (0+255),7,b
  4670  003EB6  D00D               	goto	l10948
  4671                           
  4672                           ; BSR set to: 0
  4673  003EB8  51A2               	movf	___fltol@exp1& (0+255),w,b
  4674  003EBA  0A80               	xorlw	128
  4675  003EBC  0F97               	addlw	151
  4676  003EBE  A0D8               	btfss	status,0,c
  4677  003EC0  D7D2               	goto	u10990
  4678  003EC2                     l10944:
  4679                           
  4680                           ; BSR set to: 0
  4681  003EC2  90D8               	bcf	status,0,c
  4682  003EC4  339C               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4683  003EC6  339B               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4684  003EC8  339A               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4685  003ECA  3399               	rrcf	___fltol@f1& (0+255),f,b
  4686                           
  4687                           ; BSR set to: 0
  4688  003ECC  3FA2               	incfsz	___fltol@exp1& (0+255),f,b
  4689  003ECE  D7F9               	goto	l10944
  4690  003ED0  D00D               	goto	u11040
  4691  003ED2                     l10948:
  4692                           
  4693                           ; BSR set to: 0
  4694  003ED2  0E1F               	movlw	31
  4695  003ED4  65A2               	cpfsgt	___fltol@exp1& (0+255),b
  4696  003ED6  D007               	goto	l10956
  4697  003ED8  D7C6               	goto	u10990
  4698  003EDA                     l10954:
  4699                           
  4700                           ; BSR set to: 0
  4701  003EDA  90D8               	bcf	status,0,c
  4702  003EDC  3799               	rlcf	___fltol@f1& (0+255),f,b
  4703  003EDE  379A               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4704  003EE0  379B               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4705  003EE2  379C               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4706  003EE4  07A2               	decf	___fltol@exp1& (0+255),f,b
  4707  003EE6                     l10956:
  4708                           
  4709                           ; BSR set to: 0
  4710  003EE6  51A2               	movf	___fltol@exp1& (0+255),w,b
  4711  003EE8  A4D8               	btfss	status,2,c
  4712  003EEA  D7F7               	goto	l10954
  4713  003EEC                     u11040:
  4714                           
  4715                           ; BSR set to: 0
  4716  003EEC  51A1               	movf	___fltol@sign1& (0+255),w,b
  4717  003EEE  B4D8               	btfsc	status,2,c
  4718  003EF0  D008               	goto	l10962
  4719                           
  4720                           ; BSR set to: 0
  4721  003EF2  1F9C               	comf	(___fltol@f1+3)& (0+255),f,b
  4722  003EF4  1F9B               	comf	(___fltol@f1+2)& (0+255),f,b
  4723  003EF6  1F9A               	comf	(___fltol@f1+1)& (0+255),f,b
  4724  003EF8  6D99               	negf	___fltol@f1& (0+255),b
  4725  003EFA  0E00               	movlw	0
  4726  003EFC  239A               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4727  003EFE  239B               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4728  003F00  239C               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4729  003F02                     l10962:
  4730                           
  4731                           ; BSR set to: 0
  4732  003F02  C099  F099         	movff	___fltol@f1,?___fltol
  4733  003F06  C09A  F09A         	movff	___fltol@f1+1,?___fltol+1
  4734  003F0A  C09B  F09B         	movff	___fltol@f1+2,?___fltol+2
  4735  003F0E  C09C  F09C         	movff	___fltol@f1+3,?___fltol+3
  4736                           
  4737                           ; BSR set to: 0
  4738  003F12  0012               	return		;funcret
  4739  003F14                     __end_of___fltol:
  4740                           	opt callstack 0
  4741                           
  4742 ;; *************** function ___flmul *****************
  4743 ;; Defined at:
  4744 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  b               4    0[BANK0 ] long 
  4747 ;;  a               4    4[BANK0 ] long 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  prod            4   19[BANK0 ] struct .
  4750 ;;  grs             4   14[BANK0 ] unsigned long 
  4751 ;;  temp            2   23[BANK0 ] struct .
  4752 ;;  bexp            1   18[BANK0 ] unsigned char 
  4753 ;;  aexp            1   13[BANK0 ] unsigned char 
  4754 ;;  sign            1   12[BANK0 ] unsigned char 
  4755 ;; Return value:  Size  Location     Type
  4756 ;;                  4    0[BANK0 ] unsigned char 
  4757 ;; Registers used:
  4758 ;;		wreg, status,2, status,0, prodl, prodh
  4759 ;; Tracked objects:
  4760 ;;		On entry : 0/0
  4761 ;;		On exit  : 0/0
  4762 ;;		Unchanged: 0/0
  4763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4764 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4766 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;Total ram usage:       25 bytes
  4769 ;; Hardware stack levels used:    1
  4770 ;; Hardware stack levels required when called:    8
  4771 ;; This function calls:
  4772 ;;		Nothing
  4773 ;; This function is called by:
  4774 ;;		_completion_return
  4775 ;;		_record
  4776 ;; This function uses a non-reentrant model
  4777 ;;
  4778                           
  4779                           	psect	text12
  4780  001282                     __ptext12:
  4781                           	opt callstack 0
  4782  001282                     ___flmul:
  4783                           	opt callstack 20
  4784                           
  4785                           ; BSR set to: 0
  4786                           ;incstack = 0
  4787  001282  0100               	movlb	0	; () banked
  4788  001284  5183               	movf	(___flmul@b+3)& (0+255),w,b
  4789  001286  0B80               	andlw	128
  4790  001288  6F8C               	movwf	___flmul@sign& (0+255),b
  4791  00128A  5183               	movf	(___flmul@b+3)& (0+255),w,b
  4792  00128C  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  4793  00128E  6F92               	movwf	___flmul@bexp& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796  001290  BF82               	btfsc	(___flmul@b+2)& (0+255),7,b
  4797                           
  4798                           ; BSR set to: 0
  4799  001292  8192               	bsf	___flmul@bexp& (0+255),0,b
  4800                           
  4801                           ; BSR set to: 0
  4802  001294  5192               	movf	___flmul@bexp& (0+255),w,b
  4803  001296  B4D8               	btfsc	status,2,c
  4804  001298  D00D               	goto	l10762
  4805                           
  4806                           ; BSR set to: 0
  4807  00129A  2992               	incf	___flmul@bexp& (0+255),w,b
  4808  00129C  A4D8               	btfss	status,2,c
  4809  00129E  D008               	goto	l10760
  4810                           
  4811                           ; BSR set to: 0
  4812  0012A0  0E00               	movlw	0
  4813  0012A2  6F80               	movwf	___flmul@b& (0+255),b
  4814  0012A4  0E00               	movlw	0
  4815  0012A6  6F81               	movwf	(___flmul@b+1)& (0+255),b
  4816  0012A8  0E00               	movlw	0
  4817  0012AA  6F82               	movwf	(___flmul@b+2)& (0+255),b
  4818  0012AC  0E00               	movlw	0
  4819  0012AE  6F83               	movwf	(___flmul@b+3)& (0+255),b
  4820  0012B0                     l10760:
  4821                           
  4822                           ; BSR set to: 0
  4823  0012B0  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  4824  0012B2  D008               	goto	l10764
  4825  0012B4                     l10762:
  4826                           
  4827                           ; BSR set to: 0
  4828  0012B4  0E00               	movlw	0
  4829  0012B6  6F80               	movwf	___flmul@b& (0+255),b
  4830  0012B8  0E00               	movlw	0
  4831  0012BA  6F81               	movwf	(___flmul@b+1)& (0+255),b
  4832  0012BC  0E00               	movlw	0
  4833  0012BE  6F82               	movwf	(___flmul@b+2)& (0+255),b
  4834  0012C0  0E00               	movlw	0
  4835  0012C2  6F83               	movwf	(___flmul@b+3)& (0+255),b
  4836  0012C4                     l10764:
  4837                           
  4838                           ; BSR set to: 0
  4839  0012C4  5187               	movf	(___flmul@a+3)& (0+255),w,b
  4840  0012C6  0B80               	andlw	128
  4841  0012C8  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  4842                           
  4843                           ; BSR set to: 0
  4844  0012CA  5187               	movf	(___flmul@a+3)& (0+255),w,b
  4845  0012CC  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  4846  0012CE  6F8D               	movwf	___flmul@aexp& (0+255),b
  4847                           
  4848                           ; BSR set to: 0
  4849  0012D0  BF86               	btfsc	(___flmul@a+2)& (0+255),7,b
  4850                           
  4851                           ; BSR set to: 0
  4852  0012D2  818D               	bsf	___flmul@aexp& (0+255),0,b
  4853                           
  4854                           ; BSR set to: 0
  4855  0012D4  518D               	movf	___flmul@aexp& (0+255),w,b
  4856  0012D6  B4D8               	btfsc	status,2,c
  4857  0012D8  D00D               	goto	l10780
  4858                           
  4859                           ; BSR set to: 0
  4860  0012DA  298D               	incf	___flmul@aexp& (0+255),w,b
  4861  0012DC  A4D8               	btfss	status,2,c
  4862  0012DE  D008               	goto	l10778
  4863                           
  4864                           ; BSR set to: 0
  4865  0012E0  0E00               	movlw	0
  4866  0012E2  6F84               	movwf	___flmul@a& (0+255),b
  4867  0012E4  0E00               	movlw	0
  4868  0012E6  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4869  0012E8  0E00               	movlw	0
  4870  0012EA  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4871  0012EC  0E00               	movlw	0
  4872  0012EE  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4873  0012F0                     l10778:
  4874                           
  4875                           ; BSR set to: 0
  4876  0012F0  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  4877  0012F2  D008               	goto	l2374
  4878  0012F4                     l10780:
  4879                           
  4880                           ; BSR set to: 0
  4881  0012F4  0E00               	movlw	0
  4882  0012F6  6F84               	movwf	___flmul@a& (0+255),b
  4883  0012F8  0E00               	movlw	0
  4884  0012FA  6F85               	movwf	(___flmul@a+1)& (0+255),b
  4885  0012FC  0E00               	movlw	0
  4886  0012FE  6F86               	movwf	(___flmul@a+2)& (0+255),b
  4887  001300  0E00               	movlw	0
  4888  001302  6F87               	movwf	(___flmul@a+3)& (0+255),b
  4889  001304                     l2374:
  4890                           
  4891                           ; BSR set to: 0
  4892  001304  518D               	movf	___flmul@aexp& (0+255),w,b
  4893  001306  B4D8               	btfsc	status,2,c
  4894  001308  D003               	goto	u10790
  4895                           
  4896                           ; BSR set to: 0
  4897  00130A  5192               	movf	___flmul@bexp& (0+255),w,b
  4898  00130C  A4D8               	btfss	status,2,c
  4899  00130E  D009               	goto	l10788
  4900  001310                     u10790:
  4901                           
  4902                           ; BSR set to: 0
  4903  001310  0E00               	movlw	0
  4904  001312  6F80               	movwf	?___flmul& (0+255),b
  4905  001314  0E00               	movlw	0
  4906  001316  6F81               	movwf	(?___flmul+1)& (0+255),b
  4907  001318  0E00               	movlw	0
  4908  00131A  6F82               	movwf	(?___flmul+2)& (0+255),b
  4909  00131C  0E00               	movlw	0
  4910  00131E  6F83               	movwf	(?___flmul+3)& (0+255),b
  4911  001320  0012               	return	
  4912  001322                     l10788:
  4913                           
  4914                           ; BSR set to: 0
  4915  001322  5186               	movf	(___flmul@a+2)& (0+255),w,b
  4916  001324  0380               	mulwf	___flmul@b& (0+255),b
  4917  001326  CFF3 F097          	movff	prodl,___flmul@temp
  4918  00132A  CFF4 F098          	movff	prodh,___flmul@temp+1
  4919                           
  4920                           ; BSR set to: 0
  4921  00132E  5197               	movf	___flmul@temp& (0+255),w,b
  4922  001330  6F8E               	movwf	___flmul@grs& (0+255),b
  4923  001332  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  4924  001334  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  4925  001336  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  4926                           
  4927                           ; BSR set to: 0
  4928  001338  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  4929  00133A  6F93               	movwf	___flmul@prod& (0+255),b
  4930  00133C  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  4931  00133E  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  4932  001340  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  4933  001342  5185               	movf	(___flmul@a+1)& (0+255),w,b
  4934  001344  0381               	mulwf	(___flmul@b+1)& (0+255),b
  4935  001346  CFF3 F097          	movff	prodl,___flmul@temp
  4936  00134A  CFF4 F098          	movff	prodh,___flmul@temp+1
  4937                           
  4938                           ; BSR set to: 0
  4939  00134E  5197               	movf	___flmul@temp& (0+255),w,b
  4940  001350  278E               	addwf	___flmul@grs& (0+255),f,b
  4941  001352  0E00               	movlw	0
  4942  001354  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4943  001356  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4944  001358  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4945                           
  4946                           ; BSR set to: 0
  4947  00135A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  4948  00135C  2793               	addwf	___flmul@prod& (0+255),f,b
  4949  00135E  0E00               	movlw	0
  4950  001360  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4951  001362  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4952  001364  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4953  001366  5184               	movf	___flmul@a& (0+255),w,b
  4954  001368  0382               	mulwf	(___flmul@b+2)& (0+255),b
  4955  00136A  CFF3 F097          	movff	prodl,___flmul@temp
  4956  00136E  CFF4 F098          	movff	prodh,___flmul@temp+1
  4957                           
  4958                           ; BSR set to: 0
  4959  001372  5197               	movf	___flmul@temp& (0+255),w,b
  4960  001374  278E               	addwf	___flmul@grs& (0+255),f,b
  4961  001376  0E00               	movlw	0
  4962  001378  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4963  00137A  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4964  00137C  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4965                           
  4966                           ; BSR set to: 0
  4967  00137E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  4968  001380  2793               	addwf	___flmul@prod& (0+255),f,b
  4969  001382  0E00               	movlw	0
  4970  001384  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  4971  001386  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  4972  001388  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  4973                           
  4974                           ; BSR set to: 0
  4975  00138A  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  4976  00138E  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  4977  001392  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  4978  001396  6B8E               	clrf	___flmul@grs& (0+255),b
  4979                           
  4980                           ; BSR set to: 0
  4981  001398  5184               	movf	___flmul@a& (0+255),w,b
  4982  00139A  0381               	mulwf	(___flmul@b+1)& (0+255),b
  4983  00139C  CFF3 F097          	movff	prodl,___flmul@temp
  4984  0013A0  CFF4 F098          	movff	prodh,___flmul@temp+1
  4985                           
  4986                           ; BSR set to: 0
  4987  0013A4  5197               	movf	___flmul@temp& (0+255),w,b
  4988  0013A6  278E               	addwf	___flmul@grs& (0+255),f,b
  4989  0013A8  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  4990  0013AA  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  4991  0013AC  0E00               	movlw	0
  4992  0013AE  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  4993  0013B0  0E00               	movlw	0
  4994  0013B2  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  4995                           
  4996                           ; BSR set to: 0
  4997  0013B4  5185               	movf	(___flmul@a+1)& (0+255),w,b
  4998  0013B6  0380               	mulwf	___flmul@b& (0+255),b
  4999  0013B8  CFF3 F097          	movff	prodl,___flmul@temp
  5000  0013BC  CFF4 F098          	movff	prodh,___flmul@temp+1
  5001                           
  5002                           ; BSR set to: 0
  5003  0013C0  5197               	movf	___flmul@temp& (0+255),w,b
  5004  0013C2  278E               	addwf	___flmul@grs& (0+255),f,b
  5005  0013C4  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5006  0013C6  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5007  0013C8  0E00               	movlw	0
  5008  0013CA  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5009  0013CC  0E00               	movlw	0
  5010  0013CE  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5011                           
  5012                           ; BSR set to: 0
  5013  0013D0  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  5014  0013D4  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  5015  0013D8  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  5016  0013DC  6B8E               	clrf	___flmul@grs& (0+255),b
  5017  0013DE  5184               	movf	___flmul@a& (0+255),w,b
  5018  0013E0  0380               	mulwf	___flmul@b& (0+255),b
  5019  0013E2  CFF3 F097          	movff	prodl,___flmul@temp
  5020  0013E6  CFF4 F098          	movff	prodh,___flmul@temp+1
  5021                           
  5022                           ; BSR set to: 0
  5023  0013EA  5197               	movf	___flmul@temp& (0+255),w,b
  5024  0013EC  278E               	addwf	___flmul@grs& (0+255),f,b
  5025  0013EE  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5026  0013F0  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  5027  0013F2  0E00               	movlw	0
  5028  0013F4  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  5029  0013F6  0E00               	movlw	0
  5030  0013F8  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  5031                           
  5032                           ; BSR set to: 0
  5033  0013FA  5186               	movf	(___flmul@a+2)& (0+255),w,b
  5034  0013FC  0381               	mulwf	(___flmul@b+1)& (0+255),b
  5035  0013FE  CFF3 F097          	movff	prodl,___flmul@temp
  5036  001402  CFF4 F098          	movff	prodh,___flmul@temp+1
  5037  001406  5197               	movf	___flmul@temp& (0+255),w,b
  5038  001408  2793               	addwf	___flmul@prod& (0+255),f,b
  5039  00140A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5040  00140C  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5041  00140E  0E00               	movlw	0
  5042  001410  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5043  001412  0E00               	movlw	0
  5044  001414  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5045                           
  5046                           ; BSR set to: 0
  5047  001416  5185               	movf	(___flmul@a+1)& (0+255),w,b
  5048  001418  0382               	mulwf	(___flmul@b+2)& (0+255),b
  5049  00141A  CFF3 F097          	movff	prodl,___flmul@temp
  5050  00141E  CFF4 F098          	movff	prodh,___flmul@temp+1
  5051                           
  5052                           ; BSR set to: 0
  5053  001422  5197               	movf	___flmul@temp& (0+255),w,b
  5054  001424  2793               	addwf	___flmul@prod& (0+255),f,b
  5055  001426  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5056  001428  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5057  00142A  0E00               	movlw	0
  5058  00142C  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5059  00142E  0E00               	movlw	0
  5060  001430  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5061  001432  5186               	movf	(___flmul@a+2)& (0+255),w,b
  5062  001434  0382               	mulwf	(___flmul@b+2)& (0+255),b
  5063  001436  CFF3 F097          	movff	prodl,___flmul@temp
  5064  00143A  CFF4 F098          	movff	prodh,___flmul@temp+1
  5065                           
  5066                           ; BSR set to: 0
  5067  00143E  5197               	movf	___flmul@temp& (0+255),w,b
  5068  001440  6F88               	movwf	??___flmul& (0+255),b
  5069  001442  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5070  001444  6F89               	movwf	(??___flmul+1)& (0+255),b
  5071  001446  6B8A               	clrf	(??___flmul+2)& (0+255),b
  5072  001448  6B8B               	clrf	(??___flmul+3)& (0+255),b
  5073  00144A  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  5074  00144E  C089  F08A         	movff	??___flmul+1,??___flmul+2
  5075  001452  C088  F089         	movff	??___flmul,??___flmul+1
  5076  001456  6B88               	clrf	??___flmul& (0+255),b
  5077  001458  5188               	movf	??___flmul& (0+255),w,b
  5078  00145A  2793               	addwf	___flmul@prod& (0+255),f,b
  5079  00145C  5189               	movf	(??___flmul+1)& (0+255),w,b
  5080  00145E  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5081  001460  518A               	movf	(??___flmul+2)& (0+255),w,b
  5082  001462  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5083  001464  518B               	movf	(??___flmul+3)& (0+255),w,b
  5084  001466  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5085                           
  5086                           ; BSR set to: 0
  5087  001468  C08E  F088         	movff	___flmul@grs,??___flmul
  5088  00146C  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  5089  001470  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  5090  001474  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  5091  001478  0E19               	movlw	25
  5092  00147A  D005               	goto	u10800
  5093  00147C                     u10805:
  5094  00147C  90D8               	bcf	status,0,c
  5095  00147E  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  5096  001480  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  5097  001482  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  5098  001484  3388               	rrcf	??___flmul& (0+255),f,b
  5099  001486                     u10800:
  5100  001486  2EE8               	decfsz	wreg,f,c
  5101  001488  D7F9               	goto	u10805
  5102  00148A  5188               	movf	??___flmul& (0+255),w,b
  5103  00148C  2793               	addwf	___flmul@prod& (0+255),f,b
  5104  00148E  5189               	movf	(??___flmul+1)& (0+255),w,b
  5105  001490  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5106  001492  518A               	movf	(??___flmul+2)& (0+255),w,b
  5107  001494  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5108  001496  518B               	movf	(??___flmul+3)& (0+255),w,b
  5109  001498  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5110                           
  5111                           ; BSR set to: 0
  5112  00149A  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  5113  00149E  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  5114  0014A2  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  5115  0014A6  6B8E               	clrf	___flmul@grs& (0+255),b
  5116                           
  5117                           ; BSR set to: 0
  5118  0014A8  518D               	movf	___flmul@aexp& (0+255),w,b
  5119  0014AA  C092  F088         	movff	___flmul@bexp,??___flmul
  5120  0014AE  6B89               	clrf	(??___flmul+1)& (0+255),b
  5121  0014B0  2788               	addwf	??___flmul& (0+255),f,b
  5122  0014B2  0E00               	movlw	0
  5123  0014B4  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  5124  0014B6  0E82               	movlw	130
  5125  0014B8  2588               	addwf	??___flmul& (0+255),w,b
  5126  0014BA  6F97               	movwf	___flmul@temp& (0+255),b
  5127  0014BC  0EFF               	movlw	255
  5128  0014BE  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  5129  0014C0  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  5130  0014C2  D00F               	goto	l10836
  5131  0014C4                     l10830:
  5132                           
  5133                           ; BSR set to: 0
  5134  0014C4  90D8               	bcf	status,0,c
  5135  0014C6  3793               	rlcf	___flmul@prod& (0+255),f,b
  5136  0014C8  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  5137  0014CA  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  5138  0014CC  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  5139                           
  5140                           ; BSR set to: 0
  5141  0014CE  BF91               	btfsc	(___flmul@grs+3)& (0+255),7,b
  5142                           
  5143                           ; BSR set to: 0
  5144  0014D0  8193               	bsf	___flmul@prod& (0+255),0,b
  5145                           
  5146                           ; BSR set to: 0
  5147  0014D2  90D8               	bcf	status,0,c
  5148  0014D4  378E               	rlcf	___flmul@grs& (0+255),f,b
  5149  0014D6  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  5150  0014D8  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  5151  0014DA  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  5152  0014DC  0797               	decf	___flmul@temp& (0+255),f,b
  5153  0014DE  A0D8               	btfss	status,0,c
  5154  0014E0  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  5155  0014E2                     l10836:
  5156                           
  5157                           ; BSR set to: 0
  5158  0014E2  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  5159  0014E4  D7EF               	goto	l10830
  5160                           
  5161                           ; BSR set to: 0
  5162  0014E6  0E00               	movlw	0
  5163  0014E8  6F8D               	movwf	___flmul@aexp& (0+255),b
  5164                           
  5165                           ; BSR set to: 0
  5166  0014EA  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  5167  0014EC  D017               	goto	l2383
  5168                           
  5169                           ; BSR set to: 0
  5170  0014EE  0EFF               	movlw	255
  5171  0014F0  158E               	andwf	___flmul@grs& (0+255),w,b
  5172  0014F2  6F88               	movwf	??___flmul& (0+255),b
  5173  0014F4  0EFF               	movlw	255
  5174  0014F6  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  5175  0014F8  6F89               	movwf	(??___flmul+1)& (0+255),b
  5176  0014FA  0EFF               	movlw	255
  5177  0014FC  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  5178  0014FE  6F8A               	movwf	(??___flmul+2)& (0+255),b
  5179  001500  0E7F               	movlw	127
  5180  001502  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  5181  001504  6F8B               	movwf	(??___flmul+3)& (0+255),b
  5182  001506  5188               	movf	??___flmul& (0+255),w,b
  5183  001508  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  5184  00150A  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  5185  00150C  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  5186  00150E  B4D8               	btfsc	status,2,c
  5187  001510  D003               	goto	l2384
  5188  001512                     u10840:
  5189                           
  5190                           ; BSR set to: 0
  5191  001512  0E01               	movlw	1
  5192  001514  6F8D               	movwf	___flmul@aexp& (0+255),b
  5193  001516  D002               	goto	l2383
  5194  001518                     l2384:
  5195                           
  5196                           ; BSR set to: 0
  5197  001518  B193               	btfsc	___flmul@prod& (0+255),0,b
  5198  00151A  D7FB               	goto	u10840
  5199  00151C                     l2383:
  5200                           
  5201                           ; BSR set to: 0
  5202  00151C  518D               	movf	___flmul@aexp& (0+255),w,b
  5203  00151E  B4D8               	btfsc	status,2,c
  5204  001520  D01F               	goto	l10856
  5205                           
  5206                           ; BSR set to: 0
  5207  001522  0E01               	movlw	1
  5208  001524  2793               	addwf	___flmul@prod& (0+255),f,b
  5209  001526  0E00               	movlw	0
  5210  001528  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  5211  00152A  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  5212  00152C  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  5213                           
  5214                           ; BSR set to: 0
  5215  00152E  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  5216  001530  D017               	goto	l10856
  5217                           
  5218                           ; BSR set to: 0
  5219  001532  C093  F088         	movff	___flmul@prod,??___flmul
  5220  001536  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  5221  00153A  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  5222  00153E  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  5223  001542  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  5224  001544  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  5225  001546  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  5226  001548  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  5227  00154A  3388               	rrcf	??___flmul& (0+255),f,b
  5228  00154C  C088  F093         	movff	??___flmul,___flmul@prod
  5229  001550  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  5230  001554  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  5231  001558  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  5232                           
  5233                           ; BSR set to: 0
  5234  00155C  4B97               	infsnz	___flmul@temp& (0+255),f,b
  5235  00155E  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  5236  001560                     l10856:
  5237                           
  5238                           ; BSR set to: 0
  5239  001560  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5240  001562  D00D               	goto	l10860
  5241  001564  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5242  001566  E103               	bnz	u10880
  5243  001568  2997               	incf	___flmul@temp& (0+255),w,b
  5244  00156A  A0D8               	btfss	status,0,c
  5245  00156C  D008               	goto	l10860
  5246  00156E                     u10880:
  5247                           
  5248                           ; BSR set to: 0
  5249  00156E  0E00               	movlw	0
  5250  001570  6F93               	movwf	___flmul@prod& (0+255),b
  5251  001572  0E00               	movlw	0
  5252  001574  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  5253  001576  0E80               	movlw	128
  5254  001578  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  5255  00157A  0E7F               	movlw	127
  5256  00157C  D020               	goto	L2
  5257  00157E                     l10860:
  5258                           
  5259                           ; BSR set to: 0
  5260  00157E  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  5261  001580  D005               	goto	u10890
  5262  001582  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  5263  001584  E10E               	bnz	l2391
  5264  001586  0597               	decf	___flmul@temp& (0+255),w,b
  5265  001588  B0D8               	btfsc	status,0,c
  5266  00158A  D00B               	goto	l2391
  5267  00158C                     u10890:
  5268                           
  5269                           ; BSR set to: 0
  5270  00158C  0E00               	movlw	0
  5271  00158E  6F93               	movwf	___flmul@prod& (0+255),b
  5272  001590  0E00               	movlw	0
  5273  001592  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  5274  001594  0E00               	movlw	0
  5275  001596  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  5276  001598  0E00               	movlw	0
  5277  00159A  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  5278  00159C  0E00               	movlw	0
  5279  00159E  6F8C               	movwf	___flmul@sign& (0+255),b
  5280  0015A0  D00F               	goto	l10872
  5281  0015A2                     l2391:
  5282                           
  5283                           ; BSR set to: 0
  5284  0015A2  C097  F092         	movff	___flmul@temp,___flmul@bexp
  5285                           
  5286                           ; BSR set to: 0
  5287  0015A6  0EFF               	movlw	255
  5288  0015A8  1793               	andwf	___flmul@prod& (0+255),f,b
  5289  0015AA  0EFF               	movlw	255
  5290  0015AC  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  5291  0015AE  0E7F               	movlw	127
  5292  0015B0  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  5293  0015B2  0E00               	movlw	0
  5294  0015B4  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  5295                           
  5296                           ; BSR set to: 0
  5297  0015B6  B192               	btfsc	___flmul@bexp& (0+255),0,b
  5298                           
  5299                           ; BSR set to: 0
  5300  0015B8  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  5301                           
  5302                           ; BSR set to: 0
  5303  0015BA  90D8               	bcf	status,0,c
  5304  0015BC  3192               	rrcf	___flmul@bexp& (0+255),w,b
  5305  0015BE                     L2:
  5306  0015BE  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  5307  0015C0                     l10872:
  5308                           
  5309                           ; BSR set to: 0
  5310  0015C0  518C               	movf	___flmul@sign& (0+255),w,b
  5311  0015C2  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  5312                           
  5313                           ; BSR set to: 0
  5314  0015C4  C093  F080         	movff	___flmul@prod,?___flmul
  5315  0015C8  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  5316  0015CC  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  5317  0015D0  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  5318                           
  5319                           ; BSR set to: 0
  5320  0015D4  0012               	return		;funcret
  5321  0015D6                     __end_of___flmul:
  5322                           	opt callstack 0
  5323                           
  5324 ;; *************** function _read_encoder *****************
  5325 ;; Defined at:
  5326 ;;		line 13 in file "encoder_motor.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;		None
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;		None
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0, cstack
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;Total ram usage:        0 bytes
  5345 ;; Hardware stack levels used:    1
  5346 ;; Hardware stack levels required when called:    9
  5347 ;; This function calls:
  5348 ;;		___fladd
  5349 ;;		___fldiv
  5350 ;; This function is called by:
  5351 ;;		_main
  5352 ;;		_sensed_function_3
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text13
  5357  0042EC                     __ptext13:
  5358                           	opt callstack 0
  5359  0042EC                     _read_encoder:
  5360                           	opt callstack 20
  5361                           
  5362                           ;encoder_motor.c: 14: rotary_accum+=rotary_counter;
  5363                           
  5364                           ; BSR set to: 0
  5365                           ;incstack = 0
  5366  0042EC  C03C  F080         	movff	_rotary_accum,___fladd@b
  5367  0042F0  C03D  F081         	movff	_rotary_accum+1,___fladd@b+1
  5368  0042F4  C03E  F082         	movff	_rotary_accum+2,___fladd@b+2
  5369  0042F8  C03F  F083         	movff	_rotary_accum+3,___fladd@b+3
  5370  0042FC  C040  F084         	movff	_rotary_counter,___fladd@a
  5371  004300  C041  F085         	movff	_rotary_counter+1,___fladd@a+1
  5372  004304  C042  F086         	movff	_rotary_counter+2,___fladd@a+2
  5373  004308  C043  F087         	movff	_rotary_counter+3,___fladd@a+3
  5374  00430C  ECEB  F00A         	call	___fladd	;wreg free
  5375  004310  C080  F03C         	movff	?___fladd,_rotary_accum
  5376  004314  C081  F03D         	movff	?___fladd+1,_rotary_accum+1
  5377  004318  C082  F03E         	movff	?___fladd+2,_rotary_accum+2
  5378  00431C  C083  F03F         	movff	?___fladd+3,_rotary_accum+3
  5379                           
  5380                           ;encoder_motor.c: 15: accum_straight_distance= rotary_accum / 334;
  5381  004320  C03C  F080         	movff	_rotary_accum,___fldiv@b
  5382  004324  C03D  F081         	movff	_rotary_accum+1,___fldiv@b+1
  5383  004328  C03E  F082         	movff	_rotary_accum+2,___fldiv@b+2
  5384  00432C  C03F  F083         	movff	_rotary_accum+3,___fldiv@b+3
  5385  004330  0E00               	movlw	0
  5386  004332  0100               	movlb	0	; () banked
  5387  004334  6F84               	movwf	___fldiv@a& (0+255),b
  5388  004336  0E00               	movlw	0
  5389  004338  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5390  00433A  0EA7               	movlw	167
  5391  00433C  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5392  00433E  0E43               	movlw	67
  5393  004340  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5394  004342  ECF8  F00D         	call	___fldiv	;wreg free
  5395  004346  C080  F0C4         	movff	?___fldiv,_accum_straight_distance
  5396  00434A  C081  F0C5         	movff	?___fldiv+1,_accum_straight_distance+1
  5397  00434E  C082  F0C6         	movff	?___fldiv+2,_accum_straight_distance+2
  5398  004352  C083  F0C7         	movff	?___fldiv+3,_accum_straight_distance+3
  5399                           
  5400                           ;encoder_motor.c: 16: turns_counter = 0;
  5401  004356  0E00               	movlw	0
  5402  004358  0100               	movlb	0	; () banked
  5403  00435A  6FC8               	movwf	_turns_counter& (0+255),b
  5404  00435C  0E00               	movlw	0
  5405  00435E  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  5406  004360  0E00               	movlw	0
  5407  004362  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  5408  004364  0E00               	movlw	0
  5409  004366  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;encoder_motor.c: 17: rotary_counter = 0;
  5413  004368  0E00               	movlw	0
  5414  00436A  6E40               	movwf	_rotary_counter,c
  5415  00436C  0E00               	movlw	0
  5416  00436E  6E41               	movwf	_rotary_counter+1,c
  5417  004370  0E00               	movlw	0
  5418  004372  6E42               	movwf	_rotary_counter+2,c
  5419  004374  0E00               	movlw	0
  5420  004376  6E43               	movwf	_rotary_counter+3,c
  5421                           
  5422                           ; BSR set to: 0
  5423  004378  0012               	return		;funcret
  5424  00437A                     __end_of_read_encoder:
  5425                           	opt callstack 0
  5426                           
  5427 ;; *************** function ___fldiv *****************
  5428 ;; Defined at:
  5429 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  5430 ;; Parameters:    Size  Location     Type
  5431 ;;  b               4    0[BANK0 ] void 
  5432 ;;  a               4    4[BANK0 ] void 
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  grs             4   19[BANK0 ] unsigned long 
  5435 ;;  rem             4   12[BANK0 ] unsigned long 
  5436 ;;  new_exp         2   17[BANK0 ] int 
  5437 ;;  aexp            1   24[BANK0 ] unsigned char 
  5438 ;;  bexp            1   23[BANK0 ] unsigned char 
  5439 ;;  sign            1   16[BANK0 ] unsigned char 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  4    0[BANK0 ] unsigned char 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5449 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;Total ram usage:       25 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    8
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_read_encoder
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text14
  5464  001BF0                     __ptext14:
  5465                           	opt callstack 0
  5466  001BF0                     ___fldiv:
  5467                           	opt callstack 20
  5468                           
  5469                           ; BSR set to: 0
  5470                           ;incstack = 0
  5471  001BF0  0100               	movlb	0	; () banked
  5472  001BF2  5183               	movf	(___fldiv@b+3)& (0+255),w,b
  5473  001BF4  0B80               	andlw	128
  5474  001BF6  6F90               	movwf	___fldiv@sign& (0+255),b
  5475  001BF8  5183               	movf	(___fldiv@b+3)& (0+255),w,b
  5476  001BFA  2583               	addwf	(___fldiv@b+3)& (0+255),w,b
  5477  001BFC  6F97               	movwf	___fldiv@bexp& (0+255),b
  5478                           
  5479                           ; BSR set to: 0
  5480  001BFE  BF82               	btfsc	(___fldiv@b+2)& (0+255),7,b
  5481                           
  5482                           ; BSR set to: 0
  5483  001C00  8197               	bsf	___fldiv@bexp& (0+255),0,b
  5484                           
  5485                           ; BSR set to: 0
  5486  001C02  5197               	movf	___fldiv@bexp& (0+255),w,b
  5487  001C04  B4D8               	btfsc	status,2,c
  5488  001C06  D00D               	goto	l10626
  5489                           
  5490                           ; BSR set to: 0
  5491  001C08  2997               	incf	___fldiv@bexp& (0+255),w,b
  5492  001C0A  A4D8               	btfss	status,2,c
  5493  001C0C  D008               	goto	l10622
  5494                           
  5495                           ; BSR set to: 0
  5496  001C0E  0E00               	movlw	0
  5497  001C10  6F80               	movwf	___fldiv@b& (0+255),b
  5498  001C12  0E00               	movlw	0
  5499  001C14  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  5500  001C16  0E00               	movlw	0
  5501  001C18  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  5502  001C1A  0E00               	movlw	0
  5503  001C1C  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5504  001C1E                     l10622:
  5505                           
  5506                           ; BSR set to: 0
  5507  001C1E  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
  5508  001C20  D006               	goto	L3
  5509  001C22                     l10626:
  5510                           
  5511                           ; BSR set to: 0
  5512  001C22  0E00               	movlw	0
  5513  001C24  6F80               	movwf	___fldiv@b& (0+255),b
  5514  001C26  0E00               	movlw	0
  5515  001C28  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  5516  001C2A  0E00               	movlw	0
  5517  001C2C  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  5518  001C2E                     L3:
  5519  001C2E  0E00               	movlw	0
  5520  001C30  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5521                           
  5522                           ; BSR set to: 0
  5523  001C32  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  5524  001C34  0B80               	andlw	128
  5525  001C36  1B90               	xorwf	___fldiv@sign& (0+255),f,b
  5526                           
  5527                           ; BSR set to: 0
  5528  001C38  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  5529  001C3A  2587               	addwf	(___fldiv@a+3)& (0+255),w,b
  5530  001C3C  6F98               	movwf	___fldiv@aexp& (0+255),b
  5531                           
  5532                           ; BSR set to: 0
  5533  001C3E  BF86               	btfsc	(___fldiv@a+2)& (0+255),7,b
  5534                           
  5535                           ; BSR set to: 0
  5536  001C40  8198               	bsf	___fldiv@aexp& (0+255),0,b
  5537                           
  5538                           ; BSR set to: 0
  5539  001C42  5198               	movf	___fldiv@aexp& (0+255),w,b
  5540  001C44  B4D8               	btfsc	status,2,c
  5541  001C46  D00D               	goto	l10646
  5542                           
  5543                           ; BSR set to: 0
  5544  001C48  2998               	incf	___fldiv@aexp& (0+255),w,b
  5545  001C4A  A4D8               	btfss	status,2,c
  5546  001C4C  D008               	goto	l10642
  5547                           
  5548                           ; BSR set to: 0
  5549  001C4E  0E00               	movlw	0
  5550  001C50  6F84               	movwf	___fldiv@a& (0+255),b
  5551  001C52  0E00               	movlw	0
  5552  001C54  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5553  001C56  0E00               	movlw	0
  5554  001C58  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5555  001C5A  0E00               	movlw	0
  5556  001C5C  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5557  001C5E                     l10642:
  5558                           
  5559                           ; BSR set to: 0
  5560  001C5E  8F86               	bsf	(___fldiv@a+2)& (0+255),7,b
  5561  001C60  D006               	goto	L4
  5562  001C62                     l10646:
  5563                           
  5564                           ; BSR set to: 0
  5565  001C62  0E00               	movlw	0
  5566  001C64  6F84               	movwf	___fldiv@a& (0+255),b
  5567  001C66  0E00               	movlw	0
  5568  001C68  6F85               	movwf	(___fldiv@a+1)& (0+255),b
  5569  001C6A  0E00               	movlw	0
  5570  001C6C  6F86               	movwf	(___fldiv@a+2)& (0+255),b
  5571  001C6E                     L4:
  5572  001C6E  0E00               	movlw	0
  5573  001C70  6F87               	movwf	(___fldiv@a+3)& (0+255),b
  5574                           
  5575                           ; BSR set to: 0
  5576  001C72  5184               	movf	___fldiv@a& (0+255),w,b
  5577  001C74  1185               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5578  001C76  1186               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5579  001C78  1187               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5580  001C7A  A4D8               	btfss	status,2,c
  5581  001C7C  D017               	goto	l10660
  5582                           
  5583                           ; BSR set to: 0
  5584  001C7E  0E00               	movlw	0
  5585  001C80  6F80               	movwf	___fldiv@b& (0+255),b
  5586  001C82  0E00               	movlw	0
  5587  001C84  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  5588  001C86  0E00               	movlw	0
  5589  001C88  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  5590  001C8A  0E00               	movlw	0
  5591  001C8C  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5592                           
  5593                           ; BSR set to: 0
  5594  001C8E  0E80               	movlw	128
  5595  001C90  1382               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5596  001C92  0E7F               	movlw	127
  5597  001C94  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5598  001C96                     l10654:
  5599                           
  5600                           ; BSR set to: 0
  5601  001C96  5190               	movf	___fldiv@sign& (0+255),w,b
  5602  001C98  1383               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5603                           
  5604                           ; BSR set to: 0
  5605  001C9A  C080  F080         	movff	___fldiv@b,?___fldiv
  5606  001C9E  C081  F081         	movff	___fldiv@b+1,?___fldiv+1
  5607  001CA2  C082  F082         	movff	___fldiv@b+2,?___fldiv+2
  5608  001CA6  C083  F083         	movff	___fldiv@b+3,?___fldiv+3
  5609  001CAA  0012               	return	
  5610  001CAC                     l10660:
  5611                           
  5612                           ; BSR set to: 0
  5613  001CAC  5197               	movf	___fldiv@bexp& (0+255),w,b
  5614  001CAE  A4D8               	btfss	status,2,c
  5615  001CB0  D009               	goto	l10668
  5616                           
  5617                           ; BSR set to: 0
  5618                           
  5619                           ; BSR set to: 0
  5620  001CB2  0E00               	movlw	0
  5621  001CB4  6F80               	movwf	?___fldiv& (0+255),b
  5622  001CB6  0E00               	movlw	0
  5623  001CB8  6F81               	movwf	(?___fldiv+1)& (0+255),b
  5624  001CBA  0E00               	movlw	0
  5625  001CBC  6F82               	movwf	(?___fldiv+2)& (0+255),b
  5626  001CBE  0E00               	movlw	0
  5627  001CC0  6F83               	movwf	(?___fldiv+3)& (0+255),b
  5628  001CC2  0012               	return	
  5629  001CC4                     l10668:
  5630                           
  5631                           ; BSR set to: 0
  5632  001CC4  5198               	movf	___fldiv@aexp& (0+255),w,b
  5633  001CC6  C097  F088         	movff	___fldiv@bexp,??___fldiv
  5634  001CCA  6B89               	clrf	(??___fldiv+1)& (0+255),b
  5635  001CCC  5F88               	subwf	??___fldiv& (0+255),f,b
  5636  001CCE  0E00               	movlw	0
  5637  001CD0  5B89               	subwfb	(??___fldiv+1)& (0+255),f,b
  5638  001CD2  0E7F               	movlw	127
  5639  001CD4  2588               	addwf	??___fldiv& (0+255),w,b
  5640  001CD6  6F91               	movwf	___fldiv@new_exp& (0+255),b
  5641  001CD8  0E00               	movlw	0
  5642  001CDA  2189               	addwfc	(??___fldiv+1)& (0+255),w,b
  5643  001CDC  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5644                           
  5645                           ; BSR set to: 0
  5646  001CDE  C080  F08C         	movff	___fldiv@b,___fldiv@rem
  5647  001CE2  C081  F08D         	movff	___fldiv@b+1,___fldiv@rem+1
  5648  001CE6  C082  F08E         	movff	___fldiv@b+2,___fldiv@rem+2
  5649  001CEA  C083  F08F         	movff	___fldiv@b+3,___fldiv@rem+3
  5650                           
  5651                           ; BSR set to: 0
  5652  001CEE  0E00               	movlw	0
  5653  001CF0  6F80               	movwf	___fldiv@b& (0+255),b
  5654  001CF2  0E00               	movlw	0
  5655  001CF4  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  5656  001CF6  0E00               	movlw	0
  5657  001CF8  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  5658  001CFA  0E00               	movlw	0
  5659  001CFC  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5660                           
  5661                           ; BSR set to: 0
  5662  001CFE  0E00               	movlw	0
  5663  001D00  6F93               	movwf	___fldiv@grs& (0+255),b
  5664  001D02  0E00               	movlw	0
  5665  001D04  6F94               	movwf	(___fldiv@grs+1)& (0+255),b
  5666  001D06  0E00               	movlw	0
  5667  001D08  6F95               	movwf	(___fldiv@grs+2)& (0+255),b
  5668  001D0A  0E00               	movlw	0
  5669  001D0C  6F96               	movwf	(___fldiv@grs+3)& (0+255),b
  5670                           
  5671                           ; BSR set to: 0
  5672  001D0E  0E00               	movlw	0
  5673  001D10  6F98               	movwf	___fldiv@aexp& (0+255),b
  5674  001D12  D028               	goto	l2344
  5675  001D14                     l10678:
  5676                           
  5677                           ; BSR set to: 0
  5678  001D14  5198               	movf	___fldiv@aexp& (0+255),w,b
  5679  001D16  B4D8               	btfsc	status,2,c
  5680  001D18  D011               	goto	l10686
  5681                           
  5682                           ; BSR set to: 0
  5683  001D1A  90D8               	bcf	status,0,c
  5684  001D1C  378C               	rlcf	___fldiv@rem& (0+255),f,b
  5685  001D1E  378D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5686  001D20  378E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5687  001D22  378F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5688  001D24  90D8               	bcf	status,0,c
  5689  001D26  3780               	rlcf	___fldiv@b& (0+255),f,b
  5690  001D28  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5691  001D2A  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5692  001D2C  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5693                           
  5694                           ; BSR set to: 0
  5695  001D2E  BF96               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  5696                           
  5697                           ; BSR set to: 0
  5698  001D30  8180               	bsf	___fldiv@b& (0+255),0,b
  5699                           
  5700                           ; BSR set to: 0
  5701  001D32  90D8               	bcf	status,0,c
  5702  001D34  3793               	rlcf	___fldiv@grs& (0+255),f,b
  5703  001D36  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5704  001D38  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5705  001D3A  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5706  001D3C                     l10686:
  5707                           
  5708                           ; BSR set to: 0
  5709  001D3C  5184               	movf	___fldiv@a& (0+255),w,b
  5710  001D3E  5D8C               	subwf	___fldiv@rem& (0+255),w,b
  5711  001D40  5185               	movf	(___fldiv@a+1)& (0+255),w,b
  5712  001D42  598D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5713  001D44  5186               	movf	(___fldiv@a+2)& (0+255),w,b
  5714  001D46  598E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5715  001D48  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  5716  001D4A  598F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5717  001D4C  A0D8               	btfss	status,0,c
  5718  001D4E  D009               	goto	l10692
  5719                           
  5720                           ; BSR set to: 0
  5721  001D50  8D96               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5722                           
  5723                           ; BSR set to: 0
  5724  001D52  5184               	movf	___fldiv@a& (0+255),w,b
  5725  001D54  5F8C               	subwf	___fldiv@rem& (0+255),f,b
  5726  001D56  5185               	movf	(___fldiv@a+1)& (0+255),w,b
  5727  001D58  5B8D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5728  001D5A  5186               	movf	(___fldiv@a+2)& (0+255),w,b
  5729  001D5C  5B8E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5730  001D5E  5187               	movf	(___fldiv@a+3)& (0+255),w,b
  5731  001D60  5B8F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5732  001D62                     l10692:
  5733                           
  5734                           ; BSR set to: 0
  5735  001D62  2B98               	incf	___fldiv@aexp& (0+255),f,b
  5736  001D64                     l2344:
  5737                           
  5738                           ; BSR set to: 0
  5739  001D64  0E19               	movlw	25
  5740  001D66  6598               	cpfsgt	___fldiv@aexp& (0+255),b
  5741  001D68  D7D5               	goto	l10678
  5742                           
  5743                           ; BSR set to: 0
  5744  001D6A  518C               	movf	___fldiv@rem& (0+255),w,b
  5745  001D6C  118D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5746  001D6E  118E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5747  001D70  118F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5748  001D72  B4D8               	btfsc	status,2,c
  5749  001D74  D011               	goto	l10704
  5750                           
  5751                           ; BSR set to: 0
  5752  001D76  8193               	bsf	___fldiv@grs& (0+255),0,b
  5753  001D78  D00F               	goto	l10704
  5754  001D7A                     l10698:
  5755                           
  5756                           ; BSR set to: 0
  5757  001D7A  90D8               	bcf	status,0,c
  5758  001D7C  3780               	rlcf	___fldiv@b& (0+255),f,b
  5759  001D7E  3781               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5760  001D80  3782               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5761  001D82  3783               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5762                           
  5763                           ; BSR set to: 0
  5764  001D84  BF96               	btfsc	(___fldiv@grs+3)& (0+255),7,b
  5765                           
  5766                           ; BSR set to: 0
  5767  001D86  8180               	bsf	___fldiv@b& (0+255),0,b
  5768                           
  5769                           ; BSR set to: 0
  5770  001D88  90D8               	bcf	status,0,c
  5771  001D8A  3793               	rlcf	___fldiv@grs& (0+255),f,b
  5772  001D8C  3794               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5773  001D8E  3795               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5774  001D90  3796               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5775  001D92  0791               	decf	___fldiv@new_exp& (0+255),f,b
  5776  001D94  A0D8               	btfss	status,0,c
  5777  001D96  0792               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5778  001D98                     l10704:
  5779                           
  5780                           ; BSR set to: 0
  5781  001D98  AF82               	btfss	(___fldiv@b+2)& (0+255),7,b
  5782  001D9A  D7EF               	goto	l10698
  5783                           
  5784                           ; BSR set to: 0
  5785  001D9C  0E00               	movlw	0
  5786  001D9E  6F98               	movwf	___fldiv@aexp& (0+255),b
  5787                           
  5788                           ; BSR set to: 0
  5789  001DA0  AF96               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5790  001DA2  D017               	goto	l2355
  5791                           
  5792                           ; BSR set to: 0
  5793  001DA4  0EFF               	movlw	255
  5794  001DA6  1593               	andwf	___fldiv@grs& (0+255),w,b
  5795  001DA8  6F88               	movwf	??___fldiv& (0+255),b
  5796  001DAA  0EFF               	movlw	255
  5797  001DAC  1594               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5798  001DAE  6F89               	movwf	(??___fldiv+1)& (0+255),b
  5799  001DB0  0EFF               	movlw	255
  5800  001DB2  1595               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5801  001DB4  6F8A               	movwf	(??___fldiv+2)& (0+255),b
  5802  001DB6  0E7F               	movlw	127
  5803  001DB8  1596               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5804  001DBA  6F8B               	movwf	(??___fldiv+3)& (0+255),b
  5805  001DBC  5188               	movf	??___fldiv& (0+255),w,b
  5806  001DBE  1189               	iorwf	(??___fldiv+1)& (0+255),w,b
  5807  001DC0  118A               	iorwf	(??___fldiv+2)& (0+255),w,b
  5808  001DC2  118B               	iorwf	(??___fldiv+3)& (0+255),w,b
  5809  001DC4  B4D8               	btfsc	status,2,c
  5810  001DC6  D003               	goto	l2356
  5811  001DC8                     u10650:
  5812                           
  5813                           ; BSR set to: 0
  5814  001DC8  0E01               	movlw	1
  5815  001DCA  6F98               	movwf	___fldiv@aexp& (0+255),b
  5816  001DCC  D002               	goto	l2355
  5817  001DCE                     l2356:
  5818                           
  5819                           ; BSR set to: 0
  5820  001DCE  B180               	btfsc	___fldiv@b& (0+255),0,b
  5821  001DD0  D7FB               	goto	u10650
  5822  001DD2                     l2355:
  5823                           
  5824                           ; BSR set to: 0
  5825  001DD2  5198               	movf	___fldiv@aexp& (0+255),w,b
  5826  001DD4  B4D8               	btfsc	status,2,c
  5827  001DD6  D01F               	goto	l10724
  5828                           
  5829                           ; BSR set to: 0
  5830  001DD8  0E01               	movlw	1
  5831  001DDA  2780               	addwf	___fldiv@b& (0+255),f,b
  5832  001DDC  0E00               	movlw	0
  5833  001DDE  2381               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5834  001DE0  2382               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5835  001DE2  2383               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5836                           
  5837                           ; BSR set to: 0
  5838  001DE4  A183               	btfss	(___fldiv@b+3)& (0+255),0,b
  5839  001DE6  D017               	goto	l10724
  5840                           
  5841                           ; BSR set to: 0
  5842  001DE8  C080  F088         	movff	___fldiv@b,??___fldiv
  5843  001DEC  C081  F089         	movff	___fldiv@b+1,??___fldiv+1
  5844  001DF0  C082  F08A         	movff	___fldiv@b+2,??___fldiv+2
  5845  001DF4  C083  F08B         	movff	___fldiv@b+3,??___fldiv+3
  5846  001DF8  358B               	rlcf	(??___fldiv+3)& (0+255),w,b
  5847  001DFA  338B               	rrcf	(??___fldiv+3)& (0+255),f,b
  5848  001DFC  338A               	rrcf	(??___fldiv+2)& (0+255),f,b
  5849  001DFE  3389               	rrcf	(??___fldiv+1)& (0+255),f,b
  5850  001E00  3388               	rrcf	??___fldiv& (0+255),f,b
  5851  001E02  C088  F080         	movff	??___fldiv,___fldiv@b
  5852  001E06  C089  F081         	movff	??___fldiv+1,___fldiv@b+1
  5853  001E0A  C08A  F082         	movff	??___fldiv+2,___fldiv@b+2
  5854  001E0E  C08B  F083         	movff	??___fldiv+3,___fldiv@b+3
  5855                           
  5856                           ; BSR set to: 0
  5857  001E12  4B91               	infsnz	___fldiv@new_exp& (0+255),f,b
  5858  001E14  2B92               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5859  001E16                     l10724:
  5860                           
  5861                           ; BSR set to: 0
  5862  001E16  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5863  001E18  D010               	goto	l10728
  5864  001E1A  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5865  001E1C  E103               	bnz	u10690
  5866  001E1E  2991               	incf	___fldiv@new_exp& (0+255),w,b
  5867  001E20  A0D8               	btfss	status,0,c
  5868  001E22  D00B               	goto	l10728
  5869  001E24                     u10690:
  5870                           
  5871                           ; BSR set to: 0
  5872  001E24  0E00               	movlw	0
  5873  001E26  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5874  001E28  6991               	setf	___fldiv@new_exp& (0+255),b
  5875  001E2A  0E00               	movlw	0
  5876  001E2C  6F80               	movwf	___fldiv@b& (0+255),b
  5877  001E2E  0E00               	movlw	0
  5878  001E30  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  5879  001E32  0E00               	movlw	0
  5880  001E34  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  5881  001E36  0E00               	movlw	0
  5882  001E38  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5883  001E3A                     l10728:
  5884                           
  5885                           ; BSR set to: 0
  5886  001E3A  BF92               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5887  001E3C  D005               	goto	u10700
  5888  001E3E  5192               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5889  001E40  E111               	bnz	l10732
  5890  001E42  0591               	decf	___fldiv@new_exp& (0+255),w,b
  5891  001E44  B0D8               	btfsc	status,0,c
  5892  001E46  D00E               	goto	l10732
  5893  001E48                     u10700:
  5894                           
  5895                           ; BSR set to: 0
  5896  001E48  0E00               	movlw	0
  5897  001E4A  6F92               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5898  001E4C  0E00               	movlw	0
  5899  001E4E  6F91               	movwf	___fldiv@new_exp& (0+255),b
  5900  001E50  0E00               	movlw	0
  5901  001E52  6F80               	movwf	___fldiv@b& (0+255),b
  5902  001E54  0E00               	movlw	0
  5903  001E56  6F81               	movwf	(___fldiv@b+1)& (0+255),b
  5904  001E58  0E00               	movlw	0
  5905  001E5A  6F82               	movwf	(___fldiv@b+2)& (0+255),b
  5906  001E5C  0E00               	movlw	0
  5907  001E5E  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5908  001E60  0E00               	movlw	0
  5909  001E62  6F90               	movwf	___fldiv@sign& (0+255),b
  5910  001E64                     l10732:
  5911                           
  5912                           ; BSR set to: 0
  5913  001E64  C091  F097         	movff	___fldiv@new_exp,___fldiv@bexp
  5914                           
  5915                           ; BSR set to: 0
  5916  001E68  A197               	btfss	___fldiv@bexp& (0+255),0,b
  5917  001E6A  D002               	goto	l10738
  5918                           
  5919                           ; BSR set to: 0
  5920  001E6C  8F82               	bsf	(___fldiv@b+2)& (0+255),7,b
  5921  001E6E  D001               	goto	l10740
  5922  001E70                     l10738:
  5923                           
  5924                           ; BSR set to: 0
  5925  001E70  9F82               	bcf	(___fldiv@b+2)& (0+255),7,b
  5926  001E72                     l10740:
  5927                           
  5928                           ; BSR set to: 0
  5929  001E72  90D8               	bcf	status,0,c
  5930  001E74  3197               	rrcf	___fldiv@bexp& (0+255),w,b
  5931  001E76  6F83               	movwf	(___fldiv@b+3)& (0+255),b
  5932  001E78  D70E               	goto	l10654
  5933  001E7A                     __end_of___fldiv:
  5934                           	opt callstack 0
  5935                           
  5936 ;; *************** function _moving *****************
  5937 ;; Defined at:
  5938 ;;		line 20 in file "encoder_motor.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;		None
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  1    wreg      void 
  5945 ;; Registers used:
  5946 ;;		wreg, cstack
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;Total ram usage:        0 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    9
  5959 ;; This function calls:
  5960 ;;		_straight
  5961 ;;		_turn_left
  5962 ;;		_turn_right
  5963 ;; This function is called by:
  5964 ;;		_main
  5965 ;;		_sensed_function_3
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text15
  5970  0053FC                     __ptext15:
  5971                           	opt callstack 0
  5972  0053FC                     _moving:
  5973                           	opt callstack 20
  5974                           
  5975                           ;encoder_motor.c: 21: if ((PORTEbits.RE0 && PORTEbits.RE1) ==1){
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;incstack = 0
  5979  0053FC  B084               	btfsc	3972,0,c	;volatile
  5980  0053FE  A284               	btfss	3972,1,c	;volatile
  5981  005400  D002               	goto	l10978
  5982                           
  5983                           ;encoder_motor.c: 22: straight();
  5984  005402  EC6A  F027         	call	_straight	;wreg free
  5985  005406                     l10978:
  5986                           
  5987                           ;encoder_motor.c: 23: };encoder_motor.c: 24: if(PORTEbits.RE1 ==0){
  5988  005406  B284               	btfsc	3972,1,c	;volatile
  5989  005408  D003               	goto	l1014
  5990                           
  5991                           ;encoder_motor.c: 25: turn_left();
  5992  00540A  EC1A  F027         	call	_turn_left	;wreg free
  5993                           
  5994                           ;encoder_motor.c: 26: }
  5995  00540E  0012               	return	
  5996  005410                     l1014:
  5997                           
  5998                           ;encoder_motor.c: 27: else if (PORTEbits.RE0 ==0){
  5999  005410  B084               	btfsc	3972,0,c	;volatile
  6000  005412  0012               	return	
  6001                           
  6002                           ;encoder_motor.c: 28: turn_right();
  6003  005414  ECF2  F026         	call	_turn_right	;wreg free
  6004  005418  0012               	return		;funcret
  6005  00541A                     __end_of_moving:
  6006                           	opt callstack 0
  6007                           
  6008 ;; *************** function _turn_right *****************
  6009 ;; Defined at:
  6010 ;;		line 67 in file "encoder_motor.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;Total ram usage:        1 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    8
  6031 ;; This function calls:
  6032 ;;		Nothing
  6033 ;; This function is called by:
  6034 ;;		_moving
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text16
  6039  004DE4                     __ptext16:
  6040                           	opt callstack 0
  6041  004DE4                     _turn_right:
  6042                           	opt callstack 20
  6043                           
  6044                           ;encoder_motor.c: 68: LATCbits.LATC5 = 0;
  6045                           
  6046                           ;incstack = 0
  6047  004DE4  9A8B               	bcf	3979,5,c	;volatile
  6048                           
  6049                           ;encoder_motor.c: 69: LATCbits.LATC1 = 0;
  6050  004DE6  928B               	bcf	3979,1,c	;volatile
  6051                           
  6052                           ;encoder_motor.c: 70: LATCbits.LATC7 = 0;
  6053  004DE8  9E8B               	bcf	3979,7,c	;volatile
  6054                           
  6055                           ;encoder_motor.c: 72: LATCbits.LATC2 = 1;
  6056  004DEA  848B               	bsf	3979,2,c	;volatile
  6057                           
  6058                           ;encoder_motor.c: 73: LATCbits.LATC6 = 1;
  6059  004DEC  8C8B               	bsf	3979,6,c	;volatile
  6060                           
  6061                           ;encoder_motor.c: 74: LATCbits.LATC0 = 1;
  6062  004DEE  808B               	bsf	3979,0,c	;volatile
  6063                           
  6064                           ;encoder_motor.c: 75: _delay((unsigned long)((5)*(10000000/4000.0)));
  6065  004DF0  0E11               	movlw	17
  6066  004DF2  0100               	movlb	0	; () banked
  6067  004DF4  6F80               	movwf	??_turn_right& (0+255),b
  6068  004DF6  0E3A               	movlw	58
  6069  004DF8                     u12957:
  6070  004DF8  2EE8               	decfsz	wreg,f,c
  6071  004DFA  D7FE               	bra	u12957
  6072  004DFC  2F80               	decfsz	??_turn_right& (0+255),f,b
  6073  004DFE  D7FC               	bra	u12957
  6074  004E00  F000               	nop	
  6075                           
  6076                           ;encoder_motor.c: 76: LATCbits.LATC2 = 0;
  6077  004E02  948B               	bcf	3979,2,c	;volatile
  6078                           
  6079                           ;encoder_motor.c: 77: LATCbits.LATC6 = 1;
  6080  004E04  8C8B               	bsf	3979,6,c	;volatile
  6081                           
  6082                           ;encoder_motor.c: 78: LATCbits.LATC0 = 1;
  6083  004E06  808B               	bsf	3979,0,c	;volatile
  6084                           
  6085                           ;encoder_motor.c: 79: _delay((unsigned long)((4)*(10000000/4000.0)));
  6086  004E08  0E0D               	movlw	13
  6087  004E0A  0100               	movlb	0	; () banked
  6088  004E0C  6F80               	movwf	??_turn_right& (0+255),b
  6089  004E0E  0EFB               	movlw	251
  6090  004E10                     u12967:
  6091  004E10  2EE8               	decfsz	wreg,f,c
  6092  004E12  D7FE               	bra	u12967
  6093  004E14  2F80               	decfsz	??_turn_right& (0+255),f,b
  6094  004E16  D7FC               	bra	u12967
  6095  004E18  D000               	nop2	
  6096                           
  6097                           ;encoder_motor.c: 80: LATCbits.LATC2 = 0;
  6098  004E1A  948B               	bcf	3979,2,c	;volatile
  6099                           
  6100                           ;encoder_motor.c: 81: LATCbits.LATC6 = 0;
  6101  004E1C  9C8B               	bcf	3979,6,c	;volatile
  6102                           
  6103                           ;encoder_motor.c: 82: LATCbits.LATC0 = 0;
  6104  004E1E  908B               	bcf	3979,0,c	;volatile
  6105                           
  6106                           ;encoder_motor.c: 83: _delay((unsigned long)((1.5)*(10000000/4000.0)));
  6107  004E20  0E05               	movlw	5
  6108  004E22  0100               	movlb	0	; () banked
  6109  004E24  6F80               	movwf	??_turn_right& (0+255),b
  6110  004E26  0EDD               	movlw	221
  6111  004E28                     u12977:
  6112  004E28  2EE8               	decfsz	wreg,f,c
  6113  004E2A  D7FE               	bra	u12977
  6114  004E2C  2F80               	decfsz	??_turn_right& (0+255),f,b
  6115  004E2E  D7FC               	bra	u12977
  6116  004E30  D000               	nop2	
  6117  004E32  0012               	return		;funcret
  6118  004E34                     __end_of_turn_right:
  6119                           	opt callstack 0
  6120                           
  6121 ;; *************** function _turn_left *****************
  6122 ;; Defined at:
  6123 ;;		line 49 in file "encoder_motor.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;		None
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      void 
  6130 ;; Registers used:
  6131 ;;		wreg
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:        1 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    8
  6144 ;; This function calls:
  6145 ;;		Nothing
  6146 ;; This function is called by:
  6147 ;;		_moving
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text17
  6152  004E34                     __ptext17:
  6153                           	opt callstack 0
  6154  004E34                     _turn_left:
  6155                           	opt callstack 20
  6156                           
  6157                           ;encoder_motor.c: 50: LATCbits.LATC5 = 0;
  6158                           
  6159                           ;incstack = 0
  6160  004E34  9A8B               	bcf	3979,5,c	;volatile
  6161                           
  6162                           ;encoder_motor.c: 51: LATCbits.LATC1 = 0;
  6163  004E36  928B               	bcf	3979,1,c	;volatile
  6164                           
  6165                           ;encoder_motor.c: 52: LATCbits.LATC7 = 0;
  6166  004E38  9E8B               	bcf	3979,7,c	;volatile
  6167                           
  6168                           ;encoder_motor.c: 54: LATCbits.LATC2 = 1;
  6169  004E3A  848B               	bsf	3979,2,c	;volatile
  6170                           
  6171                           ;encoder_motor.c: 55: LATCbits.LATC6 = 1;
  6172  004E3C  8C8B               	bsf	3979,6,c	;volatile
  6173                           
  6174                           ;encoder_motor.c: 56: LATCbits.LATC0 = 1;
  6175  004E3E  808B               	bsf	3979,0,c	;volatile
  6176                           
  6177                           ;encoder_motor.c: 57: _delay((unsigned long)((8)*(10000000/4000.0)));
  6178  004E40  0E1A               	movlw	26
  6179  004E42  0100               	movlb	0	; () banked
  6180  004E44  6F80               	movwf	??_turn_left& (0+255),b
  6181  004E46  0EF8               	movlw	248
  6182  004E48                     u12987:
  6183  004E48  2EE8               	decfsz	wreg,f,c
  6184  004E4A  D7FE               	bra	u12987
  6185  004E4C  2F80               	decfsz	??_turn_left& (0+255),f,b
  6186  004E4E  D7FC               	bra	u12987
  6187  004E50  F000               	nop	
  6188                           
  6189                           ;encoder_motor.c: 58: LATCbits.LATC2 = 1;
  6190  004E52  848B               	bsf	3979,2,c	;volatile
  6191                           
  6192                           ;encoder_motor.c: 59: LATCbits.LATC6 = 0;
  6193  004E54  9C8B               	bcf	3979,6,c	;volatile
  6194                           
  6195                           ;encoder_motor.c: 60: LATCbits.LATC0 = 0;
  6196  004E56  908B               	bcf	3979,0,c	;volatile
  6197                           
  6198                           ;encoder_motor.c: 61: _delay((unsigned long)((1)*(10000000/4000.0)));
  6199  004E58  0E04               	movlw	4
  6200  004E5A  0100               	movlb	0	; () banked
  6201  004E5C  6F80               	movwf	??_turn_left& (0+255),b
  6202  004E5E  0E3D               	movlw	61
  6203  004E60                     u12997:
  6204  004E60  2EE8               	decfsz	wreg,f,c
  6205  004E62  D7FE               	bra	u12997
  6206  004E64  2F80               	decfsz	??_turn_left& (0+255),f,b
  6207  004E66  D7FC               	bra	u12997
  6208  004E68  D000               	nop2	
  6209                           
  6210                           ;encoder_motor.c: 62: LATCbits.LATC2 = 0;
  6211  004E6A  948B               	bcf	3979,2,c	;volatile
  6212                           
  6213                           ;encoder_motor.c: 63: LATCbits.LATC6 = 0;
  6214  004E6C  9C8B               	bcf	3979,6,c	;volatile
  6215                           
  6216                           ;encoder_motor.c: 64: LATCbits.LATC0 = 0;
  6217  004E6E  908B               	bcf	3979,0,c	;volatile
  6218                           
  6219                           ;encoder_motor.c: 65: _delay((unsigned long)((1.5)*(10000000/4000.0)));
  6220  004E70  0E05               	movlw	5
  6221  004E72  0100               	movlb	0	; () banked
  6222  004E74  6F80               	movwf	??_turn_left& (0+255),b
  6223  004E76  0EDD               	movlw	221
  6224  004E78                     u13007:
  6225  004E78  2EE8               	decfsz	wreg,f,c
  6226  004E7A  D7FE               	bra	u13007
  6227  004E7C  2F80               	decfsz	??_turn_left& (0+255),f,b
  6228  004E7E  D7FC               	bra	u13007
  6229  004E80  D000               	nop2	
  6230  004E82  0012               	return		;funcret
  6231  004E84                     __end_of_turn_left:
  6232                           	opt callstack 0
  6233                           
  6234 ;; *************** function _straight *****************
  6235 ;; Defined at:
  6236 ;;		line 31 in file "encoder_motor.c"
  6237 ;; Parameters:    Size  Location     Type
  6238 ;;		None
  6239 ;; Auto vars:     Size  Location     Type
  6240 ;;		None
  6241 ;; Return value:  Size  Location     Type
  6242 ;;                  1    wreg      void 
  6243 ;; Registers used:
  6244 ;;		wreg
  6245 ;; Tracked objects:
  6246 ;;		On entry : 0/0
  6247 ;;		On exit  : 0/0
  6248 ;;		Unchanged: 0/0
  6249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6254 ;;Total ram usage:        1 bytes
  6255 ;; Hardware stack levels used:    1
  6256 ;; Hardware stack levels required when called:    8
  6257 ;; This function calls:
  6258 ;;		Nothing
  6259 ;; This function is called by:
  6260 ;;		_moving
  6261 ;; This function uses a non-reentrant model
  6262 ;;
  6263                           
  6264                           	psect	text18
  6265  004ED4                     __ptext18:
  6266                           	opt callstack 0
  6267  004ED4                     _straight:
  6268                           	opt callstack 20
  6269                           
  6270                           ;encoder_motor.c: 32: LATCbits.LATC5 = 0;
  6271                           
  6272                           ;incstack = 0
  6273  004ED4  9A8B               	bcf	3979,5,c	;volatile
  6274                           
  6275                           ;encoder_motor.c: 33: LATCbits.LATC1 = 0;
  6276  004ED6  928B               	bcf	3979,1,c	;volatile
  6277                           
  6278                           ;encoder_motor.c: 34: LATCbits.LATC7 = 0;
  6279  004ED8  9E8B               	bcf	3979,7,c	;volatile
  6280                           
  6281                           ;encoder_motor.c: 36: LATCbits.LATC2 = 1;
  6282  004EDA  848B               	bsf	3979,2,c	;volatile
  6283                           
  6284                           ;encoder_motor.c: 37: LATCbits.LATC6 = 1;
  6285  004EDC  8C8B               	bsf	3979,6,c	;volatile
  6286                           
  6287                           ;encoder_motor.c: 38: LATCbits.LATC0 = 1;
  6288  004EDE  808B               	bsf	3979,0,c	;volatile
  6289                           
  6290                           ;encoder_motor.c: 39: _delay((unsigned long)((7)*(10000000/4000.0)));
  6291  004EE0  0E17               	movlw	23
  6292  004EE2  0100               	movlb	0	; () banked
  6293  004EE4  6F80               	movwf	??_straight& (0+255),b
  6294  004EE6  0EB9               	movlw	185
  6295  004EE8                     u13017:
  6296  004EE8  2EE8               	decfsz	wreg,f,c
  6297  004EEA  D7FE               	bra	u13017
  6298  004EEC  2F80               	decfsz	??_straight& (0+255),f,b
  6299  004EEE  D7FC               	bra	u13017
  6300                           
  6301                           ;encoder_motor.c: 40: LATCbits.LATC2 = 0;
  6302  004EF0  948B               	bcf	3979,2,c	;volatile
  6303                           
  6304                           ;encoder_motor.c: 41: LATCbits.LATC6 = 1;
  6305  004EF2  8C8B               	bsf	3979,6,c	;volatile
  6306                           
  6307                           ;encoder_motor.c: 42: LATCbits.LATC0 = 1;
  6308  004EF4  808B               	bsf	3979,0,c	;volatile
  6309                           
  6310                           ;encoder_motor.c: 43: _delay((unsigned long)((1)*(10000000/4000.0)));
  6311  004EF6  0E04               	movlw	4
  6312  004EF8  0100               	movlb	0	; () banked
  6313  004EFA  6F80               	movwf	??_straight& (0+255),b
  6314  004EFC  0E3D               	movlw	61
  6315  004EFE                     u13027:
  6316  004EFE  2EE8               	decfsz	wreg,f,c
  6317  004F00  D7FE               	bra	u13027
  6318  004F02  2F80               	decfsz	??_straight& (0+255),f,b
  6319  004F04  D7FC               	bra	u13027
  6320  004F06  D000               	nop2	
  6321                           
  6322                           ;encoder_motor.c: 44: LATCbits.LATC2 = 0;
  6323  004F08  948B               	bcf	3979,2,c	;volatile
  6324                           
  6325                           ;encoder_motor.c: 45: LATCbits.LATC6 = 0;
  6326  004F0A  9C8B               	bcf	3979,6,c	;volatile
  6327                           
  6328                           ;encoder_motor.c: 46: LATCbits.LATC0 = 0;
  6329  004F0C  908B               	bcf	3979,0,c	;volatile
  6330                           
  6331                           ;encoder_motor.c: 47: _delay((unsigned long)((2.5)*(10000000/4000.0)));
  6332  004F0E  0E09               	movlw	9
  6333  004F10  0100               	movlb	0	; () banked
  6334  004F12  6F80               	movwf	??_straight& (0+255),b
  6335  004F14  0E1C               	movlw	28
  6336  004F16                     u13037:
  6337  004F16  2EE8               	decfsz	wreg,f,c
  6338  004F18  D7FE               	bra	u13037
  6339  004F1A  2F80               	decfsz	??_straight& (0+255),f,b
  6340  004F1C  D7FC               	bra	u13037
  6341  004F1E  F000               	nop	
  6342  004F20  0012               	return		;funcret
  6343  004F22                     __end_of_straight:
  6344                           	opt callstack 0
  6345                           
  6346 ;; *************** function _hole_drop_bool_function *****************
  6347 ;; Defined at:
  6348 ;;		line 12 in file "sensor.c"
  6349 ;; Parameters:    Size  Location     Type
  6350 ;;		None
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  y               4   42[BANK0 ] float 
  6353 ;;  x               4   38[BANK0 ] float 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  2   36[BANK0 ] int 
  6356 ;; Registers used:
  6357 ;;		wreg, status,2, status,0, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6363 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;Total ram usage:       10 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:   10
  6370 ;; This function calls:
  6371 ;;		___fladd
  6372 ;;		___fleq
  6373 ;;		___flge
  6374 ;;		___flsub
  6375 ;; This function is called by:
  6376 ;;		_sensed_function_3
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text19
  6381  0036C6                     __ptext19:
  6382                           	opt callstack 0
  6383  0036C6                     _hole_drop_bool_function:
  6384                           	opt callstack 19
  6385                           
  6386                           ;sensor.c: 13: if (last_dropped == 0){
  6387                           
  6388                           ;incstack = 0
  6389  0036C6  0100               	movlb	0	; () banked
  6390  0036C8  51E7               	movf	_last_dropped& (0+255),w,b
  6391  0036CA  A4D8               	btfss	status,2,c
  6392  0036CC  D007               	goto	l613
  6393  0036CE                     u11270:
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;sensor.c: 14: last_dropped = 1;return 1;
  6397  0036CE  0E01               	movlw	1
  6398  0036D0  6FE7               	movwf	_last_dropped& (0+255),b
  6399  0036D2  0E00               	movlw	0
  6400  0036D4  6FA5               	movwf	(?_hole_drop_bool_function+1)& (0+255),b
  6401  0036D6  0E01               	movlw	1
  6402  0036D8  6FA4               	movwf	?_hole_drop_bool_function& (0+255),b
  6403  0036DA  0012               	return	
  6404  0036DC                     l613:
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;sensor.c: 16: else{;sensor.c: 17: float x = last_problem_bool[0];
  6408  0036DC  C034  F0A6         	movff	_last_problem_bool,hole_drop_bool_function@x
  6409  0036E0  C035  F0A7         	movff	_last_problem_bool+1,hole_drop_bool_function@x+1
  6410  0036E4  C036  F0A8         	movff	_last_problem_bool+2,hole_drop_bool_function@x+2
  6411  0036E8  C037  F0A9         	movff	_last_problem_bool+3,hole_drop_bool_function@x+3
  6412                           
  6413                           ;sensor.c: 18: float y = last_problem_bool[1];
  6414  0036EC  C038  F0AA         	movff	_last_problem_bool+4,hole_drop_bool_function@y
  6415  0036F0  C039  F0AB         	movff	_last_problem_bool+5,hole_drop_bool_function@y+1
  6416  0036F4  C03A  F0AC         	movff	_last_problem_bool+6,hole_drop_bool_function@y+2
  6417  0036F8  C03B  F0AD         	movff	_last_problem_bool+7,hole_drop_bool_function@y+3
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;sensor.c: 23: if (x + y ==0){
  6421  0036FC  C0AA  F084         	movff	hole_drop_bool_function@y,___fladd@a
  6422  003700  C0AB  F085         	movff	hole_drop_bool_function@y+1,___fladd@a+1
  6423  003704  C0AC  F086         	movff	hole_drop_bool_function@y+2,___fladd@a+2
  6424  003708  C0AD  F087         	movff	hole_drop_bool_function@y+3,___fladd@a+3
  6425  00370C  C0A6  F080         	movff	hole_drop_bool_function@x,___fladd@b
  6426  003710  C0A7  F081         	movff	hole_drop_bool_function@x+1,___fladd@b+1
  6427  003714  C0A8  F082         	movff	hole_drop_bool_function@x+2,___fladd@b+2
  6428  003718  C0A9  F083         	movff	hole_drop_bool_function@x+3,___fladd@b+3
  6429  00371C  ECEB  F00A         	call	___fladd	;wreg free
  6430  003720  C080  F090         	movff	?___fladd,___fleq@ff1
  6431  003724  C081  F091         	movff	?___fladd+1,___fleq@ff1+1
  6432  003728  C082  F092         	movff	?___fladd+2,___fleq@ff1+2
  6433  00372C  C083  F093         	movff	?___fladd+3,___fleq@ff1+3
  6434  003730  0E00               	movlw	0
  6435  003732  0100               	movlb	0	; () banked
  6436  003734  6F94               	movwf	___fleq@ff2& (0+255),b
  6437  003736  0E00               	movlw	0
  6438  003738  6F95               	movwf	(___fleq@ff2+1)& (0+255),b
  6439  00373A  0E00               	movlw	0
  6440  00373C  6F96               	movwf	(___fleq@ff2+2)& (0+255),b
  6441  00373E  0E00               	movlw	0
  6442  003740  6F97               	movwf	(___fleq@ff2+3)& (0+255),b
  6443  003742  EC04  F022         	call	___fleq	;wreg free
  6444  003746  0100               	movlb	0	; () banked
  6445  003748  B0D8               	btfsc	status,0,c
  6446  00374A  D7C1               	goto	u11270
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;sensor.c: 26: else if (last_problem_bool[0] == 1) {
  6450  00374C  C034  F090         	movff	_last_problem_bool,___fleq@ff1
  6451  003750  C035  F091         	movff	_last_problem_bool+1,___fleq@ff1+1
  6452  003754  C036  F092         	movff	_last_problem_bool+2,___fleq@ff1+2
  6453  003758  C037  F093         	movff	_last_problem_bool+3,___fleq@ff1+3
  6454  00375C  0E00               	movlw	0
  6455  00375E  6F94               	movwf	___fleq@ff2& (0+255),b
  6456  003760  0E00               	movlw	0
  6457  003762  6F95               	movwf	(___fleq@ff2+1)& (0+255),b
  6458  003764  0E80               	movlw	128
  6459  003766  6F96               	movwf	(___fleq@ff2+2)& (0+255),b
  6460  003768  0E3F               	movlw	63
  6461  00376A  6F97               	movwf	(___fleq@ff2+3)& (0+255),b
  6462  00376C  EC04  F022         	call	___fleq	;wreg free
  6463  003770  0100               	movlb	0	; () banked
  6464  003772  A0D8               	btfss	status,0,c
  6465  003774  D02F               	goto	l11100
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;sensor.c: 27: if (accum_straight_distance - y >= 0.55){
  6469  003776  C0AA  F094         	movff	hole_drop_bool_function@y,___flsub@a
  6470  00377A  C0AB  F095         	movff	hole_drop_bool_function@y+1,___flsub@a+1
  6471  00377E  C0AC  F096         	movff	hole_drop_bool_function@y+2,___flsub@a+2
  6472  003782  C0AD  F097         	movff	hole_drop_bool_function@y+3,___flsub@a+3
  6473  003786  C0C4  F090         	movff	_accum_straight_distance,___flsub@b
  6474  00378A  C0C5  F091         	movff	_accum_straight_distance+1,___flsub@b+1
  6475  00378E  C0C6  F092         	movff	_accum_straight_distance+2,___flsub@b+2
  6476  003792  C0C7  F093         	movff	_accum_straight_distance+3,___flsub@b+3
  6477  003796  EC29  F028         	call	___flsub	;wreg free
  6478  00379A  C090  F098         	movff	?___flsub,___flge@ff1
  6479  00379E  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  6480  0037A2  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  6481  0037A6  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  6482  0037AA  0ECD               	movlw	205
  6483  0037AC  0100               	movlb	0	; () banked
  6484  0037AE  6F9C               	movwf	___flge@ff2& (0+255),b
  6485  0037B0  0ECC               	movlw	204
  6486  0037B2  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  6487  0037B4  0E0C               	movlw	12
  6488  0037B6  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  6489  0037B8  0E3F               	movlw	63
  6490  0037BA  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  6491  0037BC  ECF6  F01D         	call	___flge	;wreg free
  6492  0037C0  0100               	movlb	0	; () banked
  6493  0037C2  B0D8               	btfsc	status,0,c
  6494  0037C4  D784               	goto	u11270
  6495                           
  6496                           ; BSR set to: 0
  6497                           ;sensor.c: 29: else{;sensor.c: 30: last_dropped = 0;
  6498  0037C6  0E00               	movlw	0
  6499  0037C8  6FE7               	movwf	_last_dropped& (0+255),b
  6500                           
  6501                           ;sensor.c: 31: return 0;}
  6502  0037CA  0E00               	movlw	0
  6503  0037CC  6FA5               	movwf	(?_hole_drop_bool_function+1)& (0+255),b
  6504  0037CE  0E00               	movlw	0
  6505  0037D0  6FA4               	movwf	?_hole_drop_bool_function& (0+255),b
  6506  0037D2  0012               	return	
  6507  0037D4                     l11100:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;sensor.c: 33: else{;sensor.c: 34: if (accum_straight_distance - y >= 0.75){
  6511  0037D4  C0AA  F094         	movff	hole_drop_bool_function@y,___flsub@a
  6512  0037D8  C0AB  F095         	movff	hole_drop_bool_function@y+1,___flsub@a+1
  6513  0037DC  C0AC  F096         	movff	hole_drop_bool_function@y+2,___flsub@a+2
  6514  0037E0  C0AD  F097         	movff	hole_drop_bool_function@y+3,___flsub@a+3
  6515  0037E4  C0C4  F090         	movff	_accum_straight_distance,___flsub@b
  6516  0037E8  C0C5  F091         	movff	_accum_straight_distance+1,___flsub@b+1
  6517  0037EC  C0C6  F092         	movff	_accum_straight_distance+2,___flsub@b+2
  6518  0037F0  C0C7  F093         	movff	_accum_straight_distance+3,___flsub@b+3
  6519  0037F4  EC29  F028         	call	___flsub	;wreg free
  6520  0037F8  C090  F098         	movff	?___flsub,___flge@ff1
  6521  0037FC  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  6522  003800  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  6523  003804  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  6524  003808  0E00               	movlw	0
  6525  00380A  0100               	movlb	0	; () banked
  6526  00380C  6F9C               	movwf	___flge@ff2& (0+255),b
  6527  00380E  0E00               	movlw	0
  6528  003810  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  6529  003812  0E40               	movlw	64
  6530  003814  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  6531  003816  0E3F               	movlw	63
  6532  003818  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  6533  00381A  ECF6  F01D         	call	___flge	;wreg free
  6534  00381E  D7D0               	goto	L5
  6535  003820                     __end_of_hole_drop_bool_function:
  6536                           	opt callstack 0
  6537                           
  6538 ;; *************** function _drop_record *****************
  6539 ;; Defined at:
  6540 ;;		line 72 in file "sensor.c"
  6541 ;; Parameters:    Size  Location     Type
  6542 ;;  aa              2   16[BANK0 ] int 
  6543 ;; Auto vars:     Size  Location     Type
  6544 ;;		None
  6545 ;; Return value:  Size  Location     Type
  6546 ;;                  1    wreg      void 
  6547 ;; Registers used:
  6548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6549 ;; Tracked objects:
  6550 ;;		On entry : 0/0
  6551 ;;		On exit  : 0/0
  6552 ;;		Unchanged: 0/0
  6553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;Total ram usage:        4 bytes
  6559 ;; Hardware stack levels used:    1
  6560 ;; Hardware stack levels required when called:    9
  6561 ;; This function calls:
  6562 ;;		___fladd
  6563 ;; This function is called by:
  6564 ;;		_sensed_function_3
  6565 ;; This function uses a non-reentrant model
  6566 ;;
  6567                           
  6568                           	psect	text20
  6569  004728                     __ptext20:
  6570                           	opt callstack 0
  6571  004728                     _drop_record:
  6572                           	opt callstack 20
  6573                           
  6574                           ;sensor.c: 73: drop_identity[add_index] = aa;
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;incstack = 0
  6578  004728  90D8               	bcf	status,0,c
  6579  00472A  344A               	rlcf	_add_index,w,c
  6580  00472C  6ED9               	movwf	fsr2l,c
  6581  00472E  344B               	rlcf	_add_index+1,w,c
  6582  004730  6EDA               	movwf	fsr2h,c
  6583  004732  0E60               	movlw	low _drop_identity
  6584  004734  26D9               	addwf	fsr2l,f,c
  6585  004736  0E01               	movlw	high _drop_identity
  6586  004738  22DA               	addwfc	fsr2h,f,c
  6587  00473A  C090  FFDE         	movff	drop_record@aa,postinc2
  6588  00473E  C091  FFDD         	movff	drop_record@aa+1,postdec2
  6589  004742  C0C4  F080         	movff	_accum_straight_distance,___fladd@b
  6590  004746  C0C5  F081         	movff	_accum_straight_distance+1,___fladd@b+1
  6591  00474A  C0C6  F082         	movff	_accum_straight_distance+2,___fladd@b+2
  6592  00474E  C0C7  F083         	movff	_accum_straight_distance+3,___fladd@b+3
  6593  004752  0E9A               	movlw	154
  6594  004754  0100               	movlb	0	; () banked
  6595  004756  6F84               	movwf	___fladd@a& (0+255),b
  6596  004758  0E99               	movlw	153
  6597  00475A  6F85               	movwf	(___fladd@a+1)& (0+255),b
  6598  00475C  0EB9               	movlw	185
  6599  00475E  6F86               	movwf	(___fladd@a+2)& (0+255),b
  6600  004760  0E3F               	movlw	63
  6601  004762  6F87               	movwf	(___fladd@a+3)& (0+255),b
  6602  004764  ECEB  F00A         	call	___fladd	;wreg free
  6603  004768  0E00               	movlw	low _drop_position
  6604  00476A  0100               	movlb	0	; () banked
  6605  00476C  6F92               	movwf	??_drop_record& (0+255),b
  6606  00476E  0E01               	movlw	high _drop_position
  6607  004770  6F93               	movwf	(??_drop_record+1)& (0+255),b
  6608  004772  90D8               	bcf	status,0,c
  6609  004774  344A               	rlcf	_add_index,w,c
  6610  004776  6ED9               	movwf	fsr2l,c
  6611  004778  344B               	rlcf	_add_index+1,w,c
  6612  00477A  6EDA               	movwf	fsr2h,c
  6613  00477C  90D8               	bcf	status,0,c
  6614  00477E  36D9               	rlcf	fsr2l,f,c
  6615  004780  36DA               	rlcf	fsr2h,f,c
  6616  004782  5192               	movf	??_drop_record& (0+255),w,b
  6617  004784  26D9               	addwf	fsr2l,f,c
  6618  004786  5193               	movf	(??_drop_record+1)& (0+255),w,b
  6619  004788  22DA               	addwfc	fsr2h,f,c
  6620  00478A  C080  FFDE         	movff	?___fladd,postinc2
  6621  00478E  C081  FFDE         	movff	?___fladd+1,postinc2
  6622  004792  C082  FFDE         	movff	?___fladd+2,postinc2
  6623  004796  C083  FFDE         	movff	?___fladd+3,postinc2
  6624                           
  6625                           ; BSR set to: 0
  6626                           ;sensor.c: 75: add_index +=1;
  6627  00479A  4A4A               	infsnz	_add_index,f,c
  6628  00479C  2A4B               	incf	_add_index+1,f,c
  6629                           
  6630                           ; BSR set to: 0
  6631  00479E  0012               	return		;funcret
  6632  0047A0                     __end_of_drop_record:
  6633                           	opt callstack 0
  6634                           
  6635 ;; *************** function _crack_drop_bool_function *****************
  6636 ;; Defined at:
  6637 ;;		line 40 in file "sensor.c"
  6638 ;; Parameters:    Size  Location     Type
  6639 ;;		None
  6640 ;; Auto vars:     Size  Location     Type
  6641 ;;  y               4   42[BANK0 ] float 
  6642 ;;  x               4   38[BANK0 ] float 
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  2   36[BANK0 ] int 
  6645 ;; Registers used:
  6646 ;;		wreg, status,2, status,0, cstack
  6647 ;; Tracked objects:
  6648 ;;		On entry : 0/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6652 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6655 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6656 ;;Total ram usage:       10 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:   10
  6659 ;; This function calls:
  6660 ;;		___fladd
  6661 ;;		___fleq
  6662 ;;		___flge
  6663 ;;		___flsub
  6664 ;; This function is called by:
  6665 ;;		_sensed_function_3
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text21
  6670  003820                     __ptext21:
  6671                           	opt callstack 0
  6672  003820                     _crack_drop_bool_function:
  6673                           	opt callstack 19
  6674                           
  6675                           ;sensor.c: 41: if (last_dropped == 0){
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;incstack = 0
  6679  003820  0100               	movlb	0	; () banked
  6680  003822  51E7               	movf	_last_dropped& (0+255),w,b
  6681  003824  A4D8               	btfss	status,2,c
  6682  003826  D007               	goto	l626
  6683  003828                     u11320:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;sensor.c: 42: last_dropped = 1;
  6687  003828  0E01               	movlw	1
  6688  00382A  6FE7               	movwf	_last_dropped& (0+255),b
  6689                           
  6690                           ;sensor.c: 43: return 1;
  6691  00382C  0E00               	movlw	0
  6692  00382E  6FA5               	movwf	(?_crack_drop_bool_function+1)& (0+255),b
  6693  003830  0E01               	movlw	1
  6694  003832  6FA4               	movwf	?_crack_drop_bool_function& (0+255),b
  6695  003834  0012               	return	
  6696  003836                     l626:
  6697                           
  6698                           ; BSR set to: 0
  6699                           ;sensor.c: 45: else{;sensor.c: 47: float x = last_problem_bool[0];
  6700  003836  C034  F0A6         	movff	_last_problem_bool,crack_drop_bool_function@x
  6701  00383A  C035  F0A7         	movff	_last_problem_bool+1,crack_drop_bool_function@x+1
  6702  00383E  C036  F0A8         	movff	_last_problem_bool+2,crack_drop_bool_function@x+2
  6703  003842  C037  F0A9         	movff	_last_problem_bool+3,crack_drop_bool_function@x+3
  6704                           
  6705                           ;sensor.c: 48: float y = last_problem_bool[1];
  6706  003846  C038  F0AA         	movff	_last_problem_bool+4,crack_drop_bool_function@y
  6707  00384A  C039  F0AB         	movff	_last_problem_bool+5,crack_drop_bool_function@y+1
  6708  00384E  C03A  F0AC         	movff	_last_problem_bool+6,crack_drop_bool_function@y+2
  6709  003852  C03B  F0AD         	movff	_last_problem_bool+7,crack_drop_bool_function@y+3
  6710                           
  6711                           ; BSR set to: 0
  6712                           ;sensor.c: 49: if (x+y ==0){
  6713  003856  C0AA  F084         	movff	crack_drop_bool_function@y,___fladd@a
  6714  00385A  C0AB  F085         	movff	crack_drop_bool_function@y+1,___fladd@a+1
  6715  00385E  C0AC  F086         	movff	crack_drop_bool_function@y+2,___fladd@a+2
  6716  003862  C0AD  F087         	movff	crack_drop_bool_function@y+3,___fladd@a+3
  6717  003866  C0A6  F080         	movff	crack_drop_bool_function@x,___fladd@b
  6718  00386A  C0A7  F081         	movff	crack_drop_bool_function@x+1,___fladd@b+1
  6719  00386E  C0A8  F082         	movff	crack_drop_bool_function@x+2,___fladd@b+2
  6720  003872  C0A9  F083         	movff	crack_drop_bool_function@x+3,___fladd@b+3
  6721  003876  ECEB  F00A         	call	___fladd	;wreg free
  6722  00387A  C080  F090         	movff	?___fladd,___fleq@ff1
  6723  00387E  C081  F091         	movff	?___fladd+1,___fleq@ff1+1
  6724  003882  C082  F092         	movff	?___fladd+2,___fleq@ff1+2
  6725  003886  C083  F093         	movff	?___fladd+3,___fleq@ff1+3
  6726  00388A  0E00               	movlw	0
  6727  00388C  0100               	movlb	0	; () banked
  6728  00388E  6F94               	movwf	___fleq@ff2& (0+255),b
  6729  003890  0E00               	movlw	0
  6730  003892  6F95               	movwf	(___fleq@ff2+1)& (0+255),b
  6731  003894  0E00               	movlw	0
  6732  003896  6F96               	movwf	(___fleq@ff2+2)& (0+255),b
  6733  003898  0E00               	movlw	0
  6734  00389A  6F97               	movwf	(___fleq@ff2+3)& (0+255),b
  6735  00389C  EC04  F022         	call	___fleq	;wreg free
  6736  0038A0  0100               	movlb	0	; () banked
  6737  0038A2  B0D8               	btfsc	status,0,c
  6738  0038A4  D7C1               	goto	u11320
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;sensor.c: 53: else if (last_problem_bool[0] == 1) {
  6742  0038A6  C034  F090         	movff	_last_problem_bool,___fleq@ff1
  6743  0038AA  C035  F091         	movff	_last_problem_bool+1,___fleq@ff1+1
  6744  0038AE  C036  F092         	movff	_last_problem_bool+2,___fleq@ff1+2
  6745  0038B2  C037  F093         	movff	_last_problem_bool+3,___fleq@ff1+3
  6746  0038B6  0E00               	movlw	0
  6747  0038B8  6F94               	movwf	___fleq@ff2& (0+255),b
  6748  0038BA  0E00               	movlw	0
  6749  0038BC  6F95               	movwf	(___fleq@ff2+1)& (0+255),b
  6750  0038BE  0E80               	movlw	128
  6751  0038C0  6F96               	movwf	(___fleq@ff2+2)& (0+255),b
  6752  0038C2  0E3F               	movlw	63
  6753  0038C4  6F97               	movwf	(___fleq@ff2+3)& (0+255),b
  6754  0038C6  EC04  F022         	call	___fleq	;wreg free
  6755  0038CA  0100               	movlb	0	; () banked
  6756  0038CC  A0D8               	btfss	status,0,c
  6757  0038CE  D02F               	goto	l11142
  6758                           
  6759                           ; BSR set to: 0
  6760                           ;sensor.c: 54: if (accum_straight_distance - y >= 0.75){
  6761  0038D0  C0AA  F094         	movff	crack_drop_bool_function@y,___flsub@a
  6762  0038D4  C0AB  F095         	movff	crack_drop_bool_function@y+1,___flsub@a+1
  6763  0038D8  C0AC  F096         	movff	crack_drop_bool_function@y+2,___flsub@a+2
  6764  0038DC  C0AD  F097         	movff	crack_drop_bool_function@y+3,___flsub@a+3
  6765  0038E0  C0C4  F090         	movff	_accum_straight_distance,___flsub@b
  6766  0038E4  C0C5  F091         	movff	_accum_straight_distance+1,___flsub@b+1
  6767  0038E8  C0C6  F092         	movff	_accum_straight_distance+2,___flsub@b+2
  6768  0038EC  C0C7  F093         	movff	_accum_straight_distance+3,___flsub@b+3
  6769  0038F0  EC29  F028         	call	___flsub	;wreg free
  6770  0038F4  C090  F098         	movff	?___flsub,___flge@ff1
  6771  0038F8  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  6772  0038FC  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  6773  003900  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  6774  003904  0E00               	movlw	0
  6775  003906  0100               	movlb	0	; () banked
  6776  003908  6F9C               	movwf	___flge@ff2& (0+255),b
  6777  00390A  0E00               	movlw	0
  6778  00390C  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  6779  00390E  0E40               	movlw	64
  6780  003910  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  6781  003912  0E3F               	movlw	63
  6782  003914  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  6783  003916  ECF6  F01D         	call	___flge	;wreg free
  6784  00391A  0100               	movlb	0	; () banked
  6785  00391C  B0D8               	btfsc	status,0,c
  6786  00391E  D784               	goto	u11320
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;sensor.c: 57: else{;sensor.c: 58: last_dropped = 0;
  6790  003920  0E00               	movlw	0
  6791  003922  6FE7               	movwf	_last_dropped& (0+255),b
  6792                           
  6793                           ;sensor.c: 59: return 0;}
  6794  003924  0E00               	movlw	0
  6795  003926  6FA5               	movwf	(?_crack_drop_bool_function+1)& (0+255),b
  6796  003928  0E00               	movlw	0
  6797  00392A  6FA4               	movwf	?_crack_drop_bool_function& (0+255),b
  6798  00392C  0012               	return	
  6799  00392E                     l11142:
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;sensor.c: 61: else{;sensor.c: 62: if (accum_straight_distance - y >= 0.36){
  6803  00392E  C0AA  F094         	movff	crack_drop_bool_function@y,___flsub@a
  6804  003932  C0AB  F095         	movff	crack_drop_bool_function@y+1,___flsub@a+1
  6805  003936  C0AC  F096         	movff	crack_drop_bool_function@y+2,___flsub@a+2
  6806  00393A  C0AD  F097         	movff	crack_drop_bool_function@y+3,___flsub@a+3
  6807  00393E  C0C4  F090         	movff	_accum_straight_distance,___flsub@b
  6808  003942  C0C5  F091         	movff	_accum_straight_distance+1,___flsub@b+1
  6809  003946  C0C6  F092         	movff	_accum_straight_distance+2,___flsub@b+2
  6810  00394A  C0C7  F093         	movff	_accum_straight_distance+3,___flsub@b+3
  6811  00394E  EC29  F028         	call	___flsub	;wreg free
  6812  003952  C090  F098         	movff	?___flsub,___flge@ff1
  6813  003956  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  6814  00395A  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  6815  00395E  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  6816  003962  0EEC               	movlw	236
  6817  003964  0100               	movlb	0	; () banked
  6818  003966  6F9C               	movwf	___flge@ff2& (0+255),b
  6819  003968  0E51               	movlw	81
  6820  00396A  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  6821  00396C  0EB8               	movlw	184
  6822  00396E  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  6823  003970  0E3E               	movlw	62
  6824  003972  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  6825  003974  ECF6  F01D         	call	___flge	;wreg free
  6826  003978  D7D0               	goto	L6
  6827  00397A                     __end_of_crack_drop_bool_function:
  6828                           	opt callstack 0
  6829                           
  6830 ;; *************** function ___fleq *****************
  6831 ;; Defined at:
  6832 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  6833 ;; Parameters:    Size  Location     Type
  6834 ;;  ff1             4   16[BANK0 ] int 
  6835 ;;  ff2             4   20[BANK0 ] int 
  6836 ;; Auto vars:     Size  Location     Type
  6837 ;;		None
  6838 ;; Return value:  Size  Location     Type
  6839 ;;		None               void
  6840 ;; Registers used:
  6841 ;;		wreg, status,2, status,0
  6842 ;; Tracked objects:
  6843 ;;		On entry : 0/0
  6844 ;;		On exit  : 0/0
  6845 ;;		Unchanged: 0/0
  6846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6847 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6849 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;Total ram usage:       12 bytes
  6852 ;; Hardware stack levels used:    1
  6853 ;; Hardware stack levels required when called:    8
  6854 ;; This function calls:
  6855 ;;		Nothing
  6856 ;; This function is called by:
  6857 ;;		_hole_drop_bool_function
  6858 ;;		_crack_drop_bool_function
  6859 ;; This function uses a non-reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text22
  6863  004408                     __ptext22:
  6864                           	opt callstack 0
  6865  004408                     ___fleq:
  6866                           	opt callstack 20
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;incstack = 0
  6870  004408  0E00               	movlw	0
  6871  00440A  0100               	movlb	0	; () banked
  6872  00440C  1590               	andwf	___fleq@ff1& (0+255),w,b
  6873  00440E  6F98               	movwf	??___fleq& (0+255),b
  6874  004410  0E00               	movlw	0
  6875  004412  1591               	andwf	(___fleq@ff1+1)& (0+255),w,b
  6876  004414  6F99               	movwf	(??___fleq+1)& (0+255),b
  6877  004416  0E80               	movlw	128
  6878  004418  1592               	andwf	(___fleq@ff1+2)& (0+255),w,b
  6879  00441A  6F9A               	movwf	(??___fleq+2)& (0+255),b
  6880  00441C  0E7F               	movlw	127
  6881  00441E  1593               	andwf	(___fleq@ff1+3)& (0+255),w,b
  6882  004420  6F9B               	movwf	(??___fleq+3)& (0+255),b
  6883  004422  5198               	movf	??___fleq& (0+255),w,b
  6884  004424  1199               	iorwf	(??___fleq+1)& (0+255),w,b
  6885  004426  119A               	iorwf	(??___fleq+2)& (0+255),w,b
  6886  004428  119B               	iorwf	(??___fleq+3)& (0+255),w,b
  6887  00442A  A4D8               	btfss	status,2,c
  6888  00442C  D008               	goto	l10888
  6889                           
  6890                           ; BSR set to: 0
  6891  00442E  0E00               	movlw	0
  6892  004430  6F90               	movwf	___fleq@ff1& (0+255),b
  6893  004432  0E00               	movlw	0
  6894  004434  6F91               	movwf	(___fleq@ff1+1)& (0+255),b
  6895  004436  0E00               	movlw	0
  6896  004438  6F92               	movwf	(___fleq@ff1+2)& (0+255),b
  6897  00443A  0E00               	movlw	0
  6898  00443C  6F93               	movwf	(___fleq@ff1+3)& (0+255),b
  6899  00443E                     l10888:
  6900                           
  6901                           ; BSR set to: 0
  6902  00443E  0E00               	movlw	0
  6903  004440  1594               	andwf	___fleq@ff2& (0+255),w,b
  6904  004442  6F98               	movwf	??___fleq& (0+255),b
  6905  004444  0E00               	movlw	0
  6906  004446  1595               	andwf	(___fleq@ff2+1)& (0+255),w,b
  6907  004448  6F99               	movwf	(??___fleq+1)& (0+255),b
  6908  00444A  0E80               	movlw	128
  6909  00444C  1596               	andwf	(___fleq@ff2+2)& (0+255),w,b
  6910  00444E  6F9A               	movwf	(??___fleq+2)& (0+255),b
  6911  004450  0E7F               	movlw	127
  6912  004452  1597               	andwf	(___fleq@ff2+3)& (0+255),w,b
  6913  004454  6F9B               	movwf	(??___fleq+3)& (0+255),b
  6914  004456  5198               	movf	??___fleq& (0+255),w,b
  6915  004458  1199               	iorwf	(??___fleq+1)& (0+255),w,b
  6916  00445A  119A               	iorwf	(??___fleq+2)& (0+255),w,b
  6917  00445C  119B               	iorwf	(??___fleq+3)& (0+255),w,b
  6918  00445E  A4D8               	btfss	status,2,c
  6919  004460  D008               	goto	l10892
  6920                           
  6921                           ; BSR set to: 0
  6922  004462  0E00               	movlw	0
  6923  004464  6F94               	movwf	___fleq@ff2& (0+255),b
  6924  004466  0E00               	movlw	0
  6925  004468  6F95               	movwf	(___fleq@ff2+1)& (0+255),b
  6926  00446A  0E00               	movlw	0
  6927  00446C  6F96               	movwf	(___fleq@ff2+2)& (0+255),b
  6928  00446E  0E00               	movlw	0
  6929  004470  6F97               	movwf	(___fleq@ff2+3)& (0+255),b
  6930  004472                     l10892:
  6931                           
  6932                           ; BSR set to: 0
  6933  004472  5194               	movf	___fleq@ff2& (0+255),w,b
  6934  004474  1990               	xorwf	___fleq@ff1& (0+255),w,b
  6935  004476  E10A               	bnz	u10930
  6936  004478  5195               	movf	(___fleq@ff2+1)& (0+255),w,b
  6937  00447A  1991               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  6938  00447C  E107               	bnz	u10930
  6939  00447E  5196               	movf	(___fleq@ff2+2)& (0+255),w,b
  6940  004480  1992               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  6941  004482  E104               	bnz	u10930
  6942  004484  5197               	movf	(___fleq@ff2+3)& (0+255),w,b
  6943  004486  1993               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  6944  004488  B4D8               	btfsc	status,2,c
  6945  00448A  D002               	goto	l10896
  6946  00448C                     u10930:
  6947                           
  6948                           ; BSR set to: 0
  6949  00448C  90D8               	bcf	status,0,c
  6950  00448E  0012               	return	
  6951  004490                     l10896:
  6952                           
  6953                           ; BSR set to: 0
  6954  004490  80D8               	bsf	status,0,c
  6955                           
  6956                           ; BSR set to: 0
  6957  004492  0012               	return		;funcret
  6958  004494                     __end_of___fleq:
  6959                           	opt callstack 0
  6960                           
  6961 ;; *************** function _normal_updater *****************
  6962 ;; Defined at:
  6963 ;;		line 148 in file "main.c"
  6964 ;; Parameters:    Size  Location     Type
  6965 ;;		None
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;		None
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      void 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6978 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6979 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;Total ram usage:        6 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:   11
  6984 ;; This function calls:
  6985 ;;		___aldiv
  6986 ;;		___almod
  6987 ;;		___wmul
  6988 ;;		_readRTC
  6989 ;; This function is called by:
  6990 ;;		_main
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           	psect	text23
  6995  00397A                     __ptext23:
  6996                           	opt callstack 0
  6997  00397A                     _normal_updater:
  6998                           	opt callstack 19
  6999                           
  7000                           ;main.c: 149: readRTC();
  7001                           
  7002                           ; BSR set to: 0
  7003                           ;incstack = 0
  7004  00397A  EC37  F020         	call	_readRTC	;wreg free
  7005                           
  7006                           ;main.c: 150: end_sec = time[2]*3600+time[1]* 60 + time[0];
  7007  00397E  C0F2  F088         	movff	_time+2,___wmul@multiplier
  7008  003982  0100               	movlb	0	; () banked
  7009  003984  6B89               	clrf	(___wmul@multiplier+1)& (0+255),b
  7010  003986  0E0E               	movlw	14
  7011  003988  6F8B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  7012  00398A  0E10               	movlw	16
  7013  00398C  6F8A               	movwf	___wmul@multiplicand& (0+255),b
  7014  00398E  EC59  F029         	call	___wmul	;wreg free
  7015  003992  0100               	movlb	0	; () banked
  7016  003994  51F1               	movf	(_time+1)& (0+255),w,b
  7017  003996  0D3C               	mullw	60
  7018  003998  CFF3 F098          	movff	prodl,??_normal_updater
  7019  00399C  CFF4 F099          	movff	prodh,??_normal_updater+1
  7020  0039A0  5188               	movf	?___wmul& (0+255),w,b
  7021  0039A2  2798               	addwf	??_normal_updater& (0+255),f,b
  7022  0039A4  5189               	movf	(?___wmul+1)& (0+255),w,b
  7023  0039A6  2399               	addwfc	(??_normal_updater+1)& (0+255),f,b
  7024  0039A8  51F0               	movf	_time& (0+255),w,b
  7025  0039AA  2798               	addwf	??_normal_updater& (0+255),f,b
  7026  0039AC  0E00               	movlw	0
  7027  0039AE  2399               	addwfc	(??_normal_updater+1)& (0+255),f,b
  7028  0039B0  C098  F0BC         	movff	??_normal_updater,_end_sec
  7029  0039B4  C099  F0BD         	movff	??_normal_updater+1,_end_sec+1
  7030  0039B8  0E00               	movlw	0
  7031  0039BA  BFBD               	btfsc	(_end_sec+1)& (0+255),7,b
  7032  0039BC  0EFF               	movlw	-1
  7033  0039BE  6FBE               	movwf	(_end_sec+2)& (0+255),b
  7034  0039C0  6FBF               	movwf	(_end_sec+3)& (0+255),b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;main.c: 151: operation_sec = end_sec - start_sec;
  7038  0039C2  51C0               	movf	_start_sec& (0+255),w,b
  7039  0039C4  5DBC               	subwf	_end_sec& (0+255),w,b
  7040  0039C6  6FB8               	movwf	_operation_sec& (0+255),b
  7041  0039C8  51C1               	movf	(_start_sec+1)& (0+255),w,b
  7042  0039CA  59BD               	subwfb	(_end_sec+1)& (0+255),w,b
  7043  0039CC  6FB9               	movwf	(_operation_sec+1)& (0+255),b
  7044  0039CE  51C2               	movf	(_start_sec+2)& (0+255),w,b
  7045  0039D0  59BE               	subwfb	(_end_sec+2)& (0+255),w,b
  7046  0039D2  6FBA               	movwf	(_operation_sec+2)& (0+255),b
  7047  0039D4  51C3               	movf	(_start_sec+3)& (0+255),w,b
  7048  0039D6  59BF               	subwfb	(_end_sec+3)& (0+255),w,b
  7049  0039D8  6FBB               	movwf	(_operation_sec+3)& (0+255),b
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;main.c: 152: operation_time[2] = operation_sec/3600;
  7053  0039DA  C0B8  F08A         	movff	_operation_sec,___aldiv@dividend
  7054  0039DE  C0B9  F08B         	movff	_operation_sec+1,___aldiv@dividend+1
  7055  0039E2  C0BA  F08C         	movff	_operation_sec+2,___aldiv@dividend+2
  7056  0039E6  C0BB  F08D         	movff	_operation_sec+3,___aldiv@dividend+3
  7057  0039EA  0E10               	movlw	16
  7058  0039EC  6F8E               	movwf	___aldiv@divisor& (0+255),b
  7059  0039EE  0E0E               	movlw	14
  7060  0039F0  6F8F               	movwf	(___aldiv@divisor+1)& (0+255),b
  7061  0039F2  0E00               	movlw	0
  7062  0039F4  6F90               	movwf	(___aldiv@divisor+2)& (0+255),b
  7063  0039F6  0E00               	movlw	0
  7064  0039F8  6F91               	movwf	(___aldiv@divisor+3)& (0+255),b
  7065  0039FA  EC5F  F01E         	call	___aldiv	;wreg free
  7066  0039FE  0100               	movlb	0	; () banked
  7067  003A00  518A               	movf	?___aldiv& (0+255),w,b
  7068  003A02  6FF9               	movwf	(_operation_time+2)& (0+255),b
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;main.c: 153: operation_time[1] = (operation_sec%3600)/60;
  7072  003A04  0E10               	movlw	16
  7073  003A06  6F84               	movwf	___almod@divisor& (0+255),b
  7074  003A08  0E0E               	movlw	14
  7075  003A0A  6F85               	movwf	(___almod@divisor+1)& (0+255),b
  7076  003A0C  0E00               	movlw	0
  7077  003A0E  6F86               	movwf	(___almod@divisor+2)& (0+255),b
  7078  003A10  0E00               	movlw	0
  7079  003A12  6F87               	movwf	(___almod@divisor+3)& (0+255),b
  7080  003A14  C0B8  F080         	movff	_operation_sec,___almod@dividend
  7081  003A18  C0B9  F081         	movff	_operation_sec+1,___almod@dividend+1
  7082  003A1C  C0BA  F082         	movff	_operation_sec+2,___almod@dividend+2
  7083  003A20  C0BB  F083         	movff	_operation_sec+3,___almod@dividend+3
  7084  003A24  EC8A  F01F         	call	___almod	;wreg free
  7085  003A28  C080  F08A         	movff	?___almod,___aldiv@dividend
  7086  003A2C  C081  F08B         	movff	?___almod+1,___aldiv@dividend+1
  7087  003A30  C082  F08C         	movff	?___almod+2,___aldiv@dividend+2
  7088  003A34  C083  F08D         	movff	?___almod+3,___aldiv@dividend+3
  7089  003A38  0E3C               	movlw	60
  7090  003A3A  0100               	movlb	0	; () banked
  7091  003A3C  6F8E               	movwf	___aldiv@divisor& (0+255),b
  7092  003A3E  0E00               	movlw	0
  7093  003A40  6F8F               	movwf	(___aldiv@divisor+1)& (0+255),b
  7094  003A42  0E00               	movlw	0
  7095  003A44  6F90               	movwf	(___aldiv@divisor+2)& (0+255),b
  7096  003A46  0E00               	movlw	0
  7097  003A48  6F91               	movwf	(___aldiv@divisor+3)& (0+255),b
  7098  003A4A  EC5F  F01E         	call	___aldiv	;wreg free
  7099  003A4E  0100               	movlb	0	; () banked
  7100  003A50  518A               	movf	?___aldiv& (0+255),w,b
  7101  003A52  6FF8               	movwf	(_operation_time+1)& (0+255),b
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;main.c: 154: operation_time[0] = (operation_sec%3600)%60;
  7105  003A54  0E10               	movlw	16
  7106  003A56  6F84               	movwf	___almod@divisor& (0+255),b
  7107  003A58  0E0E               	movlw	14
  7108  003A5A  6F85               	movwf	(___almod@divisor+1)& (0+255),b
  7109  003A5C  0E00               	movlw	0
  7110  003A5E  6F86               	movwf	(___almod@divisor+2)& (0+255),b
  7111  003A60  0E00               	movlw	0
  7112  003A62  6F87               	movwf	(___almod@divisor+3)& (0+255),b
  7113  003A64  C0B8  F080         	movff	_operation_sec,___almod@dividend
  7114  003A68  C0B9  F081         	movff	_operation_sec+1,___almod@dividend+1
  7115  003A6C  C0BA  F082         	movff	_operation_sec+2,___almod@dividend+2
  7116  003A70  C0BB  F083         	movff	_operation_sec+3,___almod@dividend+3
  7117  003A74  EC8A  F01F         	call	___almod	;wreg free
  7118  003A78  C080  F09A         	movff	?___almod,_normal_updater$2719
  7119  003A7C  C081  F09B         	movff	?___almod+1,_normal_updater$2719+1
  7120  003A80  C082  F09C         	movff	?___almod+2,_normal_updater$2719+2
  7121  003A84  C083  F09D         	movff	?___almod+3,_normal_updater$2719+3
  7122                           
  7123                           ;main.c: 154: operation_time[0] = (operation_sec%3600)%60;
  7124  003A88  C09A  F080         	movff	_normal_updater$2719,___almod@dividend
  7125  003A8C  C09B  F081         	movff	_normal_updater$2719+1,___almod@dividend+1
  7126  003A90  C09C  F082         	movff	_normal_updater$2719+2,___almod@dividend+2
  7127  003A94  C09D  F083         	movff	_normal_updater$2719+3,___almod@dividend+3
  7128  003A98  0E3C               	movlw	60
  7129  003A9A  0100               	movlb	0	; () banked
  7130  003A9C  6F84               	movwf	___almod@divisor& (0+255),b
  7131  003A9E  0E00               	movlw	0
  7132  003AA0  6F85               	movwf	(___almod@divisor+1)& (0+255),b
  7133  003AA2  0E00               	movlw	0
  7134  003AA4  6F86               	movwf	(___almod@divisor+2)& (0+255),b
  7135  003AA6  0E00               	movlw	0
  7136  003AA8  6F87               	movwf	(___almod@divisor+3)& (0+255),b
  7137  003AAA  EC8A  F01F         	call	___almod	;wreg free
  7138  003AAE  0100               	movlb	0	; () banked
  7139  003AB0  5180               	movf	?___almod& (0+255),w,b
  7140  003AB2  6FF7               	movwf	_operation_time& (0+255),b
  7141                           
  7142                           ; BSR set to: 0
  7143  003AB4  0012               	return		;funcret
  7144  003AB6                     __end_of_normal_updater:
  7145                           	opt callstack 0
  7146                           
  7147 ;; *************** function _initmoving_disp *****************
  7148 ;; Defined at:
  7149 ;;		line 342 in file "display.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;		None
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;		None
  7154 ;; Return value:  Size  Location     Type
  7155 ;;                  1    wreg      void 
  7156 ;; Registers used:
  7157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7158 ;; Tracked objects:
  7159 ;;		On entry : 0/0
  7160 ;;		On exit  : 0/0
  7161 ;;		Unchanged: 0/0
  7162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7165 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7166 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7167 ;;Total ram usage:        1 bytes
  7168 ;; Hardware stack levels used:    1
  7169 ;; Hardware stack levels required when called:   13
  7170 ;; This function calls:
  7171 ;;		_lcdInst
  7172 ;;		_printf
  7173 ;; This function is called by:
  7174 ;;		_main
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text24
  7179  00528A                     __ptext24:
  7180                           	opt callstack 0
  7181  00528A                     _initmoving_disp:
  7182                           	opt callstack 17
  7183                           
  7184                           ;display.c: 343: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  7185                           
  7186                           ; BSR set to: 0
  7187                           ;incstack = 0
  7188  00528A  0E01               	movlw	1
  7189  00528C  EC9A  F02A         	call	_lcdInst
  7190  005290  0E11               	movlw	17
  7191  005292  0100               	movlb	0	; () banked
  7192  005294  6FA3               	movwf	??_initmoving_disp& (0+255),b
  7193  005296  0E3A               	movlw	58
  7194  005298                     u13047:
  7195  005298  2EE8               	decfsz	wreg,f,c
  7196  00529A  D7FE               	bra	u13047
  7197  00529C  2FA3               	decfsz	??_initmoving_disp& (0+255),f,b
  7198  00529E  D7FC               	bra	u13047
  7199  0052A0  F000               	nop	
  7200                           
  7201                           ;display.c: 344: printf("Running");
  7202  0052A2  0ECF               	movlw	low STR_73
  7203  0052A4  0100               	movlb	0	; () banked
  7204  0052A6  6F8E               	movwf	printf@f& (0+255),b
  7205  0052A8  0EFF               	movlw	high STR_73
  7206  0052AA  6F8F               	movwf	(printf@f+1)& (0+255),b
  7207  0052AC  EC81  F010         	call	_printf	;wreg free
  7208  0052B0  0012               	return		;funcret
  7209  0052B2                     __end_of_initmoving_disp:
  7210                           	opt callstack 0
  7211                           
  7212 ;; *************** function _initLCD *****************
  7213 ;; Defined at:
  7214 ;;		line 61 in file "lcd.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;		None
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;		None
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7230 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7231 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7232 ;;Total ram usage:        1 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:   12
  7235 ;; This function calls:
  7236 ;;		_lcdInst
  7237 ;;		_send_byte
  7238 ;;		_send_nibble
  7239 ;; This function is called by:
  7240 ;;		_main
  7241 ;; This function uses a non-reentrant model
  7242 ;;
  7243                           
  7244                           	psect	text25
  7245  004970                     __ptext25:
  7246                           	opt callstack 0
  7247  004970                     _initLCD:
  7248                           	opt callstack 18
  7249                           
  7250                           ;lcd.c: 62: _delay((unsigned long)((15)*(10000000/4000.0)));
  7251                           
  7252                           ;incstack = 0
  7253  004970  0E31               	movlw	49
  7254  004972  0100               	movlb	0	; () banked
  7255  004974  6F84               	movwf	??_initLCD& (0+255),b
  7256  004976  0EB2               	movlw	178
  7257  004978                     u13057:
  7258  004978  2EE8               	decfsz	wreg,f,c
  7259  00497A  D7FE               	bra	u13057
  7260  00497C  2F84               	decfsz	??_initLCD& (0+255),f,b
  7261  00497E  D7FC               	bra	u13057
  7262  004980  F000               	nop	
  7263                           
  7264                           ;lcd.c: 64: LATDbits.LATD2 = 0;
  7265  004982  948C               	bcf	3980,2,c	;volatile
  7266                           
  7267                           ;lcd.c: 66: send_nibble(0b0011);
  7268  004984  0E03               	movlw	3
  7269  004986  EC39  F02A         	call	_send_nibble
  7270                           
  7271                           ;lcd.c: 67: _delay((unsigned long)((5)*(10000000/4000.0)));
  7272  00498A  0E11               	movlw	17
  7273  00498C  0100               	movlb	0	; () banked
  7274  00498E  6F84               	movwf	??_initLCD& (0+255),b
  7275  004990  0E3A               	movlw	58
  7276  004992                     u13067:
  7277  004992  2EE8               	decfsz	wreg,f,c
  7278  004994  D7FE               	bra	u13067
  7279  004996  2F84               	decfsz	??_initLCD& (0+255),f,b
  7280  004998  D7FC               	bra	u13067
  7281  00499A  F000               	nop	
  7282                           
  7283                           ;lcd.c: 68: send_nibble(0b0011);
  7284  00499C  0E03               	movlw	3
  7285  00499E  EC39  F02A         	call	_send_nibble
  7286                           
  7287                           ;lcd.c: 69: _delay((unsigned long)((150)*(10000000/4000000.0)));
  7288  0049A2  0E7D               	movlw	125
  7289  0049A4                     u13077:
  7290  0049A4  2EE8               	decfsz	wreg,f,c
  7291  0049A6  D7FE               	bra	u13077
  7292                           
  7293                           ;lcd.c: 70: send_byte(0b00110010);
  7294  0049A8  0E32               	movlw	50
  7295  0049AA  EC46  F02A         	call	_send_byte
  7296                           
  7297                           ;lcd.c: 72: send_byte(0b00101000);
  7298  0049AE  0E28               	movlw	40
  7299  0049B0  EC46  F02A         	call	_send_byte
  7300                           
  7301                           ;lcd.c: 73: send_byte(0b00001000);
  7302  0049B4  0E08               	movlw	8
  7303  0049B6  EC46  F02A         	call	_send_byte
  7304                           
  7305                           ;lcd.c: 74: send_byte(0b00000001);
  7306  0049BA  0E01               	movlw	1
  7307  0049BC  EC46  F02A         	call	_send_byte
  7308                           
  7309                           ;lcd.c: 75: _delay((unsigned long)((5)*(10000000/4000.0)));
  7310  0049C0  0E11               	movlw	17
  7311  0049C2  0100               	movlb	0	; () banked
  7312  0049C4  6F84               	movwf	??_initLCD& (0+255),b
  7313  0049C6  0E3A               	movlw	58
  7314  0049C8                     u13087:
  7315  0049C8  2EE8               	decfsz	wreg,f,c
  7316  0049CA  D7FE               	bra	u13087
  7317  0049CC  2F84               	decfsz	??_initLCD& (0+255),f,b
  7318  0049CE  D7FC               	bra	u13087
  7319  0049D0  F000               	nop	
  7320                           
  7321                           ;lcd.c: 76: send_byte(0b00000110);
  7322  0049D2  0E06               	movlw	6
  7323  0049D4  EC46  F02A         	call	_send_byte
  7324                           
  7325                           ;lcd.c: 79: { lcdInst( (unsigned char)(8 | (1 << 2) | (1 << 1) | 1) );};
  7326  0049D8  0E0F               	movlw	15
  7327  0049DA  EC9A  F02A         	call	_lcdInst
  7328  0049DE  0012               	return		;funcret
  7329  0049E0                     __end_of_initLCD:
  7330                           	opt callstack 0
  7331                           
  7332 ;; *************** function _drop_function *****************
  7333 ;; Defined at:
  7334 ;;		line 13 in file "dispense.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      void 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7350 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7351 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7352 ;;Total ram usage:        2 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:   15
  7355 ;; This function calls:
  7356 ;;		_hole_dispense_function
  7357 ;;		_left_crack_drop
  7358 ;;		_middle_crack_drop
  7359 ;;		_right_crack_drop
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text26
  7366  0041B4                     __ptext26:
  7367                           	opt callstack 0
  7368  0041B4                     _drop_function:
  7369                           	opt callstack 15
  7370                           
  7371                           ;dispense.c: 14: if (planB <2){
  7372                           
  7373                           ;incstack = 0
  7374  0041B4  0100               	movlb	0	; () banked
  7375  0041B6  BFCD               	btfsc	(_planB+1)& (0+255),7,b
  7376  0041B8  D006               	goto	u11900
  7377  0041BA  51CD               	movf	(_planB+1)& (0+255),w,b
  7378  0041BC  E143               	bnz	l11936
  7379  0041BE  0E02               	movlw	2
  7380  0041C0  5DCC               	subwf	_planB& (0+255),w,b
  7381  0041C2  B0D8               	btfsc	status,0,c
  7382  0041C4  D03F               	goto	u11940
  7383  0041C6                     u11900:
  7384                           
  7385                           ; BSR set to: 0
  7386                           ;dispense.c: 15: if (drop_identity[drop_index] == 1){
  7387  0041C6  90D8               	bcf	status,0,c
  7388  0041C8  35D8               	rlcf	_drop_index& (0+255),w,b
  7389  0041CA  6ED9               	movwf	fsr2l,c
  7390  0041CC  35D9               	rlcf	(_drop_index+1)& (0+255),w,b
  7391  0041CE  6EDA               	movwf	fsr2h,c
  7392  0041D0  0E60               	movlw	low _drop_identity
  7393  0041D2  26D9               	addwf	fsr2l,f,c
  7394  0041D4  0E01               	movlw	high _drop_identity
  7395  0041D6  22DA               	addwfc	fsr2h,f,c
  7396  0041D8  04DE               	decf	postinc2,w,c
  7397  0041DA  10DE               	iorwf	postinc2,w,c
  7398  0041DC  A4D8               	btfss	status,2,c
  7399  0041DE  D003               	goto	l11926
  7400                           
  7401                           ; BSR set to: 0
  7402                           ;dispense.c: 16: left_crack_drop();
  7403  0041E0  ECF0  F015         	call	_left_crack_drop	;wreg free
  7404                           
  7405                           ;dispense.c: 17: }
  7406  0041E4  D031               	goto	l811
  7407  0041E6                     l11926:
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;dispense.c: 18: else if(drop_identity[drop_index] == 2){
  7411  0041E6  90D8               	bcf	status,0,c
  7412  0041E8  35D8               	rlcf	_drop_index& (0+255),w,b
  7413  0041EA  6ED9               	movwf	fsr2l,c
  7414  0041EC  35D9               	rlcf	(_drop_index+1)& (0+255),w,b
  7415  0041EE  6EDA               	movwf	fsr2h,c
  7416  0041F0  0E60               	movlw	low _drop_identity
  7417  0041F2  26D9               	addwf	fsr2l,f,c
  7418  0041F4  0E01               	movlw	high _drop_identity
  7419  0041F6  22DA               	addwfc	fsr2h,f,c
  7420  0041F8  0E02               	movlw	2
  7421  0041FA  18DE               	xorwf	postinc2,w,c
  7422  0041FC  10DE               	iorwf	postinc2,w,c
  7423  0041FE  A4D8               	btfss	status,2,c
  7424  004200  D003               	goto	l11930
  7425                           
  7426                           ; BSR set to: 0
  7427                           ;dispense.c: 19: middle_crack_drop();
  7428  004202  ECEA  F014         	call	_middle_crack_drop	;wreg free
  7429                           
  7430                           ;dispense.c: 20: }
  7431  004206  D020               	goto	l811
  7432  004208                     l11930:
  7433                           
  7434                           ; BSR set to: 0
  7435                           ;dispense.c: 21: else if(drop_identity[drop_index] == 3){
  7436  004208  90D8               	bcf	status,0,c
  7437  00420A  35D8               	rlcf	_drop_index& (0+255),w,b
  7438  00420C  6ED9               	movwf	fsr2l,c
  7439  00420E  35D9               	rlcf	(_drop_index+1)& (0+255),w,b
  7440  004210  6EDA               	movwf	fsr2h,c
  7441  004212  0E60               	movlw	low _drop_identity
  7442  004214  26D9               	addwf	fsr2l,f,c
  7443  004216  0E01               	movlw	high _drop_identity
  7444  004218  22DA               	addwfc	fsr2h,f,c
  7445  00421A  0E03               	movlw	3
  7446  00421C  18DE               	xorwf	postinc2,w,c
  7447  00421E  10DE               	iorwf	postinc2,w,c
  7448  004220  A4D8               	btfss	status,2,c
  7449  004222  D003               	goto	l11934
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;dispense.c: 22: right_crack_drop();
  7453  004224  ECE4  F013         	call	_right_crack_drop	;wreg free
  7454                           
  7455                           ;dispense.c: 23: }
  7456  004228  D00F               	goto	l811
  7457  00422A                     l11934:
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;dispense.c: 24: else if(drop_identity[drop_index] == 4){
  7461  00422A  90D8               	bcf	status,0,c
  7462  00422C  35D8               	rlcf	_drop_index& (0+255),w,b
  7463  00422E  6ED9               	movwf	fsr2l,c
  7464  004230  35D9               	rlcf	(_drop_index+1)& (0+255),w,b
  7465  004232  6EDA               	movwf	fsr2h,c
  7466  004234  0E60               	movlw	low _drop_identity
  7467  004236  26D9               	addwf	fsr2l,f,c
  7468  004238  0E01               	movlw	high _drop_identity
  7469  00423A  22DA               	addwfc	fsr2h,f,c
  7470  00423C  0E04               	movlw	4
  7471  00423E  18DE               	xorwf	postinc2,w,c
  7472  004240  10DE               	iorwf	postinc2,w,c
  7473  004242  B4D8               	btfsc	status,2,c
  7474  004244                     u11940:
  7475  004244                     l11936:
  7476                           
  7477                           ; BSR set to: 0
  7478                           ;dispense.c: 25: hole_dispense_function();
  7479  004244  ECD1  F005         	call	_hole_dispense_function	;wreg free
  7480  004248                     l811:
  7481                           
  7482                           ;dispense.c: 30: };dispense.c: 31: drop_index+=1;
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;dispense.c: 26: };dispense.c: 27: }
  7486  004248  0100               	movlb	0	; () banked
  7487  00424A  4BD8               	infsnz	_drop_index& (0+255),f,b
  7488  00424C  2BD9               	incf	(_drop_index+1)& (0+255),f,b
  7489                           
  7490                           ; BSR set to: 0
  7491  00424E  0012               	return		;funcret
  7492  004250                     __end_of_drop_function:
  7493                           	opt callstack 0
  7494                           
  7495 ;; *************** function _right_crack_drop *****************
  7496 ;; Defined at:
  7497 ;;		line 230 in file "dispense.c"
  7498 ;; Parameters:    Size  Location     Type
  7499 ;;		None
  7500 ;; Auto vars:     Size  Location     Type
  7501 ;;  B               4   45[BANK0 ] float 
  7502 ;;  A               4   41[BANK0 ] float 
  7503 ;; Return value:  Size  Location     Type
  7504 ;;                  1    wreg      void 
  7505 ;; Registers used:
  7506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7507 ;; Tracked objects:
  7508 ;;		On entry : 0/0
  7509 ;;		On exit  : 0/0
  7510 ;;		Unchanged: 0/0
  7511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7513 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;Total ram usage:        8 bytes
  7517 ;; Hardware stack levels used:    1
  7518 ;; Hardware stack levels required when called:   14
  7519 ;; This function calls:
  7520 ;;		_L_I
  7521 ;;		_R_I
  7522 ;;		_Stop
  7523 ;;		___flge
  7524 ;;		___flsub
  7525 ;;		_hole_dispense_function
  7526 ;; This function is called by:
  7527 ;;		_drop_function
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text27
  7532  0027C8                     __ptext27:
  7533                           	opt callstack 0
  7534  0027C8                     _right_crack_drop:
  7535                           	opt callstack 15
  7536                           
  7537                           ;dispense.c: 231: turns_counter =0;
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;incstack = 0
  7541  0027C8  0E00               	movlw	0
  7542  0027CA  0100               	movlb	0	; () banked
  7543  0027CC  6FC8               	movwf	_turns_counter& (0+255),b
  7544  0027CE  0E00               	movlw	0
  7545  0027D0  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  7546  0027D2  0E00               	movlw	0
  7547  0027D4  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  7548  0027D6  0E00               	movlw	0
  7549  0027D8  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  7550                           
  7551                           ;dispense.c: 232: rotary_counter = 0;
  7552  0027DA  0E00               	movlw	0
  7553  0027DC  6E40               	movwf	_rotary_counter,c
  7554  0027DE  0E00               	movlw	0
  7555  0027E0  6E41               	movwf	_rotary_counter+1,c
  7556  0027E2  0E00               	movlw	0
  7557  0027E4  6E42               	movwf	_rotary_counter+2,c
  7558  0027E6  0E00               	movlw	0
  7559  0027E8  6E43               	movwf	_rotary_counter+3,c
  7560                           
  7561                           ; BSR set to: 0
  7562                           ;dispense.c: 233: float A = turns_counter;
  7563  0027EA  C0C8  F0A9         	movff	_turns_counter,right_crack_drop@A
  7564  0027EE  C0C9  F0AA         	movff	_turns_counter+1,right_crack_drop@A+1
  7565  0027F2  C0CA  F0AB         	movff	_turns_counter+2,right_crack_drop@A+2
  7566  0027F6  C0CB  F0AC         	movff	_turns_counter+3,right_crack_drop@A+3
  7567  0027FA                     l11348:
  7568                           
  7569                           ;dispense.c: 234: float B = turns_counter;
  7570  0027FA  C0C8  F0AD         	movff	_turns_counter,right_crack_drop@B
  7571  0027FE  C0C9  F0AE         	movff	_turns_counter+1,right_crack_drop@B+1
  7572  002802  C0CA  F0AF         	movff	_turns_counter+2,right_crack_drop@B+2
  7573  002806  C0CB  F0B0         	movff	_turns_counter+3,right_crack_drop@B+3
  7574                           
  7575                           ;dispense.c: 236: while((B - A) < lc_R){
  7576  00280A  D003               	goto	l11354
  7577  00280C                     l11350:
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;dispense.c: 237: L_I();
  7581  00280C  EC90  F028         	call	_L_I	;wreg free
  7582  002810  D7F4               	goto	l11348
  7583  002812                     l11354:
  7584  002812  C0A9  F094         	movff	right_crack_drop@A,___flsub@a
  7585  002816  C0AA  F095         	movff	right_crack_drop@A+1,___flsub@a+1
  7586  00281A  C0AB  F096         	movff	right_crack_drop@A+2,___flsub@a+2
  7587  00281E  C0AC  F097         	movff	right_crack_drop@A+3,___flsub@a+3
  7588  002822  C0AD  F090         	movff	right_crack_drop@B,___flsub@b
  7589  002826  C0AE  F091         	movff	right_crack_drop@B+1,___flsub@b+1
  7590  00282A  C0AF  F092         	movff	right_crack_drop@B+2,___flsub@b+2
  7591  00282E  C0B0  F093         	movff	right_crack_drop@B+3,___flsub@b+3
  7592  002832  EC29  F028         	call	___flsub	;wreg free
  7593  002836  C090  F098         	movff	?___flsub,___flge@ff1
  7594  00283A  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  7595  00283E  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  7596  002842  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  7597  002846  0ECD               	movlw	205
  7598  002848  0100               	movlb	0	; () banked
  7599  00284A  6F9C               	movwf	___flge@ff2& (0+255),b
  7600  00284C  0ECC               	movlw	204
  7601  00284E  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  7602  002850  0ECC               	movlw	204
  7603  002852  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  7604  002854  0E3D               	movlw	61
  7605  002856  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  7606  002858  ECF6  F01D         	call	___flge	;wreg free
  7607  00285C  0100               	movlb	0	; () banked
  7608  00285E  A0D8               	btfss	status,0,c
  7609  002860  D7D5               	goto	l11350
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;dispense.c: 239: };dispense.c: 240: Stop();
  7613  002862  ECAA  F02A         	call	_Stop	;wreg free
  7614                           
  7615                           ;dispense.c: 241: hole_dispense_function();
  7616  002866  ECD1  F005         	call	_hole_dispense_function	;wreg free
  7617                           
  7618                           ;dispense.c: 243: turns_counter =0;
  7619  00286A  0E00               	movlw	0
  7620  00286C  0100               	movlb	0	; () banked
  7621  00286E  6FC8               	movwf	_turns_counter& (0+255),b
  7622  002870  0E00               	movlw	0
  7623  002872  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  7624  002874  0E00               	movlw	0
  7625  002876  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  7626  002878  0E00               	movlw	0
  7627  00287A  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;dispense.c: 244: rotary_counter = 0;
  7631  00287C  0E00               	movlw	0
  7632  00287E  6E40               	movwf	_rotary_counter,c
  7633  002880  0E00               	movlw	0
  7634  002882  6E41               	movwf	_rotary_counter+1,c
  7635  002884  0E00               	movlw	0
  7636  002886  6E42               	movwf	_rotary_counter+2,c
  7637  002888  0E00               	movlw	0
  7638  00288A  6E43               	movwf	_rotary_counter+3,c
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;dispense.c: 245: A = turns_counter;
  7642  00288C  C0C8  F0A9         	movff	_turns_counter,right_crack_drop@A
  7643  002890  C0C9  F0AA         	movff	_turns_counter+1,right_crack_drop@A+1
  7644  002894  C0CA  F0AB         	movff	_turns_counter+2,right_crack_drop@A+2
  7645  002898  C0CB  F0AC         	movff	_turns_counter+3,right_crack_drop@A+3
  7646  00289C                     l11366:
  7647                           
  7648                           ;dispense.c: 246: B = turns_counter;
  7649  00289C  C0C8  F0AD         	movff	_turns_counter,right_crack_drop@B
  7650  0028A0  C0C9  F0AE         	movff	_turns_counter+1,right_crack_drop@B+1
  7651  0028A4  C0CA  F0AF         	movff	_turns_counter+2,right_crack_drop@B+2
  7652  0028A8  C0CB  F0B0         	movff	_turns_counter+3,right_crack_drop@B+3
  7653                           
  7654                           ;dispense.c: 248: while((B - A) < car_width){
  7655  0028AC  D003               	goto	l11372
  7656  0028AE                     l11368:
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;dispense.c: 249: R_I();
  7660  0028AE  EC42  F027         	call	_R_I	;wreg free
  7661  0028B2  D7F4               	goto	l11366
  7662  0028B4                     l11372:
  7663  0028B4  C0A9  F094         	movff	right_crack_drop@A,___flsub@a
  7664  0028B8  C0AA  F095         	movff	right_crack_drop@A+1,___flsub@a+1
  7665  0028BC  C0AB  F096         	movff	right_crack_drop@A+2,___flsub@a+2
  7666  0028C0  C0AC  F097         	movff	right_crack_drop@A+3,___flsub@a+3
  7667  0028C4  C0AD  F090         	movff	right_crack_drop@B,___flsub@b
  7668  0028C8  C0AE  F091         	movff	right_crack_drop@B+1,___flsub@b+1
  7669  0028CC  C0AF  F092         	movff	right_crack_drop@B+2,___flsub@b+2
  7670  0028D0  C0B0  F093         	movff	right_crack_drop@B+3,___flsub@b+3
  7671  0028D4  EC29  F028         	call	___flsub	;wreg free
  7672  0028D8  C090  F098         	movff	?___flsub,___flge@ff1
  7673  0028DC  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  7674  0028E0  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  7675  0028E4  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  7676  0028E8  0E66               	movlw	102
  7677  0028EA  0100               	movlb	0	; () banked
  7678  0028EC  6F9C               	movwf	___flge@ff2& (0+255),b
  7679  0028EE  0E66               	movlw	102
  7680  0028F0  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  7681  0028F2  0EE6               	movlw	230
  7682  0028F4  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  7683  0028F6  0E3E               	movlw	62
  7684  0028F8  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  7685  0028FA  ECF6  F01D         	call	___flge	;wreg free
  7686  0028FE  0100               	movlb	0	; () banked
  7687  002900  A0D8               	btfss	status,0,c
  7688  002902  D7D5               	goto	l11368
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;dispense.c: 251: };dispense.c: 252: Stop();
  7692  002904  ECAA  F02A         	call	_Stop	;wreg free
  7693                           
  7694                           ;dispense.c: 253: if(no_cone == 0){
  7695  002908  0100               	movlb	0	; () banked
  7696  00290A  51E6               	movf	_no_cone& (0+255),w,b
  7697  00290C  B4D8               	btfsc	status,2,c
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;dispense.c: 254: hole_dispense_function();}
  7701  00290E  ECD1  F005         	call	_hole_dispense_function	;wreg free
  7702                           
  7703                           ;dispense.c: 256: turns_counter =0;
  7704  002912  0E00               	movlw	0
  7705  002914  0100               	movlb	0	; () banked
  7706  002916  6FC8               	movwf	_turns_counter& (0+255),b
  7707  002918  0E00               	movlw	0
  7708  00291A  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  7709  00291C  0E00               	movlw	0
  7710  00291E  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  7711  002920  0E00               	movlw	0
  7712  002922  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  7713                           
  7714                           ; BSR set to: 0
  7715                           ;dispense.c: 257: rotary_counter = 0;
  7716  002924  0E00               	movlw	0
  7717  002926  6E40               	movwf	_rotary_counter,c
  7718  002928  0E00               	movlw	0
  7719  00292A  6E41               	movwf	_rotary_counter+1,c
  7720  00292C  0E00               	movlw	0
  7721  00292E  6E42               	movwf	_rotary_counter+2,c
  7722  002930  0E00               	movlw	0
  7723  002932  6E43               	movwf	_rotary_counter+3,c
  7724                           
  7725                           ; BSR set to: 0
  7726                           ;dispense.c: 258: A = turns_counter;
  7727  002934  C0C8  F0A9         	movff	_turns_counter,right_crack_drop@A
  7728  002938  C0C9  F0AA         	movff	_turns_counter+1,right_crack_drop@A+1
  7729  00293C  C0CA  F0AB         	movff	_turns_counter+2,right_crack_drop@A+2
  7730  002940  C0CB  F0AC         	movff	_turns_counter+3,right_crack_drop@A+3
  7731  002944                     l11386:
  7732                           
  7733                           ;dispense.c: 259: B = turns_counter;
  7734  002944  C0C8  F0AD         	movff	_turns_counter,right_crack_drop@B
  7735  002948  C0C9  F0AE         	movff	_turns_counter+1,right_crack_drop@B+1
  7736  00294C  C0CA  F0AF         	movff	_turns_counter+2,right_crack_drop@B+2
  7737  002950  C0CB  F0B0         	movff	_turns_counter+3,right_crack_drop@B+3
  7738                           
  7739                           ;dispense.c: 261: while((B - A) < car_width - lc_R){
  7740  002954  D003               	goto	l11392
  7741  002956                     l11388:
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;dispense.c: 262: L_I();
  7745  002956  EC90  F028         	call	_L_I	;wreg free
  7746  00295A  D7F4               	goto	l11386
  7747  00295C                     l11392:
  7748  00295C  C0A9  F094         	movff	right_crack_drop@A,___flsub@a
  7749  002960  C0AA  F095         	movff	right_crack_drop@A+1,___flsub@a+1
  7750  002964  C0AB  F096         	movff	right_crack_drop@A+2,___flsub@a+2
  7751  002968  C0AC  F097         	movff	right_crack_drop@A+3,___flsub@a+3
  7752  00296C  C0AD  F090         	movff	right_crack_drop@B,___flsub@b
  7753  002970  C0AE  F091         	movff	right_crack_drop@B+1,___flsub@b+1
  7754  002974  C0AF  F092         	movff	right_crack_drop@B+2,___flsub@b+2
  7755  002978  C0B0  F093         	movff	right_crack_drop@B+3,___flsub@b+3
  7756  00297C  EC29  F028         	call	___flsub	;wreg free
  7757  002980  C090  F098         	movff	?___flsub,___flge@ff1
  7758  002984  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  7759  002988  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  7760  00298C  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  7761  002990  0E33               	movlw	51
  7762  002992  0100               	movlb	0	; () banked
  7763  002994  6F9C               	movwf	___flge@ff2& (0+255),b
  7764  002996  0E33               	movlw	51
  7765  002998  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  7766  00299A  0EB3               	movlw	179
  7767  00299C  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  7768  00299E  0E3E               	movlw	62
  7769  0029A0  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  7770  0029A2  ECF6  F01D         	call	___flge	;wreg free
  7771  0029A6  0100               	movlb	0	; () banked
  7772  0029A8  A0D8               	btfss	status,0,c
  7773  0029AA  D7D5               	goto	l11388
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;dispense.c: 264: };dispense.c: 265: Stop();
  7777  0029AC  ECAA  F02A         	call	_Stop	;wreg free
  7778                           
  7779                           ;dispense.c: 266: turns_counter =0;
  7780  0029B0  0E00               	movlw	0
  7781  0029B2  0100               	movlb	0	; () banked
  7782  0029B4  6FC8               	movwf	_turns_counter& (0+255),b
  7783  0029B6  0E00               	movlw	0
  7784  0029B8  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  7785  0029BA  0E00               	movlw	0
  7786  0029BC  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  7787  0029BE  0E00               	movlw	0
  7788  0029C0  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;dispense.c: 267: rotary_counter = 0;
  7792  0029C2  0E00               	movlw	0
  7793  0029C4  6E40               	movwf	_rotary_counter,c
  7794  0029C6  0E00               	movlw	0
  7795  0029C8  6E41               	movwf	_rotary_counter+1,c
  7796  0029CA  0E00               	movlw	0
  7797  0029CC  6E42               	movwf	_rotary_counter+2,c
  7798  0029CE  0E00               	movlw	0
  7799  0029D0  6E43               	movwf	_rotary_counter+3,c
  7800                           
  7801                           ; BSR set to: 0
  7802  0029D2  0012               	return		;funcret
  7803  0029D4                     __end_of_right_crack_drop:
  7804                           	opt callstack 0
  7805                           
  7806 ;; *************** function _middle_crack_drop *****************
  7807 ;; Defined at:
  7808 ;;		line 148 in file "dispense.c"
  7809 ;; Parameters:    Size  Location     Type
  7810 ;;		None
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  B               4   45[BANK0 ] float 
  7813 ;;  A               4   41[BANK0 ] float 
  7814 ;; Return value:  Size  Location     Type
  7815 ;;                  1    wreg      void 
  7816 ;; Registers used:
  7817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7818 ;; Tracked objects:
  7819 ;;		On entry : 0/0
  7820 ;;		On exit  : 0/0
  7821 ;;		Unchanged: 0/0
  7822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7824 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7826 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7827 ;;Total ram usage:        8 bytes
  7828 ;; Hardware stack levels used:    1
  7829 ;; Hardware stack levels required when called:   14
  7830 ;; This function calls:
  7831 ;;		_L_I
  7832 ;;		_R_I
  7833 ;;		_Stop
  7834 ;;		___flge
  7835 ;;		___flsub
  7836 ;;		_hole_dispense_function
  7837 ;; This function is called by:
  7838 ;;		_drop_function
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text28
  7843  0029D4                     __ptext28:
  7844                           	opt callstack 0
  7845  0029D4                     _middle_crack_drop:
  7846                           	opt callstack 15
  7847                           
  7848                           ;dispense.c: 149: turns_counter =0;
  7849                           
  7850                           ; BSR set to: 0
  7851                           ;incstack = 0
  7852  0029D4  0E00               	movlw	0
  7853  0029D6  0100               	movlb	0	; () banked
  7854  0029D8  6FC8               	movwf	_turns_counter& (0+255),b
  7855  0029DA  0E00               	movlw	0
  7856  0029DC  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  7857  0029DE  0E00               	movlw	0
  7858  0029E0  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  7859  0029E2  0E00               	movlw	0
  7860  0029E4  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  7861                           
  7862                           ;dispense.c: 150: rotary_counter = 0;
  7863  0029E6  0E00               	movlw	0
  7864  0029E8  6E40               	movwf	_rotary_counter,c
  7865  0029EA  0E00               	movlw	0
  7866  0029EC  6E41               	movwf	_rotary_counter+1,c
  7867  0029EE  0E00               	movlw	0
  7868  0029F0  6E42               	movwf	_rotary_counter+2,c
  7869  0029F2  0E00               	movlw	0
  7870  0029F4  6E43               	movwf	_rotary_counter+3,c
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;dispense.c: 151: float A = turns_counter;
  7874  0029F6  C0C8  F0A9         	movff	_turns_counter,middle_crack_drop@A
  7875  0029FA  C0C9  F0AA         	movff	_turns_counter+1,middle_crack_drop@A+1
  7876  0029FE  C0CA  F0AB         	movff	_turns_counter+2,middle_crack_drop@A+2
  7877  002A02  C0CB  F0AC         	movff	_turns_counter+3,middle_crack_drop@A+3
  7878  002A06                     l11292:
  7879                           
  7880                           ;dispense.c: 152: float B = turns_counter;
  7881  002A06  C0C8  F0AD         	movff	_turns_counter,middle_crack_drop@B
  7882  002A0A  C0C9  F0AE         	movff	_turns_counter+1,middle_crack_drop@B+1
  7883  002A0E  C0CA  F0AF         	movff	_turns_counter+2,middle_crack_drop@B+2
  7884  002A12  C0CB  F0B0         	movff	_turns_counter+3,middle_crack_drop@B+3
  7885                           
  7886                           ;dispense.c: 154: while((B - A) < mc_L){
  7887  002A16  D003               	goto	l11298
  7888  002A18                     l11294:
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;dispense.c: 155: L_I();
  7892  002A18  EC90  F028         	call	_L_I	;wreg free
  7893  002A1C  D7F4               	goto	l11292
  7894  002A1E                     l11298:
  7895  002A1E  C0A9  F094         	movff	middle_crack_drop@A,___flsub@a
  7896  002A22  C0AA  F095         	movff	middle_crack_drop@A+1,___flsub@a+1
  7897  002A26  C0AB  F096         	movff	middle_crack_drop@A+2,___flsub@a+2
  7898  002A2A  C0AC  F097         	movff	middle_crack_drop@A+3,___flsub@a+3
  7899  002A2E  C0AD  F090         	movff	middle_crack_drop@B,___flsub@b
  7900  002A32  C0AE  F091         	movff	middle_crack_drop@B+1,___flsub@b+1
  7901  002A36  C0AF  F092         	movff	middle_crack_drop@B+2,___flsub@b+2
  7902  002A3A  C0B0  F093         	movff	middle_crack_drop@B+3,___flsub@b+3
  7903  002A3E  EC29  F028         	call	___flsub	;wreg free
  7904  002A42  C090  F098         	movff	?___flsub,___flge@ff1
  7905  002A46  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  7906  002A4A  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  7907  002A4E  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  7908  002A52  0ECD               	movlw	205
  7909  002A54  0100               	movlb	0	; () banked
  7910  002A56  6F9C               	movwf	___flge@ff2& (0+255),b
  7911  002A58  0ECC               	movlw	204
  7912  002A5A  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  7913  002A5C  0E4C               	movlw	76
  7914  002A5E  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  7915  002A60  0E3E               	movlw	62
  7916  002A62  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  7917  002A64  ECF6  F01D         	call	___flge	;wreg free
  7918  002A68  0100               	movlb	0	; () banked
  7919  002A6A  A0D8               	btfss	status,0,c
  7920  002A6C  D7D5               	goto	l11294
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;dispense.c: 157: };dispense.c: 158: Stop();
  7924  002A6E  ECAA  F02A         	call	_Stop	;wreg free
  7925                           
  7926                           ;dispense.c: 159: hole_dispense_function();
  7927  002A72  ECD1  F005         	call	_hole_dispense_function	;wreg free
  7928                           
  7929                           ;dispense.c: 162: turns_counter =0;
  7930  002A76  0E00               	movlw	0
  7931  002A78  0100               	movlb	0	; () banked
  7932  002A7A  6FC8               	movwf	_turns_counter& (0+255),b
  7933  002A7C  0E00               	movlw	0
  7934  002A7E  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  7935  002A80  0E00               	movlw	0
  7936  002A82  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  7937  002A84  0E00               	movlw	0
  7938  002A86  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;dispense.c: 163: rotary_counter = 0;
  7942  002A88  0E00               	movlw	0
  7943  002A8A  6E40               	movwf	_rotary_counter,c
  7944  002A8C  0E00               	movlw	0
  7945  002A8E  6E41               	movwf	_rotary_counter+1,c
  7946  002A90  0E00               	movlw	0
  7947  002A92  6E42               	movwf	_rotary_counter+2,c
  7948  002A94  0E00               	movlw	0
  7949  002A96  6E43               	movwf	_rotary_counter+3,c
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;dispense.c: 164: A = turns_counter;
  7953  002A98  C0C8  F0A9         	movff	_turns_counter,middle_crack_drop@A
  7954  002A9C  C0C9  F0AA         	movff	_turns_counter+1,middle_crack_drop@A+1
  7955  002AA0  C0CA  F0AB         	movff	_turns_counter+2,middle_crack_drop@A+2
  7956  002AA4  C0CB  F0AC         	movff	_turns_counter+3,middle_crack_drop@A+3
  7957  002AA8                     l11310:
  7958                           
  7959                           ;dispense.c: 165: B = turns_counter;
  7960  002AA8  C0C8  F0AD         	movff	_turns_counter,middle_crack_drop@B
  7961  002AAC  C0C9  F0AE         	movff	_turns_counter+1,middle_crack_drop@B+1
  7962  002AB0  C0CA  F0AF         	movff	_turns_counter+2,middle_crack_drop@B+2
  7963  002AB4  C0CB  F0B0         	movff	_turns_counter+3,middle_crack_drop@B+3
  7964                           
  7965                           ;dispense.c: 167: while((B - A) < car_width){
  7966  002AB8  D003               	goto	l11316
  7967  002ABA                     l11312:
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;dispense.c: 168: R_I();
  7971  002ABA  EC42  F027         	call	_R_I	;wreg free
  7972  002ABE  D7F4               	goto	l11310
  7973  002AC0                     l11316:
  7974  002AC0  C0A9  F094         	movff	middle_crack_drop@A,___flsub@a
  7975  002AC4  C0AA  F095         	movff	middle_crack_drop@A+1,___flsub@a+1
  7976  002AC8  C0AB  F096         	movff	middle_crack_drop@A+2,___flsub@a+2
  7977  002ACC  C0AC  F097         	movff	middle_crack_drop@A+3,___flsub@a+3
  7978  002AD0  C0AD  F090         	movff	middle_crack_drop@B,___flsub@b
  7979  002AD4  C0AE  F091         	movff	middle_crack_drop@B+1,___flsub@b+1
  7980  002AD8  C0AF  F092         	movff	middle_crack_drop@B+2,___flsub@b+2
  7981  002ADC  C0B0  F093         	movff	middle_crack_drop@B+3,___flsub@b+3
  7982  002AE0  EC29  F028         	call	___flsub	;wreg free
  7983  002AE4  C090  F098         	movff	?___flsub,___flge@ff1
  7984  002AE8  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  7985  002AEC  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  7986  002AF0  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  7987  002AF4  0E66               	movlw	102
  7988  002AF6  0100               	movlb	0	; () banked
  7989  002AF8  6F9C               	movwf	___flge@ff2& (0+255),b
  7990  002AFA  0E66               	movlw	102
  7991  002AFC  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  7992  002AFE  0EE6               	movlw	230
  7993  002B00  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  7994  002B02  0E3E               	movlw	62
  7995  002B04  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  7996  002B06  ECF6  F01D         	call	___flge	;wreg free
  7997  002B0A  0100               	movlb	0	; () banked
  7998  002B0C  A0D8               	btfss	status,0,c
  7999  002B0E  D7D5               	goto	l11312
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;dispense.c: 170: };dispense.c: 171: Stop();
  8003  002B10  ECAA  F02A         	call	_Stop	;wreg free
  8004                           
  8005                           ;dispense.c: 172: if(no_cone == 0){
  8006  002B14  0100               	movlb	0	; () banked
  8007  002B16  51E6               	movf	_no_cone& (0+255),w,b
  8008  002B18  B4D8               	btfsc	status,2,c
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;dispense.c: 173: hole_dispense_function();}
  8012  002B1A  ECD1  F005         	call	_hole_dispense_function	;wreg free
  8013                           
  8014                           ;dispense.c: 175: turns_counter =0;
  8015  002B1E  0E00               	movlw	0
  8016  002B20  0100               	movlb	0	; () banked
  8017  002B22  6FC8               	movwf	_turns_counter& (0+255),b
  8018  002B24  0E00               	movlw	0
  8019  002B26  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  8020  002B28  0E00               	movlw	0
  8021  002B2A  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  8022  002B2C  0E00               	movlw	0
  8023  002B2E  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  8024                           
  8025                           ; BSR set to: 0
  8026                           ;dispense.c: 176: rotary_counter = 0;
  8027  002B30  0E00               	movlw	0
  8028  002B32  6E40               	movwf	_rotary_counter,c
  8029  002B34  0E00               	movlw	0
  8030  002B36  6E41               	movwf	_rotary_counter+1,c
  8031  002B38  0E00               	movlw	0
  8032  002B3A  6E42               	movwf	_rotary_counter+2,c
  8033  002B3C  0E00               	movlw	0
  8034  002B3E  6E43               	movwf	_rotary_counter+3,c
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;dispense.c: 177: A = turns_counter;
  8038  002B40  C0C8  F0A9         	movff	_turns_counter,middle_crack_drop@A
  8039  002B44  C0C9  F0AA         	movff	_turns_counter+1,middle_crack_drop@A+1
  8040  002B48  C0CA  F0AB         	movff	_turns_counter+2,middle_crack_drop@A+2
  8041  002B4C  C0CB  F0AC         	movff	_turns_counter+3,middle_crack_drop@A+3
  8042  002B50                     l11330:
  8043                           
  8044                           ;dispense.c: 178: B = turns_counter;
  8045  002B50  C0C8  F0AD         	movff	_turns_counter,middle_crack_drop@B
  8046  002B54  C0C9  F0AE         	movff	_turns_counter+1,middle_crack_drop@B+1
  8047  002B58  C0CA  F0AF         	movff	_turns_counter+2,middle_crack_drop@B+2
  8048  002B5C  C0CB  F0B0         	movff	_turns_counter+3,middle_crack_drop@B+3
  8049                           
  8050                           ;dispense.c: 180: while((B - A) < car_width - mc_L){
  8051  002B60  D003               	goto	l11336
  8052  002B62                     l11332:
  8053                           
  8054                           ; BSR set to: 0
  8055                           ;dispense.c: 181: L_I();
  8056  002B62  EC90  F028         	call	_L_I	;wreg free
  8057  002B66  D7F4               	goto	l11330
  8058  002B68                     l11336:
  8059  002B68  C0A9  F094         	movff	middle_crack_drop@A,___flsub@a
  8060  002B6C  C0AA  F095         	movff	middle_crack_drop@A+1,___flsub@a+1
  8061  002B70  C0AB  F096         	movff	middle_crack_drop@A+2,___flsub@a+2
  8062  002B74  C0AC  F097         	movff	middle_crack_drop@A+3,___flsub@a+3
  8063  002B78  C0AD  F090         	movff	middle_crack_drop@B,___flsub@b
  8064  002B7C  C0AE  F091         	movff	middle_crack_drop@B+1,___flsub@b+1
  8065  002B80  C0AF  F092         	movff	middle_crack_drop@B+2,___flsub@b+2
  8066  002B84  C0B0  F093         	movff	middle_crack_drop@B+3,___flsub@b+3
  8067  002B88  EC29  F028         	call	___flsub	;wreg free
  8068  002B8C  C090  F098         	movff	?___flsub,___flge@ff1
  8069  002B90  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  8070  002B94  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  8071  002B98  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  8072  002B9C  0E00               	movlw	0
  8073  002B9E  0100               	movlb	0	; () banked
  8074  002BA0  6F9C               	movwf	___flge@ff2& (0+255),b
  8075  002BA2  0E00               	movlw	0
  8076  002BA4  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  8077  002BA6  0E80               	movlw	128
  8078  002BA8  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  8079  002BAA  0E3E               	movlw	62
  8080  002BAC  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  8081  002BAE  ECF6  F01D         	call	___flge	;wreg free
  8082  002BB2  0100               	movlb	0	; () banked
  8083  002BB4  A0D8               	btfss	status,0,c
  8084  002BB6  D7D5               	goto	l11332
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;dispense.c: 183: };dispense.c: 184: Stop();
  8088  002BB8  ECAA  F02A         	call	_Stop	;wreg free
  8089                           
  8090                           ;dispense.c: 185: turns_counter =0;
  8091  002BBC  0E00               	movlw	0
  8092  002BBE  0100               	movlb	0	; () banked
  8093  002BC0  6FC8               	movwf	_turns_counter& (0+255),b
  8094  002BC2  0E00               	movlw	0
  8095  002BC4  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  8096  002BC6  0E00               	movlw	0
  8097  002BC8  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  8098  002BCA  0E00               	movlw	0
  8099  002BCC  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;dispense.c: 186: rotary_counter = 0;
  8103  002BCE  0E00               	movlw	0
  8104  002BD0  6E40               	movwf	_rotary_counter,c
  8105  002BD2  0E00               	movlw	0
  8106  002BD4  6E41               	movwf	_rotary_counter+1,c
  8107  002BD6  0E00               	movlw	0
  8108  002BD8  6E42               	movwf	_rotary_counter+2,c
  8109  002BDA  0E00               	movlw	0
  8110  002BDC  6E43               	movwf	_rotary_counter+3,c
  8111                           
  8112                           ; BSR set to: 0
  8113  002BDE  0012               	return		;funcret
  8114  002BE0                     __end_of_middle_crack_drop:
  8115                           	opt callstack 0
  8116                           
  8117 ;; *************** function _left_crack_drop *****************
  8118 ;; Defined at:
  8119 ;;		line 190 in file "dispense.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;		None
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  B               4   45[BANK0 ] float 
  8124 ;;  A               4   41[BANK0 ] float 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1    wreg      void 
  8127 ;; Registers used:
  8128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;Total ram usage:        8 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:   14
  8141 ;; This function calls:
  8142 ;;		_L_I
  8143 ;;		_R_I
  8144 ;;		_Stop
  8145 ;;		___flge
  8146 ;;		___flsub
  8147 ;;		_hole_dispense_function
  8148 ;; This function is called by:
  8149 ;;		_drop_function
  8150 ;; This function uses a non-reentrant model
  8151 ;;
  8152                           
  8153                           	psect	text29
  8154  002BE0                     __ptext29:
  8155                           	opt callstack 0
  8156  002BE0                     _left_crack_drop:
  8157                           	opt callstack 15
  8158                           
  8159                           ;dispense.c: 191: turns_counter =0;
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;incstack = 0
  8163  002BE0  0E00               	movlw	0
  8164  002BE2  0100               	movlb	0	; () banked
  8165  002BE4  6FC8               	movwf	_turns_counter& (0+255),b
  8166  002BE6  0E00               	movlw	0
  8167  002BE8  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  8168  002BEA  0E00               	movlw	0
  8169  002BEC  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  8170  002BEE  0E00               	movlw	0
  8171  002BF0  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  8172                           
  8173                           ;dispense.c: 192: rotary_counter = 0;
  8174  002BF2  0E00               	movlw	0
  8175  002BF4  6E40               	movwf	_rotary_counter,c
  8176  002BF6  0E00               	movlw	0
  8177  002BF8  6E41               	movwf	_rotary_counter+1,c
  8178  002BFA  0E00               	movlw	0
  8179  002BFC  6E42               	movwf	_rotary_counter+2,c
  8180  002BFE  0E00               	movlw	0
  8181  002C00  6E43               	movwf	_rotary_counter+3,c
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;dispense.c: 193: float A = turns_counter;
  8185  002C02  C0C8  F0A9         	movff	_turns_counter,left_crack_drop@A
  8186  002C06  C0C9  F0AA         	movff	_turns_counter+1,left_crack_drop@A+1
  8187  002C0A  C0CA  F0AB         	movff	_turns_counter+2,left_crack_drop@A+2
  8188  002C0E  C0CB  F0AC         	movff	_turns_counter+3,left_crack_drop@A+3
  8189  002C12                     l11236:
  8190                           
  8191                           ;dispense.c: 194: float B = turns_counter;
  8192  002C12  C0C8  F0AD         	movff	_turns_counter,left_crack_drop@B
  8193  002C16  C0C9  F0AE         	movff	_turns_counter+1,left_crack_drop@B+1
  8194  002C1A  C0CA  F0AF         	movff	_turns_counter+2,left_crack_drop@B+2
  8195  002C1E  C0CB  F0B0         	movff	_turns_counter+3,left_crack_drop@B+3
  8196                           
  8197                           ;dispense.c: 196: while((B - A) < lc_R-0.05){
  8198  002C22  D003               	goto	l11242
  8199  002C24                     l11238:
  8200                           
  8201                           ; BSR set to: 0
  8202                           ;dispense.c: 197: R_I();
  8203  002C24  EC42  F027         	call	_R_I	;wreg free
  8204  002C28  D7F4               	goto	l11236
  8205  002C2A                     l11242:
  8206  002C2A  C0A9  F094         	movff	left_crack_drop@A,___flsub@a
  8207  002C2E  C0AA  F095         	movff	left_crack_drop@A+1,___flsub@a+1
  8208  002C32  C0AB  F096         	movff	left_crack_drop@A+2,___flsub@a+2
  8209  002C36  C0AC  F097         	movff	left_crack_drop@A+3,___flsub@a+3
  8210  002C3A  C0AD  F090         	movff	left_crack_drop@B,___flsub@b
  8211  002C3E  C0AE  F091         	movff	left_crack_drop@B+1,___flsub@b+1
  8212  002C42  C0AF  F092         	movff	left_crack_drop@B+2,___flsub@b+2
  8213  002C46  C0B0  F093         	movff	left_crack_drop@B+3,___flsub@b+3
  8214  002C4A  EC29  F028         	call	___flsub	;wreg free
  8215  002C4E  C090  F098         	movff	?___flsub,___flge@ff1
  8216  002C52  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  8217  002C56  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  8218  002C5A  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  8219  002C5E  0ECD               	movlw	205
  8220  002C60  0100               	movlb	0	; () banked
  8221  002C62  6F9C               	movwf	___flge@ff2& (0+255),b
  8222  002C64  0ECC               	movlw	204
  8223  002C66  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  8224  002C68  0E4C               	movlw	76
  8225  002C6A  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  8226  002C6C  0E3D               	movlw	61
  8227  002C6E  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  8228  002C70  ECF6  F01D         	call	___flge	;wreg free
  8229  002C74  0100               	movlb	0	; () banked
  8230  002C76  A0D8               	btfss	status,0,c
  8231  002C78  D7D5               	goto	l11238
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;dispense.c: 199: };dispense.c: 200: Stop();
  8235  002C7A  ECAA  F02A         	call	_Stop	;wreg free
  8236                           
  8237                           ;dispense.c: 201: hole_dispense_function();
  8238  002C7E  ECD1  F005         	call	_hole_dispense_function	;wreg free
  8239                           
  8240                           ;dispense.c: 203: turns_counter =0;
  8241  002C82  0E00               	movlw	0
  8242  002C84  0100               	movlb	0	; () banked
  8243  002C86  6FC8               	movwf	_turns_counter& (0+255),b
  8244  002C88  0E00               	movlw	0
  8245  002C8A  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  8246  002C8C  0E00               	movlw	0
  8247  002C8E  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  8248  002C90  0E00               	movlw	0
  8249  002C92  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  8250                           
  8251                           ; BSR set to: 0
  8252                           ;dispense.c: 204: rotary_counter = 0;
  8253  002C94  0E00               	movlw	0
  8254  002C96  6E40               	movwf	_rotary_counter,c
  8255  002C98  0E00               	movlw	0
  8256  002C9A  6E41               	movwf	_rotary_counter+1,c
  8257  002C9C  0E00               	movlw	0
  8258  002C9E  6E42               	movwf	_rotary_counter+2,c
  8259  002CA0  0E00               	movlw	0
  8260  002CA2  6E43               	movwf	_rotary_counter+3,c
  8261                           
  8262                           ; BSR set to: 0
  8263                           ;dispense.c: 205: A = turns_counter;
  8264  002CA4  C0C8  F0A9         	movff	_turns_counter,left_crack_drop@A
  8265  002CA8  C0C9  F0AA         	movff	_turns_counter+1,left_crack_drop@A+1
  8266  002CAC  C0CA  F0AB         	movff	_turns_counter+2,left_crack_drop@A+2
  8267  002CB0  C0CB  F0AC         	movff	_turns_counter+3,left_crack_drop@A+3
  8268  002CB4                     l11254:
  8269                           
  8270                           ;dispense.c: 206: B = turns_counter;
  8271  002CB4  C0C8  F0AD         	movff	_turns_counter,left_crack_drop@B
  8272  002CB8  C0C9  F0AE         	movff	_turns_counter+1,left_crack_drop@B+1
  8273  002CBC  C0CA  F0AF         	movff	_turns_counter+2,left_crack_drop@B+2
  8274  002CC0  C0CB  F0B0         	movff	_turns_counter+3,left_crack_drop@B+3
  8275                           
  8276                           ;dispense.c: 208: while((B - A) < car_width-0.05){
  8277  002CC4  D003               	goto	l11260
  8278  002CC6                     l11256:
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;dispense.c: 209: L_I();
  8282  002CC6  EC90  F028         	call	_L_I	;wreg free
  8283  002CCA  D7F4               	goto	l11254
  8284  002CCC                     l11260:
  8285  002CCC  C0A9  F094         	movff	left_crack_drop@A,___flsub@a
  8286  002CD0  C0AA  F095         	movff	left_crack_drop@A+1,___flsub@a+1
  8287  002CD4  C0AB  F096         	movff	left_crack_drop@A+2,___flsub@a+2
  8288  002CD8  C0AC  F097         	movff	left_crack_drop@A+3,___flsub@a+3
  8289  002CDC  C0AD  F090         	movff	left_crack_drop@B,___flsub@b
  8290  002CE0  C0AE  F091         	movff	left_crack_drop@B+1,___flsub@b+1
  8291  002CE4  C0AF  F092         	movff	left_crack_drop@B+2,___flsub@b+2
  8292  002CE8  C0B0  F093         	movff	left_crack_drop@B+3,___flsub@b+3
  8293  002CEC  EC29  F028         	call	___flsub	;wreg free
  8294  002CF0  C090  F098         	movff	?___flsub,___flge@ff1
  8295  002CF4  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  8296  002CF8  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  8297  002CFC  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  8298  002D00  0ECD               	movlw	205
  8299  002D02  0100               	movlb	0	; () banked
  8300  002D04  6F9C               	movwf	___flge@ff2& (0+255),b
  8301  002D06  0ECC               	movlw	204
  8302  002D08  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  8303  002D0A  0ECC               	movlw	204
  8304  002D0C  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  8305  002D0E  0E3E               	movlw	62
  8306  002D10  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  8307  002D12  ECF6  F01D         	call	___flge	;wreg free
  8308  002D16  0100               	movlb	0	; () banked
  8309  002D18  A0D8               	btfss	status,0,c
  8310  002D1A  D7D5               	goto	l11256
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;dispense.c: 211: };dispense.c: 212: Stop();
  8314  002D1C  ECAA  F02A         	call	_Stop	;wreg free
  8315                           
  8316                           ;dispense.c: 213: if(no_cone == 0){
  8317  002D20  0100               	movlb	0	; () banked
  8318  002D22  51E6               	movf	_no_cone& (0+255),w,b
  8319  002D24  B4D8               	btfsc	status,2,c
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;dispense.c: 214: hole_dispense_function();}
  8323  002D26  ECD1  F005         	call	_hole_dispense_function	;wreg free
  8324                           
  8325                           ;dispense.c: 216: turns_counter =0;
  8326  002D2A  0E00               	movlw	0
  8327  002D2C  0100               	movlb	0	; () banked
  8328  002D2E  6FC8               	movwf	_turns_counter& (0+255),b
  8329  002D30  0E00               	movlw	0
  8330  002D32  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  8331  002D34  0E00               	movlw	0
  8332  002D36  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  8333  002D38  0E00               	movlw	0
  8334  002D3A  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  8335                           
  8336                           ; BSR set to: 0
  8337                           ;dispense.c: 217: rotary_counter = 0;
  8338  002D3C  0E00               	movlw	0
  8339  002D3E  6E40               	movwf	_rotary_counter,c
  8340  002D40  0E00               	movlw	0
  8341  002D42  6E41               	movwf	_rotary_counter+1,c
  8342  002D44  0E00               	movlw	0
  8343  002D46  6E42               	movwf	_rotary_counter+2,c
  8344  002D48  0E00               	movlw	0
  8345  002D4A  6E43               	movwf	_rotary_counter+3,c
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;dispense.c: 218: A = turns_counter;
  8349  002D4C  C0C8  F0A9         	movff	_turns_counter,left_crack_drop@A
  8350  002D50  C0C9  F0AA         	movff	_turns_counter+1,left_crack_drop@A+1
  8351  002D54  C0CA  F0AB         	movff	_turns_counter+2,left_crack_drop@A+2
  8352  002D58  C0CB  F0AC         	movff	_turns_counter+3,left_crack_drop@A+3
  8353  002D5C                     l11274:
  8354                           
  8355                           ;dispense.c: 219: B = turns_counter;
  8356  002D5C  C0C8  F0AD         	movff	_turns_counter,left_crack_drop@B
  8357  002D60  C0C9  F0AE         	movff	_turns_counter+1,left_crack_drop@B+1
  8358  002D64  C0CA  F0AF         	movff	_turns_counter+2,left_crack_drop@B+2
  8359  002D68  C0CB  F0B0         	movff	_turns_counter+3,left_crack_drop@B+3
  8360                           
  8361                           ;dispense.c: 221: while((B - A) < car_width - lc_R){
  8362  002D6C  D003               	goto	l11280
  8363  002D6E                     l11276:
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;dispense.c: 222: R_I();
  8367  002D6E  EC42  F027         	call	_R_I	;wreg free
  8368  002D72  D7F4               	goto	l11274
  8369  002D74                     l11280:
  8370  002D74  C0A9  F094         	movff	left_crack_drop@A,___flsub@a
  8371  002D78  C0AA  F095         	movff	left_crack_drop@A+1,___flsub@a+1
  8372  002D7C  C0AB  F096         	movff	left_crack_drop@A+2,___flsub@a+2
  8373  002D80  C0AC  F097         	movff	left_crack_drop@A+3,___flsub@a+3
  8374  002D84  C0AD  F090         	movff	left_crack_drop@B,___flsub@b
  8375  002D88  C0AE  F091         	movff	left_crack_drop@B+1,___flsub@b+1
  8376  002D8C  C0AF  F092         	movff	left_crack_drop@B+2,___flsub@b+2
  8377  002D90  C0B0  F093         	movff	left_crack_drop@B+3,___flsub@b+3
  8378  002D94  EC29  F028         	call	___flsub	;wreg free
  8379  002D98  C090  F098         	movff	?___flsub,___flge@ff1
  8380  002D9C  C091  F099         	movff	?___flsub+1,___flge@ff1+1
  8381  002DA0  C092  F09A         	movff	?___flsub+2,___flge@ff1+2
  8382  002DA4  C093  F09B         	movff	?___flsub+3,___flge@ff1+3
  8383  002DA8  0E33               	movlw	51
  8384  002DAA  0100               	movlb	0	; () banked
  8385  002DAC  6F9C               	movwf	___flge@ff2& (0+255),b
  8386  002DAE  0E33               	movlw	51
  8387  002DB0  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
  8388  002DB2  0EB3               	movlw	179
  8389  002DB4  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
  8390  002DB6  0E3E               	movlw	62
  8391  002DB8  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
  8392  002DBA  ECF6  F01D         	call	___flge	;wreg free
  8393  002DBE  0100               	movlb	0	; () banked
  8394  002DC0  A0D8               	btfss	status,0,c
  8395  002DC2  D7D5               	goto	l11276
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;dispense.c: 224: };dispense.c: 225: Stop();
  8399  002DC4  ECAA  F02A         	call	_Stop	;wreg free
  8400                           
  8401                           ;dispense.c: 226: turns_counter =0;
  8402  002DC8  0E00               	movlw	0
  8403  002DCA  0100               	movlb	0	; () banked
  8404  002DCC  6FC8               	movwf	_turns_counter& (0+255),b
  8405  002DCE  0E00               	movlw	0
  8406  002DD0  6FC9               	movwf	(_turns_counter+1)& (0+255),b
  8407  002DD2  0E00               	movlw	0
  8408  002DD4  6FCA               	movwf	(_turns_counter+2)& (0+255),b
  8409  002DD6  0E00               	movlw	0
  8410  002DD8  6FCB               	movwf	(_turns_counter+3)& (0+255),b
  8411                           
  8412                           ; BSR set to: 0
  8413                           ;dispense.c: 227: rotary_counter = 0;
  8414  002DDA  0E00               	movlw	0
  8415  002DDC  6E40               	movwf	_rotary_counter,c
  8416  002DDE  0E00               	movlw	0
  8417  002DE0  6E41               	movwf	_rotary_counter+1,c
  8418  002DE2  0E00               	movlw	0
  8419  002DE4  6E42               	movwf	_rotary_counter+2,c
  8420  002DE6  0E00               	movlw	0
  8421  002DE8  6E43               	movwf	_rotary_counter+3,c
  8422                           
  8423                           ; BSR set to: 0
  8424  002DEA  0012               	return		;funcret
  8425  002DEC                     __end_of_left_crack_drop:
  8426                           	opt callstack 0
  8427                           
  8428 ;; *************** function _hole_dispense_function *****************
  8429 ;; Defined at:
  8430 ;;		line 33 in file "dispense.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  tick            4   37[BANK0 ] unsigned long 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;Total ram usage:        6 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:   13
  8451 ;; This function calls:
  8452 ;;		_lcdInst
  8453 ;;		_printf
  8454 ;; This function is called by:
  8455 ;;		_drop_function
  8456 ;;		_middle_crack_drop
  8457 ;;		_left_crack_drop
  8458 ;;		_right_crack_drop
  8459 ;; This function uses a non-reentrant model
  8460 ;;
  8461                           
  8462                           	psect	text30
  8463  000BA2                     __ptext30:
  8464                           	opt callstack 0
  8465  000BA2                     _hole_dispense_function:
  8466                           	opt callstack 15
  8467                           
  8468                           ;dispense.c: 34: unsigned long tick = 0;
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;incstack = 0
  8472  000BA2  0E00               	movlw	0
  8473  000BA4  0100               	movlb	0	; () banked
  8474  000BA6  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  8475  000BA8  0E00               	movlw	0
  8476  000BAA  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  8477  000BAC  0E00               	movlw	0
  8478  000BAE  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  8479  000BB0  0E00               	movlw	0
  8480  000BB2  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;dispense.c: 35: if (PORTAbits.RA3 == 1){
  8484  000BB4  A680               	btfss	3968,3,c	;volatile
  8485  000BB6  D0BA               	goto	l10412
  8486                           
  8487                           ; BSR set to: 0
  8488                           ;dispense.c: 36: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
  8489  000BB8  0E01               	movlw	1
  8490  000BBA  EC9A  F02A         	call	_lcdInst
  8491  000BBE  0E11               	movlw	17
  8492  000BC0  0100               	movlb	0	; () banked
  8493  000BC2  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8494  000BC4  0E3A               	movlw	58
  8495  000BC6                     u13097:
  8496  000BC6  2EE8               	decfsz	wreg,f,c
  8497  000BC8  D7FE               	bra	u13097
  8498  000BCA  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8499  000BCC  D7FC               	bra	u13097
  8500  000BCE  F000               	nop	
  8501                           
  8502                           ;dispense.c: 37: printf("cone used up");
  8503  000BD0  0EBA               	movlw	low STR_6
  8504  000BD2  0100               	movlb	0	; () banked
  8505  000BD4  6F8E               	movwf	printf@f& (0+255),b
  8506  000BD6  0EFE               	movlw	high STR_6
  8507  000BD8  6F8F               	movwf	(printf@f+1)& (0+255),b
  8508  000BDA  EC81  F010         	call	_printf	;wreg free
  8509                           
  8510                           ;dispense.c: 38: while(tick<70){
  8511  000BDE  D024               	goto	l822
  8512  000BE0                     l823:
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;dispense.c: 40: LATAbits.LATA4 = 1;
  8516  000BE0  8889               	bsf	3977,4,c	;volatile
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;dispense.c: 41: _delay((unsigned long)((1.2)*(10000000/4000.0)));
  8520  000BE2  0E04               	movlw	4
  8521  000BE4  0100               	movlb	0	; () banked
  8522  000BE6  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8523  000BE8  0EE4               	movlw	228
  8524  000BEA                     u13107:
  8525  000BEA  2EE8               	decfsz	wreg,f,c
  8526  000BEC  D7FE               	bra	u13107
  8527  000BEE  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8528  000BF0  D7FC               	bra	u13107
  8529  000BF2  F000               	nop	
  8530                           
  8531                           ;dispense.c: 43: LATAbits.LATA4 = 0;
  8532  000BF4  9889               	bcf	3977,4,c	;volatile
  8533                           
  8534                           ;dispense.c: 44: _delay((unsigned long)((17.8)*(10000000/4000.0)));
  8535  000BF6  0E3A               	movlw	58
  8536  000BF8  0100               	movlb	0	; () banked
  8537  000BFA  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8538  000BFC  0EC9               	movlw	201
  8539  000BFE                     u13117:
  8540  000BFE  2EE8               	decfsz	wreg,f,c
  8541  000C00  D7FE               	bra	u13117
  8542  000C02  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8543  000C04  D7FC               	bra	u13117
  8544  000C06  D000               	nop2	
  8545                           
  8546                           ;dispense.c: 46: tick ++;
  8547  000C08  0E01               	movlw	1
  8548  000C0A  0100               	movlb	0	; () banked
  8549  000C0C  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  8550  000C0E  0E00               	movlw	0
  8551  000C10  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  8552  000C12  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  8553  000C14  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;dispense.c: 47: _delay((unsigned long)((1)*(10000000/4000.0)));
  8557  000C16  0E04               	movlw	4
  8558  000C18  0100               	movlb	0	; () banked
  8559  000C1A  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8560  000C1C  0E3D               	movlw	61
  8561  000C1E                     u13127:
  8562  000C1E  2EE8               	decfsz	wreg,f,c
  8563  000C20  D7FE               	bra	u13127
  8564  000C22  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8565  000C24  D7FC               	bra	u13127
  8566  000C26  D000               	nop2	
  8567  000C28                     l822:
  8568  000C28  0100               	movlb	0	; () banked
  8569  000C2A  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  8570  000C2C  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  8571  000C2E  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  8572  000C30  E104               	bnz	u10350
  8573  000C32  0E46               	movlw	70
  8574  000C34  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  8575  000C36  A0D8               	btfss	status,0,c
  8576  000C38  D7D3               	goto	l823
  8577  000C3A                     u10350:
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;dispense.c: 48: };dispense.c: 49: tick = 0;
  8581  000C3A  0E00               	movlw	0
  8582  000C3C  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  8583  000C3E  0E00               	movlw	0
  8584  000C40  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  8585  000C42  0E00               	movlw	0
  8586  000C44  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  8587  000C46  0E00               	movlw	0
  8588  000C48  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  8589                           
  8590                           ;dispense.c: 50: while(tick<60){
  8591  000C4A  D01E               	goto	l825
  8592  000C4C                     l826:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;dispense.c: 52: LATAbits.LATA5 = 1;
  8596  000C4C  8A89               	bsf	3977,5,c	;volatile
  8597                           
  8598                           ; BSR set to: 0
  8599                           ;dispense.c: 53: _delay((unsigned long)((0.5)*(10000000/4000.0)));
  8600  000C4E  0EFA               	movlw	250
  8601  000C50                     u13137:
  8602  000C50  D000               	nop2	
  8603  000C52  2EE8               	decfsz	wreg,f,c
  8604  000C54  D7FD               	bra	u13137
  8605                           
  8606                           ;dispense.c: 55: LATAbits.LATA5 = 0;
  8607  000C56  9A89               	bcf	3977,5,c	;volatile
  8608                           
  8609                           ;dispense.c: 56: _delay((unsigned long)((18.5)*(10000000/4000.0)));
  8610  000C58  0E3D               	movlw	61
  8611  000C5A  0100               	movlb	0	; () banked
  8612  000C5C  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8613  000C5E  0E0F               	movlw	15
  8614  000C60                     u13147:
  8615  000C60  2EE8               	decfsz	wreg,f,c
  8616  000C62  D7FE               	bra	u13147
  8617  000C64  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8618  000C66  D7FC               	bra	u13147
  8619                           
  8620                           ;dispense.c: 58: tick ++;
  8621  000C68  0E01               	movlw	1
  8622  000C6A  0100               	movlb	0	; () banked
  8623  000C6C  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  8624  000C6E  0E00               	movlw	0
  8625  000C70  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  8626  000C72  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  8627  000C74  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  8628                           
  8629                           ; BSR set to: 0
  8630                           ;dispense.c: 59: _delay((unsigned long)((1)*(10000000/4000.0)));
  8631  000C76  0E04               	movlw	4
  8632  000C78  0100               	movlb	0	; () banked
  8633  000C7A  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8634  000C7C  0E3D               	movlw	61
  8635  000C7E                     u13157:
  8636  000C7E  2EE8               	decfsz	wreg,f,c
  8637  000C80  D7FE               	bra	u13157
  8638  000C82  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8639  000C84  D7FC               	bra	u13157
  8640  000C86  D000               	nop2	
  8641  000C88                     l825:
  8642  000C88  0100               	movlb	0	; () banked
  8643  000C8A  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  8644  000C8C  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  8645  000C8E  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  8646  000C90  E104               	bnz	u10360
  8647  000C92  0E3C               	movlw	60
  8648  000C94  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  8649  000C96  A0D8               	btfss	status,0,c
  8650  000C98  D7D9               	goto	l826
  8651  000C9A                     u10360:
  8652                           
  8653                           ; BSR set to: 0
  8654                           ;dispense.c: 60: };dispense.c: 62: tick =0;
  8655  000C9A  0E00               	movlw	0
  8656  000C9C  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  8657  000C9E  0E00               	movlw	0
  8658  000CA0  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  8659  000CA2  0E00               	movlw	0
  8660  000CA4  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  8661  000CA6  0E00               	movlw	0
  8662  000CA8  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  8663                           
  8664                           ;dispense.c: 63: while(tick<70){
  8665  000CAA  D024               	goto	l828
  8666  000CAC                     l829:
  8667                           
  8668                           ; BSR set to: 0
  8669                           ;dispense.c: 66: LATAbits.LATA4 = 1;
  8670  000CAC  8889               	bsf	3977,4,c	;volatile
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;dispense.c: 67: _delay((unsigned long)((1.85)*(10000000/4000.0)));
  8674  000CAE  0E06               	movlw	6
  8675  000CB0  0100               	movlb	0	; () banked
  8676  000CB2  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8677  000CB4  0E00               	movlw	0
  8678  000CB6                     u13167:
  8679  000CB6  2EE8               	decfsz	wreg,f,c
  8680  000CB8  D7FE               	bra	u13167
  8681  000CBA  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8682  000CBC  D7FC               	bra	u13167
  8683  000CBE  D000               	nop2	
  8684                           
  8685                           ;dispense.c: 69: LATAbits.LATA4 = 0;
  8686  000CC0  9889               	bcf	3977,4,c	;volatile
  8687                           
  8688                           ;dispense.c: 70: _delay((unsigned long)((17.15)*(10000000/4000.0)));
  8689  000CC2  0E38               	movlw	56
  8690  000CC4  0100               	movlb	0	; () banked
  8691  000CC6  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8692  000CC8  0EAD               	movlw	173
  8693  000CCA                     u13177:
  8694  000CCA  2EE8               	decfsz	wreg,f,c
  8695  000CCC  D7FE               	bra	u13177
  8696  000CCE  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8697  000CD0  D7FC               	bra	u13177
  8698  000CD2  F000               	nop	
  8699                           
  8700                           ;dispense.c: 72: tick ++;
  8701  000CD4  0E01               	movlw	1
  8702  000CD6  0100               	movlb	0	; () banked
  8703  000CD8  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  8704  000CDA  0E00               	movlw	0
  8705  000CDC  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  8706  000CDE  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  8707  000CE0  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;dispense.c: 73: _delay((unsigned long)((1)*(10000000/4000.0)));
  8711  000CE2  0E04               	movlw	4
  8712  000CE4  0100               	movlb	0	; () banked
  8713  000CE6  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8714  000CE8  0E3D               	movlw	61
  8715  000CEA                     u13187:
  8716  000CEA  2EE8               	decfsz	wreg,f,c
  8717  000CEC  D7FE               	bra	u13187
  8718  000CEE  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8719  000CF0  D7FC               	bra	u13187
  8720  000CF2  D000               	nop2	
  8721  000CF4                     l828:
  8722  000CF4  0100               	movlb	0	; () banked
  8723  000CF6  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  8724  000CF8  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  8725  000CFA  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  8726  000CFC  E104               	bnz	u10370
  8727  000CFE  0E46               	movlw	70
  8728  000D00  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  8729  000D02  A0D8               	btfss	status,0,c
  8730  000D04  D7D3               	goto	l829
  8731  000D06                     u10370:
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;dispense.c: 76: _delay((unsigned long)((100)*(10000000/4000.0)));
  8735                           
  8736                           ; BSR set to: 0
  8737  000D06  0E02               	movlw	2
  8738  000D08  0100               	movlb	0	; () banked
  8739  000D0A  6FA4               	movwf	(??_hole_dispense_function+1)& (0+255),b
  8740  000D0C  0E45               	movlw	69
  8741  000D0E  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8742  000D10  0EA9               	movlw	169
  8743  000D12                     u13197:
  8744  000D12  2EE8               	decfsz	wreg,f,c
  8745  000D14  D7FE               	bra	u13197
  8746  000D16  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8747  000D18  D7FC               	bra	u13197
  8748  000D1A  2FA4               	decfsz	(??_hole_dispense_function+1)& (0+255),f,b
  8749  000D1C  D7FA               	bra	u13197
  8750  000D1E  D000               	nop2	
  8751                           
  8752                           ;dispense.c: 77: cones_deployed +=1;
  8753  000D20  0100               	movlb	0	; () banked
  8754  000D22  4BD6               	infsnz	_cones_deployed& (0+255),f,b
  8755  000D24  2BD7               	incf	(_cones_deployed+1)& (0+255),f,b
  8756                           
  8757                           ; BSR set to: 0
  8758                           ;dispense.c: 78: no_cone = 1;
  8759  000D26  0E01               	movlw	1
  8760  000D28  6FE6               	movwf	_no_cone& (0+255),b
  8761                           
  8762                           ;dispense.c: 79: }
  8763  000D2A  0012               	return	
  8764  000D2C                     l10412:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;dispense.c: 81: else{;dispense.c: 82: tick = 0;
  8768  000D2C  0E00               	movlw	0
  8769  000D2E  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  8770  000D30  0E00               	movlw	0
  8771  000D32  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  8772  000D34  0E00               	movlw	0
  8773  000D36  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  8774  000D38  0E00               	movlw	0
  8775  000D3A  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  8776                           
  8777                           ;dispense.c: 83: while(tick<70){
  8778  000D3C  D024               	goto	l832
  8779  000D3E                     l833:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;dispense.c: 85: LATAbits.LATA4 = 1;
  8783  000D3E  8889               	bsf	3977,4,c	;volatile
  8784                           
  8785                           ; BSR set to: 0
  8786                           ;dispense.c: 86: _delay((unsigned long)((1.2)*(10000000/4000.0)));
  8787  000D40  0E04               	movlw	4
  8788  000D42  0100               	movlb	0	; () banked
  8789  000D44  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8790  000D46  0EE4               	movlw	228
  8791  000D48                     u13207:
  8792  000D48  2EE8               	decfsz	wreg,f,c
  8793  000D4A  D7FE               	bra	u13207
  8794  000D4C  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8795  000D4E  D7FC               	bra	u13207
  8796  000D50  F000               	nop	
  8797                           
  8798                           ;dispense.c: 88: LATAbits.LATA4 = 0;
  8799  000D52  9889               	bcf	3977,4,c	;volatile
  8800                           
  8801                           ;dispense.c: 89: _delay((unsigned long)((17.8)*(10000000/4000.0)));
  8802  000D54  0E3A               	movlw	58
  8803  000D56  0100               	movlb	0	; () banked
  8804  000D58  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8805  000D5A  0EC9               	movlw	201
  8806  000D5C                     u13217:
  8807  000D5C  2EE8               	decfsz	wreg,f,c
  8808  000D5E  D7FE               	bra	u13217
  8809  000D60  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8810  000D62  D7FC               	bra	u13217
  8811  000D64  D000               	nop2	
  8812                           
  8813                           ;dispense.c: 91: tick ++;
  8814  000D66  0E01               	movlw	1
  8815  000D68  0100               	movlb	0	; () banked
  8816  000D6A  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  8817  000D6C  0E00               	movlw	0
  8818  000D6E  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  8819  000D70  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  8820  000D72  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;dispense.c: 92: _delay((unsigned long)((1)*(10000000/4000.0)));
  8824  000D74  0E04               	movlw	4
  8825  000D76  0100               	movlb	0	; () banked
  8826  000D78  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8827  000D7A  0E3D               	movlw	61
  8828  000D7C                     u13227:
  8829  000D7C  2EE8               	decfsz	wreg,f,c
  8830  000D7E  D7FE               	bra	u13227
  8831  000D80  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8832  000D82  D7FC               	bra	u13227
  8833  000D84  D000               	nop2	
  8834  000D86                     l832:
  8835  000D86  0100               	movlb	0	; () banked
  8836  000D88  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  8837  000D8A  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  8838  000D8C  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  8839  000D8E  E104               	bnz	u10380
  8840  000D90  0E46               	movlw	70
  8841  000D92  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  8842  000D94  A0D8               	btfss	status,0,c
  8843  000D96  D7D3               	goto	l833
  8844  000D98                     u10380:
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;dispense.c: 93: };dispense.c: 95: tick = 0;
  8848  000D98  0E00               	movlw	0
  8849  000D9A  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  8850  000D9C  0E00               	movlw	0
  8851  000D9E  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  8852  000DA0  0E00               	movlw	0
  8853  000DA2  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  8854  000DA4  0E00               	movlw	0
  8855  000DA6  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  8856                           
  8857                           ;dispense.c: 99: while(tick<60){
  8858  000DA8  D01E               	goto	l835
  8859  000DAA                     l836:
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;dispense.c: 101: LATAbits.LATA5 = 1;
  8863  000DAA  8A89               	bsf	3977,5,c	;volatile
  8864                           
  8865                           ; BSR set to: 0
  8866                           ;dispense.c: 102: _delay((unsigned long)((0.5)*(10000000/4000.0)));
  8867  000DAC  0EFA               	movlw	250
  8868  000DAE                     u13237:
  8869  000DAE  D000               	nop2	
  8870  000DB0  2EE8               	decfsz	wreg,f,c
  8871  000DB2  D7FD               	bra	u13237
  8872                           
  8873                           ;dispense.c: 104: LATAbits.LATA5 = 0;
  8874  000DB4  9A89               	bcf	3977,5,c	;volatile
  8875                           
  8876                           ;dispense.c: 105: _delay((unsigned long)((18.5)*(10000000/4000.0)));
  8877  000DB6  0E3D               	movlw	61
  8878  000DB8  0100               	movlb	0	; () banked
  8879  000DBA  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8880  000DBC  0E0F               	movlw	15
  8881  000DBE                     u13247:
  8882  000DBE  2EE8               	decfsz	wreg,f,c
  8883  000DC0  D7FE               	bra	u13247
  8884  000DC2  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8885  000DC4  D7FC               	bra	u13247
  8886                           
  8887                           ;dispense.c: 107: tick ++;
  8888  000DC6  0E01               	movlw	1
  8889  000DC8  0100               	movlb	0	; () banked
  8890  000DCA  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  8891  000DCC  0E00               	movlw	0
  8892  000DCE  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  8893  000DD0  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  8894  000DD2  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;dispense.c: 108: _delay((unsigned long)((1)*(10000000/4000.0)));
  8898  000DD4  0E04               	movlw	4
  8899  000DD6  0100               	movlb	0	; () banked
  8900  000DD8  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8901  000DDA  0E3D               	movlw	61
  8902  000DDC                     u13257:
  8903  000DDC  2EE8               	decfsz	wreg,f,c
  8904  000DDE  D7FE               	bra	u13257
  8905  000DE0  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8906  000DE2  D7FC               	bra	u13257
  8907  000DE4  D000               	nop2	
  8908  000DE6                     l835:
  8909  000DE6  0100               	movlb	0	; () banked
  8910  000DE8  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  8911  000DEA  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  8912  000DEC  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  8913  000DEE  E104               	bnz	u10390
  8914  000DF0  0E3C               	movlw	60
  8915  000DF2  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  8916  000DF4  A0D8               	btfss	status,0,c
  8917  000DF6  D7D9               	goto	l836
  8918  000DF8                     u10390:
  8919                           
  8920                           ; BSR set to: 0
  8921                           ;dispense.c: 109: };dispense.c: 110: _delay((unsigned long)((100)*(10000000/4000.0)));
  8922  000DF8  0E02               	movlw	2
  8923  000DFA  0100               	movlb	0	; () banked
  8924  000DFC  6FA4               	movwf	(??_hole_dispense_function+1)& (0+255),b
  8925  000DFE  0E45               	movlw	69
  8926  000E00  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8927  000E02  0EA9               	movlw	169
  8928  000E04                     u13267:
  8929  000E04  2EE8               	decfsz	wreg,f,c
  8930  000E06  D7FE               	bra	u13267
  8931  000E08  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8932  000E0A  D7FC               	bra	u13267
  8933  000E0C  2FA4               	decfsz	(??_hole_dispense_function+1)& (0+255),f,b
  8934  000E0E  D7FA               	bra	u13267
  8935  000E10  D000               	nop2	
  8936                           
  8937                           ;dispense.c: 111: tick = 0;
  8938  000E12  0E00               	movlw	0
  8939  000E14  0100               	movlb	0	; () banked
  8940  000E16  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  8941  000E18  0E00               	movlw	0
  8942  000E1A  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  8943  000E1C  0E00               	movlw	0
  8944  000E1E  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  8945  000E20  0E00               	movlw	0
  8946  000E22  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  8947                           
  8948                           ;dispense.c: 115: while(tick<60){
  8949  000E24  D023               	goto	l838
  8950  000E26                     l839:
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;dispense.c: 117: LATAbits.LATA5 = 1;
  8954  000E26  8A89               	bsf	3977,5,c	;volatile
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;dispense.c: 118: _delay((unsigned long)((2.5)*(10000000/4000.0)));
  8958  000E28  0E09               	movlw	9
  8959  000E2A  0100               	movlb	0	; () banked
  8960  000E2C  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8961  000E2E  0E1C               	movlw	28
  8962  000E30                     u13277:
  8963  000E30  2EE8               	decfsz	wreg,f,c
  8964  000E32  D7FE               	bra	u13277
  8965  000E34  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8966  000E36  D7FC               	bra	u13277
  8967  000E38  F000               	nop	
  8968                           
  8969                           ;dispense.c: 120: LATAbits.LATA5 = 0;
  8970  000E3A  9A89               	bcf	3977,5,c	;volatile
  8971                           
  8972                           ;dispense.c: 121: _delay((unsigned long)((16.5)*(10000000/4000.0)));
  8973  000E3C  0E36               	movlw	54
  8974  000E3E  0100               	movlb	0	; () banked
  8975  000E40  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8976  000E42  0E91               	movlw	145
  8977  000E44                     u13287:
  8978  000E44  2EE8               	decfsz	wreg,f,c
  8979  000E46  D7FE               	bra	u13287
  8980  000E48  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  8981  000E4A  D7FC               	bra	u13287
  8982                           
  8983                           ;dispense.c: 123: tick ++;
  8984  000E4C  0E01               	movlw	1
  8985  000E4E  0100               	movlb	0	; () banked
  8986  000E50  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  8987  000E52  0E00               	movlw	0
  8988  000E54  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  8989  000E56  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  8990  000E58  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;dispense.c: 124: _delay((unsigned long)((1)*(10000000/4000.0)));
  8994  000E5A  0E04               	movlw	4
  8995  000E5C  0100               	movlb	0	; () banked
  8996  000E5E  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  8997  000E60  0E3D               	movlw	61
  8998  000E62                     u13297:
  8999  000E62  2EE8               	decfsz	wreg,f,c
  9000  000E64  D7FE               	bra	u13297
  9001  000E66  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  9002  000E68  D7FC               	bra	u13297
  9003  000E6A  D000               	nop2	
  9004  000E6C                     l838:
  9005  000E6C  0100               	movlb	0	; () banked
  9006  000E6E  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  9007  000E70  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  9008  000E72  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  9009  000E74  E104               	bnz	u10400
  9010  000E76  0E3C               	movlw	60
  9011  000E78  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  9012  000E7A  A0D8               	btfss	status,0,c
  9013  000E7C  D7D4               	goto	l839
  9014  000E7E                     u10400:
  9015                           
  9016                           ; BSR set to: 0
  9017                           ;dispense.c: 125: };dispense.c: 126: _delay((unsigned long)((100)*(10000000/4000.0)));
  9018  000E7E  0E02               	movlw	2
  9019  000E80  0100               	movlb	0	; () banked
  9020  000E82  6FA4               	movwf	(??_hole_dispense_function+1)& (0+255),b
  9021  000E84  0E45               	movlw	69
  9022  000E86  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  9023  000E88  0EA9               	movlw	169
  9024  000E8A                     u13307:
  9025  000E8A  2EE8               	decfsz	wreg,f,c
  9026  000E8C  D7FE               	bra	u13307
  9027  000E8E  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  9028  000E90  D7FC               	bra	u13307
  9029  000E92  2FA4               	decfsz	(??_hole_dispense_function+1)& (0+255),f,b
  9030  000E94  D7FA               	bra	u13307
  9031  000E96  D000               	nop2	
  9032                           
  9033                           ;dispense.c: 127: tick = 0;
  9034  000E98  0E00               	movlw	0
  9035  000E9A  0100               	movlb	0	; () banked
  9036  000E9C  6FA5               	movwf	hole_dispense_function@tick& (0+255),b
  9037  000E9E  0E00               	movlw	0
  9038  000EA0  6FA6               	movwf	(hole_dispense_function@tick+1)& (0+255),b
  9039  000EA2  0E00               	movlw	0
  9040  000EA4  6FA7               	movwf	(hole_dispense_function@tick+2)& (0+255),b
  9041  000EA6  0E00               	movlw	0
  9042  000EA8  6FA8               	movwf	(hole_dispense_function@tick+3)& (0+255),b
  9043                           
  9044                           ;dispense.c: 131: while(tick<70){
  9045  000EAA  D024               	goto	l841
  9046  000EAC                     l842:
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;dispense.c: 134: LATAbits.LATA4 = 1;
  9050  000EAC  8889               	bsf	3977,4,c	;volatile
  9051                           
  9052                           ; BSR set to: 0
  9053                           ;dispense.c: 135: _delay((unsigned long)((1.85)*(10000000/4000.0)));
  9054  000EAE  0E06               	movlw	6
  9055  000EB0  0100               	movlb	0	; () banked
  9056  000EB2  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  9057  000EB4  0E00               	movlw	0
  9058  000EB6                     u13317:
  9059  000EB6  2EE8               	decfsz	wreg,f,c
  9060  000EB8  D7FE               	bra	u13317
  9061  000EBA  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  9062  000EBC  D7FC               	bra	u13317
  9063  000EBE  D000               	nop2	
  9064                           
  9065                           ;dispense.c: 137: LATAbits.LATA4 = 0;
  9066  000EC0  9889               	bcf	3977,4,c	;volatile
  9067                           
  9068                           ;dispense.c: 138: _delay((unsigned long)((17.15)*(10000000/4000.0)));
  9069  000EC2  0E38               	movlw	56
  9070  000EC4  0100               	movlb	0	; () banked
  9071  000EC6  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  9072  000EC8  0EAD               	movlw	173
  9073  000ECA                     u13327:
  9074  000ECA  2EE8               	decfsz	wreg,f,c
  9075  000ECC  D7FE               	bra	u13327
  9076  000ECE  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  9077  000ED0  D7FC               	bra	u13327
  9078  000ED2  F000               	nop	
  9079                           
  9080                           ;dispense.c: 140: tick ++;
  9081  000ED4  0E01               	movlw	1
  9082  000ED6  0100               	movlb	0	; () banked
  9083  000ED8  27A5               	addwf	hole_dispense_function@tick& (0+255),f,b
  9084  000EDA  0E00               	movlw	0
  9085  000EDC  23A6               	addwfc	(hole_dispense_function@tick+1)& (0+255),f,b
  9086  000EDE  23A7               	addwfc	(hole_dispense_function@tick+2)& (0+255),f,b
  9087  000EE0  23A8               	addwfc	(hole_dispense_function@tick+3)& (0+255),f,b
  9088                           
  9089                           ; BSR set to: 0
  9090                           ;dispense.c: 141: _delay((unsigned long)((1)*(10000000/4000.0)));
  9091  000EE2  0E04               	movlw	4
  9092  000EE4  0100               	movlb	0	; () banked
  9093  000EE6  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  9094  000EE8  0E3D               	movlw	61
  9095  000EEA                     u13337:
  9096  000EEA  2EE8               	decfsz	wreg,f,c
  9097  000EEC  D7FE               	bra	u13337
  9098  000EEE  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  9099  000EF0  D7FC               	bra	u13337
  9100  000EF2  D000               	nop2	
  9101  000EF4                     l841:
  9102  000EF4  0100               	movlb	0	; () banked
  9103  000EF6  51A8               	movf	(hole_dispense_function@tick+3)& (0+255),w,b
  9104  000EF8  11A7               	iorwf	(hole_dispense_function@tick+2)& (0+255),w,b
  9105  000EFA  11A6               	iorwf	(hole_dispense_function@tick+1)& (0+255),w,b
  9106  000EFC  E104               	bnz	u10410
  9107  000EFE  0E46               	movlw	70
  9108  000F00  5DA5               	subwf	hole_dispense_function@tick& (0+255),w,b
  9109  000F02  A0D8               	btfss	status,0,c
  9110  000F04  D7D3               	goto	l842
  9111  000F06                     u10410:
  9112                           
  9113                           ; BSR set to: 0
  9114                           ;dispense.c: 144: _delay((unsigned long)((100)*(10000000/4000.0)));
  9115                           
  9116                           ; BSR set to: 0
  9117  000F06  0E02               	movlw	2
  9118  000F08  0100               	movlb	0	; () banked
  9119  000F0A  6FA4               	movwf	(??_hole_dispense_function+1)& (0+255),b
  9120  000F0C  0E45               	movlw	69
  9121  000F0E  6FA3               	movwf	??_hole_dispense_function& (0+255),b
  9122  000F10  0EA9               	movlw	169
  9123  000F12                     u13347:
  9124  000F12  2EE8               	decfsz	wreg,f,c
  9125  000F14  D7FE               	bra	u13347
  9126  000F16  2FA3               	decfsz	??_hole_dispense_function& (0+255),f,b
  9127  000F18  D7FC               	bra	u13347
  9128  000F1A  2FA4               	decfsz	(??_hole_dispense_function+1)& (0+255),f,b
  9129  000F1C  D7FA               	bra	u13347
  9130  000F1E  D000               	nop2	
  9131                           
  9132                           ;dispense.c: 145: cones_deployed +=1;
  9133  000F20  0100               	movlb	0	; () banked
  9134  000F22  4BD6               	infsnz	_cones_deployed& (0+255),f,b
  9135  000F24  2BD7               	incf	(_cones_deployed+1)& (0+255),f,b
  9136                           
  9137                           ; BSR set to: 0
  9138  000F26  0012               	return		;funcret
  9139  000F28                     __end_of_hole_dispense_function:
  9140                           	opt callstack 0
  9141                           
  9142 ;; *************** function ___flsub *****************
  9143 ;; Defined at:
  9144 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  9145 ;; Parameters:    Size  Location     Type
  9146 ;;  b               4   16[BANK0 ] void 
  9147 ;;  a               4   20[BANK0 ] void 
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  4   16[BANK0 ] void 
  9152 ;; Registers used:
  9153 ;;		wreg, status,2, status,0, cstack
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9159 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9162 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9163 ;;Total ram usage:        8 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; Hardware stack levels required when called:    9
  9166 ;; This function calls:
  9167 ;;		___fladd
  9168 ;; This function is called by:
  9169 ;;		_hole_drop_bool_function
  9170 ;;		_crack_drop_bool_function
  9171 ;;		_middle_crack_drop
  9172 ;;		_left_crack_drop
  9173 ;;		_right_crack_drop
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text31
  9178  005052                     __ptext31:
  9179                           	opt callstack 0
  9180  005052                     ___flsub:
  9181                           	opt callstack 19
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;incstack = 0
  9185  005052  0E00               	movlw	0
  9186  005054  0100               	movlb	0	; () banked
  9187  005056  1B94               	xorwf	___flsub@a& (0+255),f,b
  9188  005058  0E00               	movlw	0
  9189  00505A  1B95               	xorwf	(___flsub@a+1)& (0+255),f,b
  9190  00505C  0E00               	movlw	0
  9191  00505E  1B96               	xorwf	(___flsub@a+2)& (0+255),f,b
  9192  005060  0E80               	movlw	128
  9193  005062  1B97               	xorwf	(___flsub@a+3)& (0+255),f,b
  9194                           
  9195                           ; BSR set to: 0
  9196  005064  C090  F080         	movff	___flsub@b,___fladd@b
  9197  005068  C091  F081         	movff	___flsub@b+1,___fladd@b+1
  9198  00506C  C092  F082         	movff	___flsub@b+2,___fladd@b+2
  9199  005070  C093  F083         	movff	___flsub@b+3,___fladd@b+3
  9200  005074  C094  F084         	movff	___flsub@a,___fladd@a
  9201  005078  C095  F085         	movff	___flsub@a+1,___fladd@a+1
  9202  00507C  C096  F086         	movff	___flsub@a+2,___fladd@a+2
  9203  005080  C097  F087         	movff	___flsub@a+3,___fladd@a+3
  9204  005084  ECEB  F00A         	call	___fladd	;wreg free
  9205  005088  C080  F090         	movff	?___fladd,?___flsub
  9206  00508C  C081  F091         	movff	?___fladd+1,?___flsub+1
  9207  005090  C082  F092         	movff	?___fladd+2,?___flsub+2
  9208  005094  C083  F093         	movff	?___fladd+3,?___flsub+3
  9209  005098  0012               	return		;funcret
  9210  00509A                     __end_of___flsub:
  9211                           	opt callstack 0
  9212                           
  9213 ;; *************** function _data_select *****************
  9214 ;; Defined at:
  9215 ;;		line 154 in file "display.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9231 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9232 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9233 ;;Total ram usage:        2 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; Hardware stack levels required when called:   14
  9236 ;; This function calls:
  9237 ;;		_data1
  9238 ;;		_data2
  9239 ;;		_data3
  9240 ;;		_data4
  9241 ;; This function is called by:
  9242 ;;		_main
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text32
  9247  004D40                     __ptext32:
  9248                           	opt callstack 0
  9249  004D40                     _data_select:
  9250                           	opt callstack 16
  9251                           
  9252                           ;display.c: 155: if (ddp == 0){
  9253                           
  9254                           ;incstack = 0
  9255  004D40  0100               	movlb	0	; () banked
  9256  004D42  51D2               	movf	_ddp& (0+255),w,b
  9257  004D44  11D3               	iorwf	(_ddp+1)& (0+255),w,b
  9258  004D46  A4D8               	btfss	status,2,c
  9259  004D48  D003               	goto	l12058
  9260                           
  9261                           ; BSR set to: 0
  9262                           ;display.c: 156: data1();
  9263  004D4A  ECA5  F029         	call	_data1	;wreg free
  9264                           
  9265                           ;display.c: 157: }
  9266  004D4E  D015               	goto	l1631
  9267  004D50                     l12058:
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;display.c: 158: else if (ddp ==1){
  9271  004D50  05D2               	decf	_ddp& (0+255),w,b
  9272  004D52  11D3               	iorwf	(_ddp+1)& (0+255),w,b
  9273  004D54  A4D8               	btfss	status,2,c
  9274  004D56  D003               	goto	l12062
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;display.c: 159: data2();
  9278  004D58  ECE8  F028         	call	_data2	;wreg free
  9279                           
  9280                           ;display.c: 160: }
  9281  004D5C  D00E               	goto	l1631
  9282  004D5E                     l12062:
  9283                           
  9284                           ; BSR set to: 0
  9285                           ;display.c: 161: else if (ddp ==2){
  9286  004D5E  0E02               	movlw	2
  9287  004D60  19D2               	xorwf	_ddp& (0+255),w,b
  9288  004D62  11D3               	iorwf	(_ddp+1)& (0+255),w,b
  9289  004D64  A4D8               	btfss	status,2,c
  9290  004D66  D003               	goto	l12066
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;display.c: 162: data3();
  9294  004D68  ECDE  F027         	call	_data3	;wreg free
  9295                           
  9296                           ;display.c: 163: }
  9297  004D6C  D006               	goto	l1631
  9298  004D6E                     l12066:
  9299                           
  9300                           ; BSR set to: 0
  9301                           ;display.c: 164: else if (ddp ==3){
  9302  004D6E  0E03               	movlw	3
  9303  004D70  19D2               	xorwf	_ddp& (0+255),w,b
  9304  004D72  11D3               	iorwf	(_ddp+1)& (0+255),w,b
  9305  004D74  B4D8               	btfsc	status,2,c
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;display.c: 165: data4();
  9309  004D76  ECB8  F027         	call	_data4	;wreg free
  9310  004D7A                     l1631:
  9311                           
  9312                           ;display.c: 166: };display.c: 167: ddp = (ddp+1)%4;
  9313                           
  9314                           ; BSR set to: 0
  9315  004D7A  0E01               	movlw	1
  9316  004D7C  0100               	movlb	0	; () banked
  9317  004D7E  25D2               	addwf	_ddp& (0+255),w,b
  9318  004D80  6FA3               	movwf	??_data_select& (0+255),b
  9319  004D82  0E00               	movlw	0
  9320  004D84  21D3               	addwfc	(_ddp+1)& (0+255),w,b
  9321  004D86  6FA4               	movwf	(??_data_select+1)& (0+255),b
  9322  004D88  0E03               	movlw	3
  9323  004D8A  15A3               	andwf	??_data_select& (0+255),w,b
  9324  004D8C  6FD2               	movwf	_ddp& (0+255),b
  9325  004D8E  6BD3               	clrf	(_ddp+1)& (0+255),b
  9326                           
  9327                           ; BSR set to: 0
  9328  004D90  0012               	return		;funcret
  9329  004D92                     __end_of_data_select:
  9330                           	opt callstack 0
  9331                           
  9332 ;; *************** function _data4 *****************
  9333 ;; Defined at:
  9334 ;;		line 333 in file "display.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;		None
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9352 ;;Total ram usage:        0 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; Hardware stack levels required when called:   13
  9355 ;; This function calls:
  9356 ;;		_lcdInst
  9357 ;;		_printf
  9358 ;; This function is called by:
  9359 ;;		_data_select
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           	psect	text33
  9364  004F70                     __ptext33:
  9365                           	opt callstack 0
  9366  004F70                     _data4:
  9367                           	opt callstack 16
  9368                           
  9369                           ;display.c: 334: printf("Press 4:");
  9370                           
  9371                           ; BSR set to: 0
  9372                           ;incstack = 0
  9373  004F70  0EAB               	movlw	low STR_69
  9374  004F72  0100               	movlb	0	; () banked
  9375  004F74  6F8E               	movwf	printf@f& (0+255),b
  9376  004F76  0EFF               	movlw	high STR_69
  9377  004F78  6F8F               	movwf	(printf@f+1)& (0+255),b
  9378  004F7A  EC81  F010         	call	_printf	;wreg free
  9379  004F7E  0EC0               	movlw	192
  9380  004F80  EC9A  F02A         	call	_lcdInst
  9381                           
  9382                           ;display.c: 336: printf("Number and ");
  9383  004F84  0ED4               	movlw	low STR_66
  9384  004F86  0100               	movlb	0	; () banked
  9385  004F88  6F8E               	movwf	printf@f& (0+255),b
  9386  004F8A  0EFE               	movlw	high STR_66
  9387  004F8C  6F8F               	movwf	(printf@f+1)& (0+255),b
  9388  004F8E  EC81  F010         	call	_printf	;wreg free
  9389  004F92  0E90               	movlw	144
  9390  004F94  EC9A  F02A         	call	_lcdInst
  9391                           
  9392                           ;display.c: 338: printf("Location of ");
  9393  004F98  0E93               	movlw	low STR_67
  9394  004F9A  0100               	movlb	0	; () banked
  9395  004F9C  6F8E               	movwf	printf@f& (0+255),b
  9396  004F9E  0EFE               	movlw	high STR_67
  9397  004FA0  6F8F               	movwf	(printf@f+1)& (0+255),b
  9398  004FA2  EC81  F010         	call	_printf	;wreg free
  9399  004FA6  0ED0               	movlw	208
  9400  004FA8  EC9A  F02A         	call	_lcdInst
  9401                           
  9402                           ;display.c: 340: printf("Cracks Detected");
  9403  004FAC  0EDF               	movlw	low STR_72
  9404  004FAE  0100               	movlb	0	; () banked
  9405  004FB0  6F8E               	movwf	printf@f& (0+255),b
  9406  004FB2  0EFD               	movlw	high STR_72
  9407  004FB4  6F8F               	movwf	(printf@f+1)& (0+255),b
  9408  004FB6  EC81  F010         	call	_printf	;wreg free
  9409  004FBA  0012               	return		;funcret
  9410  004FBC                     __end_of_data4:
  9411                           	opt callstack 0
  9412                           
  9413 ;; *************** function _data3 *****************
  9414 ;; Defined at:
  9415 ;;		line 323 in file "display.c"
  9416 ;; Parameters:    Size  Location     Type
  9417 ;;		None
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;		None
  9420 ;; Return value:  Size  Location     Type
  9421 ;;                  1    wreg      void 
  9422 ;; Registers used:
  9423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9424 ;; Tracked objects:
  9425 ;;		On entry : 0/0
  9426 ;;		On exit  : 0/0
  9427 ;;		Unchanged: 0/0
  9428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9433 ;;Total ram usage:        0 bytes
  9434 ;; Hardware stack levels used:    1
  9435 ;; Hardware stack levels required when called:   13
  9436 ;; This function calls:
  9437 ;;		_lcdInst
  9438 ;;		_printf
  9439 ;; This function is called by:
  9440 ;;		_data_select
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           	psect	text34
  9445  004FBC                     __ptext34:
  9446                           	opt callstack 0
  9447  004FBC                     _data3:
  9448                           	opt callstack 16
  9449                           
  9450                           ;display.c: 324: printf("Press 3:");
  9451                           
  9452                           ;incstack = 0
  9453  004FBC  0EA2               	movlw	low STR_65
  9454  004FBE  0100               	movlb	0	; () banked
  9455  004FC0  6F8E               	movwf	printf@f& (0+255),b
  9456  004FC2  0EFF               	movlw	high STR_65
  9457  004FC4  6F8F               	movwf	(printf@f+1)& (0+255),b
  9458  004FC6  EC81  F010         	call	_printf	;wreg free
  9459  004FCA  0EC0               	movlw	192
  9460  004FCC  EC9A  F02A         	call	_lcdInst
  9461                           
  9462                           ;display.c: 326: printf("Number and ");
  9463  004FD0  0ED4               	movlw	low STR_66
  9464  004FD2  0100               	movlb	0	; () banked
  9465  004FD4  6F8E               	movwf	printf@f& (0+255),b
  9466  004FD6  0EFE               	movlw	high STR_66
  9467  004FD8  6F8F               	movwf	(printf@f+1)& (0+255),b
  9468  004FDA  EC81  F010         	call	_printf	;wreg free
  9469  004FDE  0E90               	movlw	144
  9470  004FE0  EC9A  F02A         	call	_lcdInst
  9471                           
  9472                           ;display.c: 328: printf("Location of ");
  9473  004FE4  0E93               	movlw	low STR_67
  9474  004FE6  0100               	movlb	0	; () banked
  9475  004FE8  6F8E               	movwf	printf@f& (0+255),b
  9476  004FEA  0EFE               	movlw	high STR_67
  9477  004FEC  6F8F               	movwf	(printf@f+1)& (0+255),b
  9478  004FEE  EC81  F010         	call	_printf	;wreg free
  9479  004FF2  0ED0               	movlw	208
  9480  004FF4  EC9A  F02A         	call	_lcdInst
  9481                           
  9482                           ;display.c: 330: printf("Holes Detected");
  9483  004FF8  0E2D               	movlw	low STR_68
  9484  004FFA  0100               	movlb	0	; () banked
  9485  004FFC  6F8E               	movwf	printf@f& (0+255),b
  9486  004FFE  0EFE               	movlw	high STR_68
  9487  005000  6F8F               	movwf	(printf@f+1)& (0+255),b
  9488  005002  EC81  F010         	call	_printf	;wreg free
  9489  005006  0012               	return		;funcret
  9490  005008                     __end_of_data3:
  9491                           	opt callstack 0
  9492                           
  9493 ;; *************** function _data2 *****************
  9494 ;; Defined at:
  9495 ;;		line 315 in file "display.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;		None
  9498 ;; Auto vars:     Size  Location     Type
  9499 ;;		None
  9500 ;; Return value:  Size  Location     Type
  9501 ;;                  1    wreg      void 
  9502 ;; Registers used:
  9503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9504 ;; Tracked objects:
  9505 ;;		On entry : 0/0
  9506 ;;		On exit  : 0/0
  9507 ;;		Unchanged: 0/0
  9508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9513 ;;Total ram usage:        0 bytes
  9514 ;; Hardware stack levels used:    1
  9515 ;; Hardware stack levels required when called:   13
  9516 ;; This function calls:
  9517 ;;		_lcdInst
  9518 ;;		_printf
  9519 ;; This function is called by:
  9520 ;;		_data_select
  9521 ;; This function uses a non-reentrant model
  9522 ;;
  9523                           
  9524                           	psect	text35
  9525  0051D0                     __ptext35:
  9526                           	opt callstack 0
  9527  0051D0                     _data2:
  9528                           	opt callstack 16
  9529                           
  9530                           ;display.c: 316: printf("Press 2:");
  9531                           
  9532                           ;incstack = 0
  9533  0051D0  0E99               	movlw	low STR_62
  9534  0051D2  0100               	movlb	0	; () banked
  9535  0051D4  6F8E               	movwf	printf@f& (0+255),b
  9536  0051D6  0EFF               	movlw	high STR_62
  9537  0051D8  6F8F               	movwf	(printf@f+1)& (0+255),b
  9538  0051DA  EC81  F010         	call	_printf	;wreg free
  9539  0051DE  0EC0               	movlw	192
  9540  0051E0  EC9A  F02A         	call	_lcdInst
  9541                           
  9542                           ;display.c: 318: printf("Number of");
  9543  0051E4  0E38               	movlw	low STR_63
  9544  0051E6  0100               	movlb	0	; () banked
  9545  0051E8  6F8E               	movwf	printf@f& (0+255),b
  9546  0051EA  0EFF               	movlw	high STR_63
  9547  0051EC  6F8F               	movwf	(printf@f+1)& (0+255),b
  9548  0051EE  EC81  F010         	call	_printf	;wreg free
  9549  0051F2  0E90               	movlw	144
  9550  0051F4  EC9A  F02A         	call	_lcdInst
  9551                           
  9552                           ;display.c: 320: printf("Cones Deployed");
  9553  0051F8  0E3C               	movlw	low STR_64
  9554  0051FA  0100               	movlb	0	; () banked
  9555  0051FC  6F8E               	movwf	printf@f& (0+255),b
  9556  0051FE  0EFE               	movlw	high STR_64
  9557  005200  6F8F               	movwf	(printf@f+1)& (0+255),b
  9558  005202  EC81  F010         	call	_printf	;wreg free
  9559  005206  0012               	return		;funcret
  9560  005208                     __end_of_data2:
  9561                           	opt callstack 0
  9562                           
  9563 ;; *************** function _data1 *****************
  9564 ;; Defined at:
  9565 ;;		line 309 in file "display.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9583 ;;Total ram usage:        0 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:   13
  9586 ;; This function calls:
  9587 ;;		_lcdInst
  9588 ;;		_printf
  9589 ;; This function is called by:
  9590 ;;		_data_select
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text36
  9595  00534A                     __ptext36:
  9596                           	opt callstack 0
  9597  00534A                     _data1:
  9598                           	opt callstack 16
  9599                           
  9600                           ;display.c: 310: printf("Press 1:");
  9601                           
  9602                           ;incstack = 0
  9603  00534A  0E90               	movlw	low STR_60
  9604  00534C  0100               	movlb	0	; () banked
  9605  00534E  6F8E               	movwf	printf@f& (0+255),b
  9606  005350  0EFF               	movlw	high STR_60
  9607  005352  6F8F               	movwf	(printf@f+1)& (0+255),b
  9608  005354  EC81  F010         	call	_printf	;wreg free
  9609  005358  0EC0               	movlw	192
  9610  00535A  EC9A  F02A         	call	_lcdInst
  9611                           
  9612                           ;display.c: 312: printf("Operation Time");
  9613  00535E  0E4B               	movlw	low STR_61
  9614  005360  0100               	movlb	0	; () banked
  9615  005362  6F8E               	movwf	printf@f& (0+255),b
  9616  005364  0EFE               	movlw	high STR_61
  9617  005366  6F8F               	movwf	(printf@f+1)& (0+255),b
  9618  005368  EC81  F010         	call	_printf	;wreg free
  9619  00536C  0012               	return		;funcret
  9620  00536E                     __end_of_data1:
  9621                           	opt callstack 0
  9622                           
  9623 ;; *************** function _data_disp *****************
  9624 ;; Defined at:
  9625 ;;		line 12 in file "display.c"
  9626 ;; Parameters:    Size  Location     Type
  9627 ;;		None
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  length_i        2    4[BANK1 ] int 
  9630 ;;  length_i        2    6[BANK1 ] int 
  9631 ;;  temp_read       2    2[BANK1 ] int 
  9632 ;;  datalength      2    8[BANK1 ] int 
  9633 ;; Return value:  Size  Location     Type
  9634 ;;                  1    wreg      void 
  9635 ;; Registers used:
  9636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9637 ;; Tracked objects:
  9638 ;;		On entry : 0/0
  9639 ;;		On exit  : 0/0
  9640 ;;		Unchanged: 0/0
  9641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9643 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9644 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9645 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9646 ;;Total ram usage:       10 bytes
  9647 ;; Hardware stack levels used:    1
  9648 ;; Hardware stack levels required when called:   15
  9649 ;; This function calls:
  9650 ;;		_Cones
  9651 ;;		_Cracks
  9652 ;;		_Holes2
  9653 ;;		___awdiv
  9654 ;;		___awmod
  9655 ;;		_one_byte_reader
  9656 ;;		_ot
  9657 ;;		_read_pointer
  9658 ;;		_subtract
  9659 ;; This function is called by:
  9660 ;;		_main
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           	psect	text37
  9665  000F28                     __ptext37:
  9666                           	opt callstack 0
  9667  000F28                     _data_disp:
  9668                           	opt callstack 15
  9669                           
  9670                           ;display.c: 13: read_pointer();
  9671                           
  9672                           ;incstack = 0
  9673  000F28  EC6D  F029         	call	_read_pointer	;wreg free
  9674                           
  9675                           ;display.c: 15: int datalength = 0;
  9676  000F2C  0E00               	movlw	0
  9677  000F2E  0101               	movlb	1	; () banked
  9678  000F30  6F9B               	movwf	(data_disp@datalength+1)& (0+255),b
  9679  000F32  0E00               	movlw	0
  9680  000F34  6F9A               	movwf	data_disp@datalength& (0+255),b
  9681                           
  9682                           ; BSR set to: 1
  9683                           ;display.c: 16: if(reg%10 == 1){
  9684  000F36  C0D0  F080         	movff	_reg,___awmod@dividend
  9685  000F3A  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
  9686  000F3E  0E00               	movlw	0
  9687  000F40  0100               	movlb	0	; () banked
  9688  000F42  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9689  000F44  0E0A               	movlw	10
  9690  000F46  6F82               	movwf	___awmod@divisor& (0+255),b
  9691  000F48  EC7F  F024         	call	___awmod	;wreg free
  9692  000F4C  0100               	movlb	0	; () banked
  9693  000F4E  0580               	decf	?___awmod& (0+255),w,b
  9694  000F50  1181               	iorwf	(?___awmod+1)& (0+255),w,b
  9695  000F52  A4D8               	btfss	status,2,c
  9696  000F54  D01C               	goto	l12082
  9697                           
  9698                           ; BSR set to: 0
  9699                           ;display.c: 17: read_pntr = (total_op +1 - reg/10)*56 - 4 + 2;
  9700  000F56  5044               	movf	_total_op,w,c
  9701  000F58  0D38               	mullw	56
  9702  000F5A  CFF3 F192          	movff	prodl,??_data_disp
  9703  000F5E  C0D0  F080         	movff	_reg,___awdiv@dividend
  9704  000F62  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  9705  000F66  0E00               	movlw	0
  9706  000F68  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  9707  000F6A  0E0A               	movlw	10
  9708  000F6C  6F82               	movwf	___awdiv@divisor& (0+255),b
  9709  000F6E  EC8D  F022         	call	___awdiv	;wreg free
  9710  000F72  0100               	movlb	0	; () banked
  9711  000F74  5180               	movf	?___awdiv& (0+255),w,b
  9712  000F76  0DC8               	mullw	200
  9713  000F78  50F3               	movf	prodl,w,c
  9714  000F7A  0101               	movlb	1	; () banked
  9715  000F7C  2592               	addwf	??_data_disp& (0+255),w,b
  9716  000F7E  0F36               	addlw	54
  9717  000F80  0100               	movlb	0	; () banked
  9718  000F82  6FE2               	movwf	_read_pntr& (0+255),b
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;display.c: 18: datalength = 3;}
  9722  000F84  0E00               	movlw	0
  9723  000F86  0101               	movlb	1	; () banked
  9724  000F88  6F9B               	movwf	(data_disp@datalength+1)& (0+255),b
  9725  000F8A  0E03               	movlw	3
  9726  000F8C  D057               	goto	L9
  9727  000F8E                     l12082:
  9728                           
  9729                           ; BSR set to: 0
  9730                           ;display.c: 19: else if (reg%10 == 2){
  9731  000F8E  C0D0  F080         	movff	_reg,___awmod@dividend
  9732  000F92  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
  9733  000F96  0E00               	movlw	0
  9734  000F98  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9735  000F9A  0E0A               	movlw	10
  9736  000F9C  6F82               	movwf	___awmod@divisor& (0+255),b
  9737  000F9E  EC7F  F024         	call	___awmod	;wreg free
  9738  000FA2  0E02               	movlw	2
  9739  000FA4  0100               	movlb	0	; () banked
  9740  000FA6  1980               	xorwf	?___awmod& (0+255),w,b
  9741  000FA8  1181               	iorwf	(?___awmod+1)& (0+255),w,b
  9742  000FAA  A4D8               	btfss	status,2,c
  9743  000FAC  D01C               	goto	l12088
  9744                           
  9745                           ; BSR set to: 0
  9746                           ;display.c: 20: read_pntr = (total_op +1- reg/10)*56 - 7 + 2;
  9747  000FAE  5044               	movf	_total_op,w,c
  9748  000FB0  0D38               	mullw	56
  9749  000FB2  CFF3 F192          	movff	prodl,??_data_disp
  9750  000FB6  C0D0  F080         	movff	_reg,___awdiv@dividend
  9751  000FBA  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  9752  000FBE  0E00               	movlw	0
  9753  000FC0  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  9754  000FC2  0E0A               	movlw	10
  9755  000FC4  6F82               	movwf	___awdiv@divisor& (0+255),b
  9756  000FC6  EC8D  F022         	call	___awdiv	;wreg free
  9757  000FCA  0100               	movlb	0	; () banked
  9758  000FCC  5180               	movf	?___awdiv& (0+255),w,b
  9759  000FCE  0DC8               	mullw	200
  9760  000FD0  50F3               	movf	prodl,w,c
  9761  000FD2  0101               	movlb	1	; () banked
  9762  000FD4  2592               	addwf	??_data_disp& (0+255),w,b
  9763  000FD6  0F33               	addlw	51
  9764  000FD8  0100               	movlb	0	; () banked
  9765  000FDA  6FE2               	movwf	_read_pntr& (0+255),b
  9766                           
  9767                           ; BSR set to: 0
  9768                           ;display.c: 21: datalength = 1;}
  9769  000FDC  0E00               	movlw	0
  9770  000FDE  0101               	movlb	1	; () banked
  9771  000FE0  6F9B               	movwf	(data_disp@datalength+1)& (0+255),b
  9772  000FE2  0E01               	movlw	1
  9773  000FE4  D02B               	goto	L9
  9774  000FE6                     l12088:
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;display.c: 22: else if (reg%10 == 3){
  9778  000FE6  C0D0  F080         	movff	_reg,___awmod@dividend
  9779  000FEA  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
  9780  000FEE  0E00               	movlw	0
  9781  000FF0  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9782  000FF2  0E0A               	movlw	10
  9783  000FF4  6F82               	movwf	___awmod@divisor& (0+255),b
  9784  000FF6  EC7F  F024         	call	___awmod	;wreg free
  9785  000FFA  0E03               	movlw	3
  9786  000FFC  0100               	movlb	0	; () banked
  9787  000FFE  1980               	xorwf	?___awmod& (0+255),w,b
  9788  001000  1181               	iorwf	(?___awmod+1)& (0+255),w,b
  9789  001002  A4D8               	btfss	status,2,c
  9790  001004  D01D               	goto	l12094
  9791                           
  9792                           ; BSR set to: 0
  9793                           ;display.c: 23: read_pntr = (total_op +1- reg/10)*56 - 8 + 2;
  9794  001006  5044               	movf	_total_op,w,c
  9795  001008  0D38               	mullw	56
  9796  00100A  CFF3 F192          	movff	prodl,??_data_disp
  9797  00100E  C0D0  F080         	movff	_reg,___awdiv@dividend
  9798  001012  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  9799  001016  0E00               	movlw	0
  9800  001018  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  9801  00101A  0E0A               	movlw	10
  9802  00101C  6F82               	movwf	___awdiv@divisor& (0+255),b
  9803  00101E  EC8D  F022         	call	___awdiv	;wreg free
  9804  001022  0100               	movlb	0	; () banked
  9805  001024  5180               	movf	?___awdiv& (0+255),w,b
  9806  001026  0DC8               	mullw	200
  9807  001028  50F3               	movf	prodl,w,c
  9808  00102A  0101               	movlb	1	; () banked
  9809  00102C  2592               	addwf	??_data_disp& (0+255),w,b
  9810  00102E  0F32               	addlw	50
  9811  001030  0100               	movlb	0	; () banked
  9812  001032  6FE2               	movwf	_read_pntr& (0+255),b
  9813                           
  9814                           ; BSR set to: 0
  9815                           ;display.c: 24: datalength = 25;}
  9816  001034  0E00               	movlw	0
  9817  001036  0101               	movlb	1	; () banked
  9818  001038  6F9B               	movwf	(data_disp@datalength+1)& (0+255),b
  9819  00103A  0E19               	movlw	25
  9820  00103C                     L9:
  9821  00103C  6F9A               	movwf	data_disp@datalength& (0+255),b
  9822  00103E  D026               	goto	l1574
  9823  001040                     l12094:
  9824                           
  9825                           ; BSR set to: 0
  9826                           ;display.c: 25: else if (reg%10 == 4){
  9827  001040  C0D0  F080         	movff	_reg,___awmod@dividend
  9828  001044  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
  9829  001048  0E00               	movlw	0
  9830  00104A  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
  9831  00104C  0E0A               	movlw	10
  9832  00104E  6F82               	movwf	___awmod@divisor& (0+255),b
  9833  001050  EC7F  F024         	call	___awmod	;wreg free
  9834  001054  0E04               	movlw	4
  9835  001056  0100               	movlb	0	; () banked
  9836  001058  1980               	xorwf	?___awmod& (0+255),w,b
  9837  00105A  1181               	iorwf	(?___awmod+1)& (0+255),w,b
  9838  00105C  A4D8               	btfss	status,2,c
  9839  00105E  D016               	goto	l1574
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;display.c: 26: read_pntr = (total_op +1- reg/10)*56 - 33 + 2;
  9843  001060  5044               	movf	_total_op,w,c
  9844  001062  0D38               	mullw	56
  9845  001064  CFF3 F192          	movff	prodl,??_data_disp
  9846  001068  C0D0  F080         	movff	_reg,___awdiv@dividend
  9847  00106C  C0D1  F081         	movff	_reg+1,___awdiv@dividend+1
  9848  001070  0E00               	movlw	0
  9849  001072  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  9850  001074  0E0A               	movlw	10
  9851  001076  6F82               	movwf	___awdiv@divisor& (0+255),b
  9852  001078  EC8D  F022         	call	___awdiv	;wreg free
  9853  00107C  0100               	movlb	0	; () banked
  9854  00107E  5180               	movf	?___awdiv& (0+255),w,b
  9855  001080  0DC8               	mullw	200
  9856  001082  50F3               	movf	prodl,w,c
  9857  001084  0101               	movlb	1	; () banked
  9858  001086  2592               	addwf	??_data_disp& (0+255),w,b
  9859  001088  0F19               	addlw	25
  9860  00108A  D7D2               	goto	L7
  9861  00108C                     l1574:
  9862                           
  9863                           ;display.c: 28: subtract();
  9864                           
  9865                           ; BSR set to: 0
  9866  00108C  EC0D  F02A         	call	_subtract	;wreg free
  9867                           
  9868                           ;display.c: 30: if (datalength == 25){
  9869  001090  0E19               	movlw	25
  9870  001092  0101               	movlb	1	; () banked
  9871  001094  199A               	xorwf	data_disp@datalength& (0+255),w,b
  9872  001096  119B               	iorwf	(data_disp@datalength+1)& (0+255),w,b
  9873  001098  A4D8               	btfss	status,2,c
  9874  00109A  D062               	goto	l12132
  9875                           
  9876                           ; BSR set to: 1
  9877                           ;display.c: 31: print_data[0]= one_byte_reader(addr,addrh);
  9878  00109C  C0E3  F080         	movff	_addrh,one_byte_reader@rh
  9879  0010A0  0100               	movlb	0	; () banked
  9880  0010A2  51E4               	movf	_addr& (0+255),w,b
  9881  0010A4  EC2B  F02A         	call	_one_byte_reader
  9882  0010A8  0101               	movlb	1	; () banked
  9883  0010AA  6F92               	movwf	??_data_disp& (0+255),b
  9884  0010AC  5192               	movf	??_data_disp& (0+255),w,b
  9885  0010AE  6F78               	movwf	_print_data& (0+255),b
  9886  0010B0  6B79               	clrf	(_print_data+1)& (0+255),b
  9887                           
  9888                           ; BSR set to: 1
  9889                           ;display.c: 32: addr +=1;
  9890  0010B2  0100               	movlb	0	; () banked
  9891  0010B4  2BE4               	incf	_addr& (0+255),f,b
  9892                           
  9893                           ; BSR set to: 0
  9894                           ;display.c: 33: if (addr == 0){
  9895  0010B6  51E4               	movf	_addr& (0+255),w,b
  9896  0010B8  B4D8               	btfsc	status,2,c
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;display.c: 34: addrh+=1;
  9900  0010BA  2BE3               	incf	_addrh& (0+255),f,b
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;display.c: 35: };display.c: 36: int temp_read = 0;
  9904  0010BC  0E00               	movlw	0
  9905  0010BE  0101               	movlb	1	; () banked
  9906  0010C0  6F95               	movwf	(data_disp@temp_read+1)& (0+255),b
  9907  0010C2  0E00               	movlw	0
  9908  0010C4  6F94               	movwf	data_disp@temp_read& (0+255),b
  9909                           
  9910                           ; BSR set to: 1
  9911                           ;display.c: 37: for (int length_i = 1;length_i<datalength;length_i++){
  9912  0010C6  0E00               	movlw	0
  9913  0010C8  6F99               	movwf	(data_disp@length_i+1)& (0+255),b
  9914  0010CA  0E01               	movlw	1
  9915  0010CC  6F98               	movwf	data_disp@length_i& (0+255),b
  9916  0010CE  D03D               	goto	l12130
  9917  0010D0                     l1581:
  9918                           
  9919                           ; BSR set to: 1
  9920                           ;display.c: 38: if (length_i%2 == 0){
  9921  0010D0  B198               	btfsc	data_disp@length_i& (0+255),0,b
  9922  0010D2  D02B               	goto	l12122
  9923                           
  9924                           ; BSR set to: 1
  9925                           ;display.c: 39: temp_read += one_byte_reader(addr,addrh);
  9926  0010D4  C0E3  F080         	movff	_addrh,one_byte_reader@rh
  9927  0010D8  0100               	movlb	0	; () banked
  9928  0010DA  51E4               	movf	_addr& (0+255),w,b
  9929  0010DC  EC2B  F02A         	call	_one_byte_reader
  9930  0010E0  0101               	movlb	1	; () banked
  9931  0010E2  6F92               	movwf	??_data_disp& (0+255),b
  9932  0010E4  5192               	movf	??_data_disp& (0+255),w,b
  9933  0010E6  2794               	addwf	data_disp@temp_read& (0+255),f,b
  9934  0010E8  0E00               	movlw	0
  9935  0010EA  2395               	addwfc	(data_disp@temp_read+1)& (0+255),f,b
  9936                           
  9937                           ; BSR set to: 1
  9938                           ;display.c: 40: print_data[(length_i / 2)] = temp_read;
  9939  0010EC  C198  F080         	movff	data_disp@length_i,___awdiv@dividend
  9940  0010F0  C199  F081         	movff	data_disp@length_i+1,___awdiv@dividend+1
  9941  0010F4  0E00               	movlw	0
  9942  0010F6  0100               	movlb	0	; () banked
  9943  0010F8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  9944  0010FA  0E02               	movlw	2
  9945  0010FC  6F82               	movwf	___awdiv@divisor& (0+255),b
  9946  0010FE  EC8D  F022         	call	___awdiv	;wreg free
  9947  001102  90D8               	bcf	status,0,c
  9948  001104  0100               	movlb	0	; () banked
  9949  001106  3780               	rlcf	?___awdiv& (0+255),f,b
  9950  001108  3781               	rlcf	(?___awdiv+1)& (0+255),f,b
  9951  00110A  0E78               	movlw	low _print_data
  9952  00110C  2580               	addwf	?___awdiv& (0+255),w,b
  9953  00110E  6ED9               	movwf	fsr2l,c
  9954  001110  0E01               	movlw	high _print_data
  9955  001112  2181               	addwfc	(?___awdiv+1)& (0+255),w,b
  9956  001114  6EDA               	movwf	fsr2h,c
  9957  001116  C194  FFDE         	movff	data_disp@temp_read,postinc2
  9958  00111A  C195  FFDD         	movff	data_disp@temp_read+1,postdec2
  9959                           
  9960                           ; BSR set to: 0
  9961                           ;display.c: 41: temp_read = 0;
  9962  00111E  0E00               	movlw	0
  9963  001120  0101               	movlb	1	; () banked
  9964  001122  6F95               	movwf	(data_disp@temp_read+1)& (0+255),b
  9965  001124  0E00               	movlw	0
  9966  001126  6F94               	movwf	data_disp@temp_read& (0+255),b
  9967                           
  9968                           ;display.c: 42: }
  9969  001128  D008               	goto	l12124
  9970  00112A                     l12122:
  9971                           
  9972                           ; BSR set to: 1
  9973                           ;display.c: 43: else{;display.c: 44: temp_read += 256 * one_byte_reader(addr,addrh);
  9974  00112A  C0E3  F080         	movff	_addrh,one_byte_reader@rh
  9975  00112E  0100               	movlb	0	; () banked
  9976  001130  51E4               	movf	_addr& (0+255),w,b
  9977  001132  EC2B  F02A         	call	_one_byte_reader
  9978  001136  0101               	movlb	1	; () banked
  9979  001138  2795               	addwf	(data_disp@temp_read+1)& (0+255),f,b
  9980  00113A                     l12124:
  9981                           
  9982                           ; BSR set to: 1
  9983                           ;display.c: 45: };display.c: 46: addr +=1;
  9984  00113A  0100               	movlb	0	; () banked
  9985  00113C  2BE4               	incf	_addr& (0+255),f,b
  9986                           
  9987                           ; BSR set to: 0
  9988                           ;display.c: 47: if (addr == 0){
  9989  00113E  51E4               	movf	_addr& (0+255),w,b
  9990  001140  B4D8               	btfsc	status,2,c
  9991                           
  9992                           ; BSR set to: 0
  9993                           ;display.c: 48: addrh+=1;
  9994  001142  2BE3               	incf	_addrh& (0+255),f,b
  9995                           
  9996                           ; BSR set to: 0
  9997  001144  0101               	movlb	1	; () banked
  9998  001146  4B98               	infsnz	data_disp@length_i& (0+255),f,b
  9999  001148  2B99               	incf	(data_disp@length_i+1)& (0+255),f,b
 10000  00114A                     l12130:
 10001                           
 10002                           ; BSR set to: 1
 10003  00114A  519A               	movf	data_disp@datalength& (0+255),w,b
 10004  00114C  5D98               	subwf	data_disp@length_i& (0+255),w,b
 10005  00114E  5199               	movf	(data_disp@length_i+1)& (0+255),w,b
 10006  001150  0A80               	xorlw	128
 10007  001152  6F92               	movwf	??_data_disp& (0+255),b
 10008  001154  519B               	movf	(data_disp@datalength+1)& (0+255),w,b
 10009  001156  0A80               	xorlw	128
 10010  001158  5992               	subwfb	??_data_disp& (0+255),w,b
 10011  00115A  B0D8               	btfsc	status,0,c
 10012  00115C  D02E               	goto	u12270
 10013  00115E  D7B8               	goto	l1581
 10014  001160                     l12132:
 10015                           
 10016                           ; BSR set to: 1
 10017                           ;display.c: 52: else{;display.c: 53: for (int length_i = 0;length_i<datalength;length_i+
      +                          +){
 10018  001160  0E00               	movlw	0
 10019  001162  6F97               	movwf	(data_disp@length_i_1925+1)& (0+255),b
 10020  001164  0E00               	movlw	0
 10021  001166  6F96               	movwf	data_disp@length_i_1925& (0+255),b
 10022  001168  D01E               	goto	l12142
 10023  00116A                     l12134:
 10024                           
 10025                           ; BSR set to: 1
 10026                           ;display.c: 54: print_data[length_i]= one_byte_reader(addr,addrh);
 10027  00116A  C0E3  F080         	movff	_addrh,one_byte_reader@rh
 10028  00116E  0100               	movlb	0	; () banked
 10029  001170  51E4               	movf	_addr& (0+255),w,b
 10030  001172  EC2B  F02A         	call	_one_byte_reader
 10031  001176  0101               	movlb	1	; () banked
 10032  001178  6F92               	movwf	??_data_disp& (0+255),b
 10033  00117A  6B93               	clrf	(??_data_disp+1)& (0+255),b
 10034  00117C  90D8               	bcf	status,0,c
 10035  00117E  3596               	rlcf	data_disp@length_i_1925& (0+255),w,b
 10036  001180  6ED9               	movwf	fsr2l,c
 10037  001182  3597               	rlcf	(data_disp@length_i_1925+1)& (0+255),w,b
 10038  001184  6EDA               	movwf	fsr2h,c
 10039  001186  0E78               	movlw	low _print_data
 10040  001188  26D9               	addwf	fsr2l,f,c
 10041  00118A  0E01               	movlw	high _print_data
 10042  00118C  22DA               	addwfc	fsr2h,f,c
 10043  00118E  C192  FFDE         	movff	??_data_disp,postinc2
 10044  001192  C193  FFDD         	movff	??_data_disp+1,postdec2
 10045                           
 10046                           ; BSR set to: 1
 10047                           ;display.c: 55: addr +=1;
 10048  001196  0100               	movlb	0	; () banked
 10049  001198  2BE4               	incf	_addr& (0+255),f,b
 10050                           
 10051                           ; BSR set to: 0
 10052                           ;display.c: 56: if (addr == 0){
 10053  00119A  51E4               	movf	_addr& (0+255),w,b
 10054  00119C  B4D8               	btfsc	status,2,c
 10055                           
 10056                           ; BSR set to: 0
 10057                           ;display.c: 57: addrh+=1;
 10058  00119E  2BE3               	incf	_addrh& (0+255),f,b
 10059                           
 10060                           ; BSR set to: 0
 10061  0011A0  0101               	movlb	1	; () banked
 10062  0011A2  4B96               	infsnz	data_disp@length_i_1925& (0+255),f,b
 10063  0011A4  2B97               	incf	(data_disp@length_i_1925+1)& (0+255),f,b
 10064  0011A6                     l12142:
 10065                           
 10066                           ; BSR set to: 1
 10067  0011A6  519A               	movf	data_disp@datalength& (0+255),w,b
 10068  0011A8  5D96               	subwf	data_disp@length_i_1925& (0+255),w,b
 10069  0011AA  5197               	movf	(data_disp@length_i_1925+1)& (0+255),w,b
 10070  0011AC  0A80               	xorlw	128
 10071  0011AE  6F92               	movwf	??_data_disp& (0+255),b
 10072  0011B0  519B               	movf	(data_disp@datalength+1)& (0+255),w,b
 10073  0011B2  0A80               	xorlw	128
 10074  0011B4  5992               	subwfb	??_data_disp& (0+255),w,b
 10075  0011B6  A0D8               	btfss	status,0,c
 10076  0011B8  D7D8               	goto	l12134
 10077  0011BA                     u12270:
 10078                           
 10079                           ; BSR set to: 1
 10080                           ;display.c: 58: };display.c: 59: };display.c: 60: };display.c: 61: if(reg%10 == 1){
 10081  0011BA  C0D0  F080         	movff	_reg,___awmod@dividend
 10082  0011BE  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
 10083  0011C2  0E00               	movlw	0
 10084  0011C4  0100               	movlb	0	; () banked
 10085  0011C6  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
 10086  0011C8  0E0A               	movlw	10
 10087  0011CA  6F82               	movwf	___awmod@divisor& (0+255),b
 10088  0011CC  EC7F  F024         	call	___awmod	;wreg free
 10089  0011D0  0100               	movlb	0	; () banked
 10090  0011D2  0580               	decf	?___awmod& (0+255),w,b
 10091  0011D4  1181               	iorwf	(?___awmod+1)& (0+255),w,b
 10092  0011D6  A4D8               	btfss	status,2,c
 10093  0011D8  D007               	goto	l12148
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;display.c: 62: ot(print_data);}
 10097  0011DA  0E78               	movlw	low _print_data
 10098  0011DC  6FA3               	movwf	ot@print_data& (0+255),b
 10099  0011DE  0E01               	movlw	high _print_data
 10100  0011E0  6FA4               	movwf	(ot@print_data+1)& (0+255),b
 10101  0011E2  EC8B  F020         	call	_ot	;wreg free
 10102  0011E6  0012               	return	
 10103  0011E8                     l12148:
 10104                           
 10105                           ; BSR set to: 0
 10106                           ;display.c: 63: else if (reg%10 == 2){
 10107  0011E8  C0D0  F080         	movff	_reg,___awmod@dividend
 10108  0011EC  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
 10109  0011F0  0E00               	movlw	0
 10110  0011F2  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
 10111  0011F4  0E0A               	movlw	10
 10112  0011F6  6F82               	movwf	___awmod@divisor& (0+255),b
 10113  0011F8  EC7F  F024         	call	___awmod	;wreg free
 10114  0011FC  0E02               	movlw	2
 10115  0011FE  0100               	movlb	0	; () banked
 10116  001200  1980               	xorwf	?___awmod& (0+255),w,b
 10117  001202  1181               	iorwf	(?___awmod+1)& (0+255),w,b
 10118  001204  A4D8               	btfss	status,2,c
 10119  001206  D007               	goto	l12152
 10120                           
 10121                           ; BSR set to: 0
 10122                           ;display.c: 64: Cones(print_data);}
 10123  001208  0E78               	movlw	low _print_data
 10124  00120A  6FA3               	movwf	Cones@print_data& (0+255),b
 10125  00120C  0E01               	movlw	high _print_data
 10126  00120E  6FA4               	movwf	(Cones@print_data+1)& (0+255),b
 10127  001210  EC8A  F025         	call	_Cones	;wreg free
 10128  001214  0012               	return	
 10129  001216                     l12152:
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;display.c: 65: else if (reg%10 == 3){
 10133  001216  C0D0  F080         	movff	_reg,___awmod@dividend
 10134  00121A  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
 10135  00121E  0E00               	movlw	0
 10136  001220  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
 10137  001222  0E0A               	movlw	10
 10138  001224  6F82               	movwf	___awmod@divisor& (0+255),b
 10139  001226  EC7F  F024         	call	___awmod	;wreg free
 10140  00122A  0E03               	movlw	3
 10141  00122C  0100               	movlb	0	; () banked
 10142  00122E  1980               	xorwf	?___awmod& (0+255),w,b
 10143  001230  1181               	iorwf	(?___awmod+1)& (0+255),w,b
 10144  001232  A4D8               	btfss	status,2,c
 10145  001234  D00B               	goto	l12156
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;display.c: 66: Holes2(print_data,print_data[0]);}
 10149  001236  0E78               	movlw	low _print_data
 10150  001238  6FB2               	movwf	Holes2@a& (0+255),b
 10151  00123A  0E01               	movlw	high _print_data
 10152  00123C  6FB3               	movwf	(Holes2@a+1)& (0+255),b
 10153  00123E  C178  F0B4         	movff	_print_data,Holes2@b
 10154  001242  C179  F0B5         	movff	_print_data+1,Holes2@b+1
 10155  001246  ECD0  F023         	call	_Holes2	;wreg free
 10156  00124A  0012               	return	
 10157  00124C                     l12156:
 10158                           
 10159                           ; BSR set to: 0
 10160                           ;display.c: 67: else if (reg%10 == 4){
 10161  00124C  C0D0  F080         	movff	_reg,___awmod@dividend
 10162  001250  C0D1  F081         	movff	_reg+1,___awmod@dividend+1
 10163  001254  0E00               	movlw	0
 10164  001256  6F83               	movwf	(___awmod@divisor+1)& (0+255),b
 10165  001258  0E0A               	movlw	10
 10166  00125A  6F82               	movwf	___awmod@divisor& (0+255),b
 10167  00125C  EC7F  F024         	call	___awmod	;wreg free
 10168  001260  0E04               	movlw	4
 10169  001262  0100               	movlb	0	; () banked
 10170  001264  1980               	xorwf	?___awmod& (0+255),w,b
 10171  001266  1181               	iorwf	(?___awmod+1)& (0+255),w,b
 10172  001268  A4D8               	btfss	status,2,c
 10173  00126A  0012               	return	
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;display.c: 68: Cracks(print_data,print_data[0]);}
 10177  00126C  0E78               	movlw	low _print_data
 10178  00126E  6FB2               	movwf	Cracks@a& (0+255),b
 10179  001270  0E01               	movlw	high _print_data
 10180  001272  6FB3               	movwf	(Cracks@a+1)& (0+255),b
 10181  001274  C178  F0B4         	movff	_print_data,Cracks@b
 10182  001278  C179  F0B5         	movff	_print_data+1,Cracks@b+1
 10183  00127C  EC0B  F024         	call	_Cracks	;wreg free
 10184  001280  0012               	return	
 10185  001282                     __end_of_data_disp:
 10186                           	opt callstack 0
 10187                           
 10188 ;; *************** function _subtract *****************
 10189 ;; Defined at:
 10190 ;;		line 210 in file "EEPROM.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;		None
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      void 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10208 ;;Total ram usage:        0 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    8
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_data_disp
 10215 ;;		_page5
 10216 ;; This function uses a non-reentrant model
 10217 ;;
 10218                           
 10219                           	psect	text38
 10220  00541A                     __ptext38:
 10221                           	opt callstack 0
 10222  00541A                     _subtract:
 10223                           	opt callstack 20
 10224                           
 10225                           ;EEPROM.c: 211: if (addr >= read_pntr){
 10226                           
 10227                           ;incstack = 0
 10228  00541A  0100               	movlb	0	; () banked
 10229  00541C  51E2               	movf	_read_pntr& (0+255),w,b
 10230  00541E  5DE4               	subwf	_addr& (0+255),w,b
 10231  005420  A0D8               	btfss	status,0,c
 10232  005422  D004               	goto	l10542
 10233                           
 10234                           ; BSR set to: 0
 10235                           ;EEPROM.c: 212: addr = addr - read_pntr;}
 10236  005424  51E2               	movf	_read_pntr& (0+255),w,b
 10237  005426  5DE4               	subwf	_addr& (0+255),w,b
 10238  005428  6FE4               	movwf	_addr& (0+255),b
 10239  00542A  0012               	return	
 10240  00542C                     l10542:
 10241                           
 10242                           ; BSR set to: 0
 10243                           ;EEPROM.c: 213: else{;EEPROM.c: 214: addrh = addrh - 1;
 10244  00542C  05E3               	decf	_addrh& (0+255),w,b
 10245  00542E  6FE3               	movwf	_addrh& (0+255),b
 10246                           
 10247                           ;EEPROM.c: 215: addr = addr - read_pntr;}
 10248  005430  51E2               	movf	_read_pntr& (0+255),w,b
 10249  005432  5DE4               	subwf	_addr& (0+255),w,b
 10250  005434  6FE4               	movwf	_addr& (0+255),b
 10251                           
 10252                           ; BSR set to: 0
 10253  005436  0012               	return		;funcret
 10254  005438                     __end_of_subtract:
 10255                           	opt callstack 0
 10256                           
 10257 ;; *************** function _ot *****************
 10258 ;; Defined at:
 10259 ;;		line 72 in file "display.c"
 10260 ;; Parameters:    Size  Location     Type
 10261 ;;  print_data      2   35[BANK0 ] PTR unsigned int 
 10262 ;;		 -> print_data(26), 
 10263 ;; Auto vars:     Size  Location     Type
 10264 ;;		None
 10265 ;; Return value:  Size  Location     Type
 10266 ;;                  1    wreg      void 
 10267 ;; Registers used:
 10268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10269 ;; Tracked objects:
 10270 ;;		On entry : 0/0
 10271 ;;		On exit  : 0/0
 10272 ;;		Unchanged: 0/0
 10273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10274 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10276 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10277 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10278 ;;Total ram usage:        4 bytes
 10279 ;; Hardware stack levels used:    1
 10280 ;; Hardware stack levels required when called:   13
 10281 ;; This function calls:
 10282 ;;		_lcdInst
 10283 ;;		_printf
 10284 ;; This function is called by:
 10285 ;;		_data_disp
 10286 ;; This function uses a non-reentrant model
 10287 ;;
 10288                           
 10289                           	psect	text39
 10290  004116                     __ptext39:
 10291                           	opt callstack 0
 10292  004116                     _ot:
 10293                           	opt callstack 16
 10294                           
 10295                           ;display.c: 73: printf("Operation Time:");
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;incstack = 0
 10299  004116  0EBF               	movlw	low STR_18
 10300  004118  0100               	movlb	0	; () banked
 10301  00411A  6F8E               	movwf	printf@f& (0+255),b
 10302  00411C  0EFD               	movlw	high STR_18
 10303  00411E  6F8F               	movwf	(printf@f+1)& (0+255),b
 10304  004120  EC81  F010         	call	_printf	;wreg free
 10305  004124  0EC0               	movlw	192
 10306  004126  EC9A  F02A         	call	_lcdInst
 10307                           
 10308                           ;display.c: 75: printf("%02d hour",print_data[0]);
 10309  00412A  0E56               	movlw	low STR_19
 10310  00412C  0100               	movlb	0	; () banked
 10311  00412E  6F8E               	movwf	printf@f& (0+255),b
 10312  004130  0EFF               	movlw	high STR_19
 10313  004132  6F8F               	movwf	(printf@f+1)& (0+255),b
 10314  004134  C0A3  FFD9         	movff	ot@print_data,fsr2l
 10315  004138  C0A4  FFDA         	movff	ot@print_data+1,fsr2h
 10316  00413C  CFDE F090          	movff	postinc2,?_printf+2
 10317  004140  CFDD F091          	movff	postdec2,?_printf+3
 10318  004144  EC81  F010         	call	_printf	;wreg free
 10319  004148  0E90               	movlw	144
 10320  00414A  EC9A  F02A         	call	_lcdInst
 10321                           
 10322                           ;display.c: 77: printf("%02d min",print_data[1]);
 10323  00414E  0EC6               	movlw	low STR_20
 10324  004150  0100               	movlb	0	; () banked
 10325  004152  6F8E               	movwf	printf@f& (0+255),b
 10326  004154  0EFF               	movlw	high STR_20
 10327  004156  6F8F               	movwf	(printf@f+1)& (0+255),b
 10328  004158  EE20 F002          	lfsr	2,2
 10329  00415C  51A3               	movf	ot@print_data& (0+255),w,b
 10330  00415E  26D9               	addwf	fsr2l,f,c
 10331  004160  51A4               	movf	(ot@print_data+1)& (0+255),w,b
 10332  004162  22DA               	addwfc	fsr2h,f,c
 10333  004164  CFDE F090          	movff	postinc2,?_printf+2
 10334  004168  CFDD F091          	movff	postdec2,?_printf+3
 10335  00416C  EC81  F010         	call	_printf	;wreg free
 10336  004170  0ED0               	movlw	208
 10337  004172  EC9A  F02A         	call	_lcdInst
 10338                           
 10339                           ;display.c: 79: printf("%02d sec",print_data[2]);
 10340  004176  0EBD               	movlw	low STR_21
 10341  004178  0100               	movlb	0	; () banked
 10342  00417A  6F8E               	movwf	printf@f& (0+255),b
 10343  00417C  0EFF               	movlw	high STR_21
 10344  00417E  6F8F               	movwf	(printf@f+1)& (0+255),b
 10345  004180  EE20 F004          	lfsr	2,4
 10346  004184  51A3               	movf	ot@print_data& (0+255),w,b
 10347  004186  26D9               	addwf	fsr2l,f,c
 10348  004188  51A4               	movf	(ot@print_data+1)& (0+255),w,b
 10349  00418A  22DA               	addwfc	fsr2h,f,c
 10350  00418C  CFDE F090          	movff	postinc2,?_printf+2
 10351  004190  CFDD F091          	movff	postdec2,?_printf+3
 10352  004194  EC81  F010         	call	_printf	;wreg free
 10353                           
 10354                           ;display.c: 80: _delay((unsigned long)((2000)*(10000000/4000.0)));
 10355  004198  0E1A               	movlw	26
 10356  00419A  0100               	movlb	0	; () banked
 10357  00419C  6FA6               	movwf	(??_ot+1)& (0+255),b
 10358  00419E  0E5E               	movlw	94
 10359  0041A0  6FA5               	movwf	??_ot& (0+255),b
 10360  0041A2  0E6E               	movlw	110
 10361  0041A4                     u13357:
 10362  0041A4  2EE8               	decfsz	wreg,f,c
 10363  0041A6  D7FE               	bra	u13357
 10364  0041A8  2FA5               	decfsz	??_ot& (0+255),f,b
 10365  0041AA  D7FC               	bra	u13357
 10366  0041AC  2FA6               	decfsz	(??_ot+1)& (0+255),f,b
 10367  0041AE  D7FA               	bra	u13357
 10368  0041B0  F000               	nop	
 10369  0041B2  0012               	return		;funcret
 10370  0041B4                     __end_of_ot:
 10371                           	opt callstack 0
 10372                           
 10373 ;; *************** function _one_byte_reader *****************
 10374 ;; Defined at:
 10375 ;;		line 217 in file "EEPROM.c"
 10376 ;; Parameters:    Size  Location     Type
 10377 ;;  r               1    wreg     unsigned char 
 10378 ;;  rh              1    0[BANK0 ] unsigned char 
 10379 ;; Auto vars:     Size  Location     Type
 10380 ;;  r               1    1[BANK0 ] unsigned char 
 10381 ;;  out             1    2[BANK0 ] unsigned char 
 10382 ;; Return value:  Size  Location     Type
 10383 ;;                  1    wreg      unsigned char 
 10384 ;; Registers used:
 10385 ;;		wreg, status,2
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10391 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10394 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10395 ;;Total ram usage:        3 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; Hardware stack levels required when called:    8
 10398 ;; This function calls:
 10399 ;;		Nothing
 10400 ;; This function is called by:
 10401 ;;		_data_disp
 10402 ;;		_page5
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text40
 10407  005456                     __ptext40:
 10408                           	opt callstack 0
 10409  005456                     _one_byte_reader:
 10410                           	opt callstack 20
 10411                           
 10412                           ;incstack = 0
 10413                           ;one_byte_reader@r stored from wreg
 10414  005456  0100               	movlb	0	; () banked
 10415  005458  6F81               	movwf	one_byte_reader@r& (0+255),b
 10416                           
 10417                           ;EEPROM.c: 218: EECON1bits.EEPGD = 0;
 10418  00545A  9EA6               	bcf	4006,7,c	;volsfr
 10419                           
 10420                           ;EEPROM.c: 219: EECON1bits.CFGS = 0;
 10421  00545C  9CA6               	bcf	4006,6,c	;volsfr
 10422                           
 10423                           ;EEPROM.c: 220: EEADRH = rh;
 10424  00545E  C080  FFAA         	movff	one_byte_reader@rh,4010	;volatile
 10425                           
 10426                           ;EEPROM.c: 221: EEADR = r;
 10427  005462  C081  FFA9         	movff	one_byte_reader@r,4009	;volatile
 10428                           
 10429                           ;EEPROM.c: 222: EECON1bits.RD = 1;
 10430  005466  80A6               	bsf	4006,0,c	;volsfr
 10431                           
 10432                           ;EEPROM.c: 223: char out= EEDATA;
 10433  005468  CFA8 F082          	movff	4008,one_byte_reader@out	;volatile
 10434                           
 10435                           ;EEPROM.c: 224: return out;
 10436  00546C  0100               	movlb	0	; () banked
 10437  00546E  5182               	movf	one_byte_reader@out& (0+255),w,b
 10438                           
 10439                           ; BSR set to: 0
 10440  005470  0012               	return		;funcret
 10441  005472                     __end_of_one_byte_reader:
 10442                           	opt callstack 0
 10443                           
 10444 ;; *************** function ___awmod *****************
 10445 ;; Defined at:
 10446 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  dividend        2    0[BANK0 ] int 
 10449 ;;  divisor         2    2[BANK0 ] int 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  sign            1    5[BANK0 ] unsigned char 
 10452 ;;  counter         1    4[BANK0 ] unsigned char 
 10453 ;; Return value:  Size  Location     Type
 10454 ;;                  2    0[BANK0 ] int 
 10455 ;; Registers used:
 10456 ;;		wreg, status,2, status,0
 10457 ;; Tracked objects:
 10458 ;;		On entry : 0/0
 10459 ;;		On exit  : 0/0
 10460 ;;		Unchanged: 0/0
 10461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10463 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10465 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10466 ;;Total ram usage:        6 bytes
 10467 ;; Hardware stack levels used:    1
 10468 ;; Hardware stack levels required when called:    8
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_main
 10473 ;;		_data_disp
 10474 ;;		_standby_rotating
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           	psect	text41
 10479  0048FE                     __ptext41:
 10480                           	opt callstack 0
 10481  0048FE                     ___awmod:
 10482                           	opt callstack 21
 10483                           
 10484                           ; BSR set to: 0
 10485                           ;incstack = 0
 10486  0048FE  0E00               	movlw	0
 10487  004900  0100               	movlb	0	; () banked
 10488  004902  6F85               	movwf	___awmod@sign& (0+255),b
 10489                           
 10490                           ; BSR set to: 0
 10491  004904  AF81               	btfss	(___awmod@dividend+1)& (0+255),7,b
 10492  004906  D006               	goto	l11712
 10493                           
 10494                           ; BSR set to: 0
 10495  004908  6D80               	negf	___awmod@dividend& (0+255),b
 10496  00490A  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
 10497  00490C  B0D8               	btfsc	status,0,c
 10498  00490E  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
 10499                           
 10500                           ; BSR set to: 0
 10501  004910  0E01               	movlw	1
 10502  004912  6F85               	movwf	___awmod@sign& (0+255),b
 10503  004914                     l11712:
 10504                           
 10505                           ; BSR set to: 0
 10506  004914  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10507  004916  D004               	goto	l11716
 10508                           
 10509                           ; BSR set to: 0
 10510  004918  6D82               	negf	___awmod@divisor& (0+255),b
 10511  00491A  1F83               	comf	(___awmod@divisor+1)& (0+255),f,b
 10512  00491C  B0D8               	btfsc	status,0,c
 10513  00491E  2B83               	incf	(___awmod@divisor+1)& (0+255),f,b
 10514  004920                     l11716:
 10515                           
 10516                           ; BSR set to: 0
 10517  004920  5182               	movf	___awmod@divisor& (0+255),w,b
 10518  004922  1183               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 10519  004924  B4D8               	btfsc	status,2,c
 10520  004926  D018               	goto	l11732
 10521                           
 10522                           ; BSR set to: 0
 10523  004928  0E01               	movlw	1
 10524  00492A  6F84               	movwf	___awmod@counter& (0+255),b
 10525  00492C  D004               	goto	l11722
 10526  00492E                     l11720:
 10527                           
 10528                           ; BSR set to: 0
 10529  00492E  90D8               	bcf	status,0,c
 10530  004930  3782               	rlcf	___awmod@divisor& (0+255),f,b
 10531  004932  3783               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 10532  004934  2B84               	incf	___awmod@counter& (0+255),f,b
 10533  004936                     l11722:
 10534                           
 10535                           ; BSR set to: 0
 10536  004936  AF83               	btfss	(___awmod@divisor+1)& (0+255),7,b
 10537  004938  D7FA               	goto	l11720
 10538  00493A                     u11800:
 10539                           
 10540                           ; BSR set to: 0
 10541  00493A  5182               	movf	___awmod@divisor& (0+255),w,b
 10542  00493C  5D80               	subwf	___awmod@dividend& (0+255),w,b
 10543  00493E  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
 10544  004940  5981               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 10545  004942  A0D8               	btfss	status,0,c
 10546  004944  D004               	goto	l11728
 10547                           
 10548                           ; BSR set to: 0
 10549  004946  5182               	movf	___awmod@divisor& (0+255),w,b
 10550  004948  5F80               	subwf	___awmod@dividend& (0+255),f,b
 10551  00494A  5183               	movf	(___awmod@divisor+1)& (0+255),w,b
 10552  00494C  5B81               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 10553  00494E                     l11728:
 10554                           
 10555                           ; BSR set to: 0
 10556  00494E  90D8               	bcf	status,0,c
 10557  004950  3383               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 10558  004952  3382               	rrcf	___awmod@divisor& (0+255),f,b
 10559                           
 10560                           ; BSR set to: 0
 10561  004954  2F84               	decfsz	___awmod@counter& (0+255),f,b
 10562  004956  D7F1               	goto	u11800
 10563  004958                     l11732:
 10564                           
 10565                           ; BSR set to: 0
 10566  004958  5185               	movf	___awmod@sign& (0+255),w,b
 10567  00495A  B4D8               	btfsc	status,2,c
 10568  00495C  D004               	goto	l11736
 10569                           
 10570                           ; BSR set to: 0
 10571  00495E  6D80               	negf	___awmod@dividend& (0+255),b
 10572  004960  1F81               	comf	(___awmod@dividend+1)& (0+255),f,b
 10573  004962  B0D8               	btfsc	status,0,c
 10574  004964  2B81               	incf	(___awmod@dividend+1)& (0+255),f,b
 10575  004966                     l11736:
 10576                           
 10577                           ; BSR set to: 0
 10578  004966  C080  F080         	movff	___awmod@dividend,?___awmod
 10579  00496A  C081  F081         	movff	___awmod@dividend+1,?___awmod+1
 10580                           
 10581                           ; BSR set to: 0
 10582  00496E  0012               	return		;funcret
 10583  004970                     __end_of___awmod:
 10584                           	opt callstack 0
 10585                           
 10586 ;; *************** function _Holes2 *****************
 10587 ;; Defined at:
 10588 ;;		line 93 in file "display.c"
 10589 ;; Parameters:    Size  Location     Type
 10590 ;;  a               2   50[BANK0 ] PTR unsigned int 
 10591 ;;		 -> print_data(26), 
 10592 ;;  b               2   52[BANK0 ] int 
 10593 ;; Auto vars:     Size  Location     Type
 10594 ;;		None
 10595 ;; Return value:  Size  Location     Type
 10596 ;;                  1    wreg      void 
 10597 ;; Registers used:
 10598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10599 ;; Tracked objects:
 10600 ;;		On entry : 0/0
 10601 ;;		On exit  : 0/0
 10602 ;;		Unchanged: 0/0
 10603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10604 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10606 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10607 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10608 ;;Total ram usage:        6 bytes
 10609 ;; Hardware stack levels used:    1
 10610 ;; Hardware stack levels required when called:   14
 10611 ;; This function calls:
 10612 ;;		_lcdInst
 10613 ;;		_printf
 10614 ;;		_printintarray2
 10615 ;; This function is called by:
 10616 ;;		_data_disp
 10617 ;; This function uses a non-reentrant model
 10618 ;;
 10619                           
 10620                           	psect	text42
 10621  0047A0                     __ptext42:
 10622                           	opt callstack 0
 10623  0047A0                     _Holes2:
 10624                           	opt callstack 15
 10625                           
 10626                           ;display.c: 94: printf("Number of Holes");
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;incstack = 0
 10630  0047A0  0EEF               	movlw	low STR_25
 10631  0047A2  0100               	movlb	0	; () banked
 10632  0047A4  6F8E               	movwf	printf@f& (0+255),b
 10633  0047A6  0EFD               	movlw	high STR_25
 10634  0047A8  6F8F               	movwf	(printf@f+1)& (0+255),b
 10635  0047AA  EC81  F010         	call	_printf	;wreg free
 10636  0047AE  0EC0               	movlw	192
 10637  0047B0  EC9A  F02A         	call	_lcdInst
 10638                           
 10639                           ;display.c: 96: printf("Detected:");
 10640  0047B4  0E24               	movlw	low STR_26
 10641  0047B6  0100               	movlb	0	; () banked
 10642  0047B8  6F8E               	movwf	printf@f& (0+255),b
 10643  0047BA  0EFF               	movlw	high STR_26
 10644  0047BC  6F8F               	movwf	(printf@f+1)& (0+255),b
 10645  0047BE  EC81  F010         	call	_printf	;wreg free
 10646  0047C2  0E90               	movlw	144
 10647  0047C4  EC9A  F02A         	call	_lcdInst
 10648                           
 10649                           ;display.c: 98: printf("%d",a[0]);
 10650  0047C8  0E74               	movlw	low (STR_59+11)
 10651  0047CA  0100               	movlb	0	; () banked
 10652  0047CC  6F8E               	movwf	printf@f& (0+255),b
 10653  0047CE  0EFE               	movlw	high (STR_59+11)
 10654  0047D0  6F8F               	movwf	(printf@f+1)& (0+255),b
 10655  0047D2  C0B2  FFD9         	movff	Holes2@a,fsr2l
 10656  0047D6  C0B3  FFDA         	movff	Holes2@a+1,fsr2h
 10657  0047DA  CFDE F090          	movff	postinc2,?_printf+2
 10658  0047DE  CFDD F091          	movff	postdec2,?_printf+3
 10659  0047E2  EC81  F010         	call	_printf	;wreg free
 10660                           
 10661                           ;display.c: 99: _delay((unsigned long)((2000)*(10000000/4000.0)));
 10662  0047E6  0E1A               	movlw	26
 10663  0047E8  0100               	movlb	0	; () banked
 10664  0047EA  6FB7               	movwf	(??_Holes2+1)& (0+255),b
 10665  0047EC  0E5E               	movlw	94
 10666  0047EE  6FB6               	movwf	??_Holes2& (0+255),b
 10667  0047F0  0E6E               	movlw	110
 10668  0047F2                     u13367:
 10669  0047F2  2EE8               	decfsz	wreg,f,c
 10670  0047F4  D7FE               	bra	u13367
 10671  0047F6  2FB6               	decfsz	??_Holes2& (0+255),f,b
 10672  0047F8  D7FC               	bra	u13367
 10673  0047FA  2FB7               	decfsz	(??_Holes2+1)& (0+255),f,b
 10674  0047FC  D7FA               	bra	u13367
 10675  0047FE  F000               	nop	
 10676                           
 10677                           ;display.c: 101: printintarray2(a,b);
 10678  004800  C0B2  F0A3         	movff	Holes2@a,printintarray2@a
 10679  004804  C0B3  F0A4         	movff	Holes2@a+1,printintarray2@a+1
 10680  004808  C0B4  F0A5         	movff	Holes2@b,printintarray2@b
 10681  00480C  C0B5  F0A6         	movff	Holes2@b+1,printintarray2@b+1
 10682  004810  ECF5  F017         	call	_printintarray2	;wreg free
 10683  004814  0012               	return		;funcret
 10684  004816                     __end_of_Holes2:
 10685                           	opt callstack 0
 10686                           
 10687 ;; *************** function _Cracks *****************
 10688 ;; Defined at:
 10689 ;;		line 105 in file "display.c"
 10690 ;; Parameters:    Size  Location     Type
 10691 ;;  a               2   50[BANK0 ] PTR unsigned int 
 10692 ;;		 -> print_data(26), 
 10693 ;;  b               2   52[BANK0 ] int 
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      void 
 10698 ;; Registers used:
 10699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10707 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10708 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;Total ram usage:        6 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:   14
 10712 ;; This function calls:
 10713 ;;		_lcdInst
 10714 ;;		_printf
 10715 ;;		_printintarray2
 10716 ;; This function is called by:
 10717 ;;		_data_disp
 10718 ;; This function uses a non-reentrant model
 10719 ;;
 10720                           
 10721                           	psect	text43
 10722  004816                     __ptext43:
 10723                           	opt callstack 0
 10724  004816                     _Cracks:
 10725                           	opt callstack 15
 10726                           
 10727                           ;display.c: 106: printf("Number of Cracks");
 10728                           
 10729                           ;incstack = 0
 10730  004816  0E8C               	movlw	low STR_28
 10731  004818  0100               	movlb	0	; () banked
 10732  00481A  6F8E               	movwf	printf@f& (0+255),b
 10733  00481C  0EFD               	movlw	high STR_28
 10734  00481E  6F8F               	movwf	(printf@f+1)& (0+255),b
 10735  004820  EC81  F010         	call	_printf	;wreg free
 10736  004824  0EC0               	movlw	192
 10737  004826  EC9A  F02A         	call	_lcdInst
 10738                           
 10739                           ;display.c: 108: printf("Detected:");
 10740  00482A  0E24               	movlw	low STR_26
 10741  00482C  0100               	movlb	0	; () banked
 10742  00482E  6F8E               	movwf	printf@f& (0+255),b
 10743  004830  0EFF               	movlw	high STR_26
 10744  004832  6F8F               	movwf	(printf@f+1)& (0+255),b
 10745  004834  EC81  F010         	call	_printf	;wreg free
 10746  004838  0E90               	movlw	144
 10747  00483A  EC9A  F02A         	call	_lcdInst
 10748                           
 10749                           ;display.c: 110: printf("%d",a[0]);
 10750  00483E  0E74               	movlw	low (STR_59+11)
 10751  004840  0100               	movlb	0	; () banked
 10752  004842  6F8E               	movwf	printf@f& (0+255),b
 10753  004844  0EFE               	movlw	high (STR_59+11)
 10754  004846  6F8F               	movwf	(printf@f+1)& (0+255),b
 10755  004848  C0B2  FFD9         	movff	Cracks@a,fsr2l
 10756  00484C  C0B3  FFDA         	movff	Cracks@a+1,fsr2h
 10757  004850  CFDE F090          	movff	postinc2,?_printf+2
 10758  004854  CFDD F091          	movff	postdec2,?_printf+3
 10759  004858  EC81  F010         	call	_printf	;wreg free
 10760                           
 10761                           ;display.c: 111: _delay((unsigned long)((2000)*(10000000/4000.0)));
 10762  00485C  0E1A               	movlw	26
 10763  00485E  0100               	movlb	0	; () banked
 10764  004860  6FB7               	movwf	(??_Cracks+1)& (0+255),b
 10765  004862  0E5E               	movlw	94
 10766  004864  6FB6               	movwf	??_Cracks& (0+255),b
 10767  004866  0E6E               	movlw	110
 10768  004868                     u13377:
 10769  004868  2EE8               	decfsz	wreg,f,c
 10770  00486A  D7FE               	bra	u13377
 10771  00486C  2FB6               	decfsz	??_Cracks& (0+255),f,b
 10772  00486E  D7FC               	bra	u13377
 10773  004870  2FB7               	decfsz	(??_Cracks+1)& (0+255),f,b
 10774  004872  D7FA               	bra	u13377
 10775  004874  F000               	nop	
 10776                           
 10777                           ;display.c: 113: printintarray2(a,b);
 10778  004876  C0B2  F0A3         	movff	Cracks@a,printintarray2@a
 10779  00487A  C0B3  F0A4         	movff	Cracks@a+1,printintarray2@a+1
 10780  00487E  C0B4  F0A5         	movff	Cracks@b,printintarray2@b
 10781  004882  C0B5  F0A6         	movff	Cracks@b+1,printintarray2@b+1
 10782  004886  ECF5  F017         	call	_printintarray2	;wreg free
 10783  00488A  0012               	return		;funcret
 10784  00488C                     __end_of_Cracks:
 10785                           	opt callstack 0
 10786                           
 10787 ;; *************** function _printintarray2 *****************
 10788 ;; Defined at:
 10789 ;;		line 224 in file "display.c"
 10790 ;; Parameters:    Size  Location     Type
 10791 ;;  a               2   35[BANK0 ] PTR unsigned int 
 10792 ;;		 -> print_data(26), 
 10793 ;;  b               2   37[BANK0 ] int 
 10794 ;; Auto vars:     Size  Location     Type
 10795 ;;  i               2   46[BANK0 ] unsigned int 
 10796 ;;  counter         2   48[BANK0 ] unsigned int 
 10797 ;;  left            2   43[BANK0 ] unsigned int 
 10798 ;;  dig             2   41[BANK0 ] unsigned int 
 10799 ;;  curr_line       1   45[BANK0 ] unsigned char 
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      void 
 10802 ;; Registers used:
 10803 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10809 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10810 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10811 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10812 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10813 ;;Total ram usage:       15 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:   13
 10816 ;; This function calls:
 10817 ;;		_digit0
 10818 ;;		_lcdInst
 10819 ;;		_nextLine
 10820 ;;		_printf
 10821 ;; This function is called by:
 10822 ;;		_Holes2
 10823 ;;		_Cracks
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           	psect	text44
 10828  002FEA                     __ptext44:
 10829                           	opt callstack 0
 10830  002FEA                     _printintarray2:
 10831                           	opt callstack 15
 10832                           
 10833                           ;incstack = 0
 10834  002FEA  0E10               	movlw	16
 10835  002FEC  0100               	movlb	0	; () banked
 10836  002FEE  6FAD               	movwf	printintarray2@curr_line& (0+255),b
 10837                           
 10838                           ;display.c: 227: unsigned int counter =0;
 10839  002FF0  0E00               	movlw	0
 10840  002FF2  6FB1               	movwf	(printintarray2@counter+1)& (0+255),b
 10841  002FF4  0E00               	movlw	0
 10842  002FF6  6FB0               	movwf	printintarray2@counter& (0+255),b
 10843                           
 10844                           ;display.c: 228: unsigned int left =16;
 10845  002FF8  0E00               	movlw	0
 10846  002FFA  6FAC               	movwf	(printintarray2@left+1)& (0+255),b
 10847  002FFC  0E10               	movlw	16
 10848  002FFE  6FAB               	movwf	printintarray2@left& (0+255),b
 10849                           
 10850                           ; BSR set to: 0
 10851                           ;display.c: 230: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
 10852  003000  0E01               	movlw	1
 10853  003002  EC9A  F02A         	call	_lcdInst
 10854  003006  0E11               	movlw	17
 10855  003008  0100               	movlb	0	; () banked
 10856  00300A  6FA7               	movwf	??_printintarray2& (0+255),b
 10857  00300C  0E3A               	movlw	58
 10858  00300E                     u13387:
 10859  00300E  2EE8               	decfsz	wreg,f,c
 10860  003010  D7FE               	bra	u13387
 10861  003012  2FA7               	decfsz	??_printintarray2& (0+255),f,b
 10862  003014  D7FC               	bra	u13387
 10863  003016  F000               	nop	
 10864                           
 10865                           ;display.c: 232: printf("Distance from");
 10866  003018  0E77               	movlw	low STR_37
 10867  00301A  0100               	movlb	0	; () banked
 10868  00301C  6F8E               	movwf	printf@f& (0+255),b
 10869  00301E  0EFE               	movlw	high STR_37
 10870  003020  6F8F               	movwf	(printf@f+1)& (0+255),b
 10871  003022  EC81  F010         	call	_printf	;wreg free
 10872  003026  0EC0               	movlw	192
 10873  003028  EC9A  F02A         	call	_lcdInst
 10874                           
 10875                           ;display.c: 234: printf("Start Line: (cm)");
 10876  00302C  0E6A               	movlw	low STR_38
 10877  00302E  0100               	movlb	0	; () banked
 10878  003030  6F8E               	movwf	printf@f& (0+255),b
 10879  003032  0EFD               	movlw	high STR_38
 10880  003034  6F8F               	movwf	(printf@f+1)& (0+255),b
 10881  003036  EC81  F010         	call	_printf	;wreg free
 10882  00303A  0E90               	movlw	144
 10883  00303C  EC9A  F02A         	call	_lcdInst
 10884                           
 10885                           ;display.c: 236: _delay((unsigned long)((200)*(10000000/4000.0)));
 10886  003040  0E03               	movlw	3
 10887  003042  0100               	movlb	0	; () banked
 10888  003044  6FA8               	movwf	(??_printintarray2+1)& (0+255),b
 10889  003046  0E8A               	movlw	138
 10890  003048  6FA7               	movwf	??_printintarray2& (0+255),b
 10891  00304A  0E55               	movlw	85
 10892  00304C                     u13397:
 10893  00304C  2EE8               	decfsz	wreg,f,c
 10894  00304E  D7FE               	bra	u13397
 10895  003050  2FA7               	decfsz	??_printintarray2& (0+255),f,b
 10896  003052  D7FC               	bra	u13397
 10897  003054  2FA8               	decfsz	(??_printintarray2+1)& (0+255),f,b
 10898  003056  D7FA               	bra	u13397
 10899  003058  D000               	nop2	
 10900                           
 10901                           ;display.c: 237: for(unsigned int i = 1;i<b+1;i++){
 10902  00305A  0E00               	movlw	0
 10903  00305C  0100               	movlb	0	; () banked
 10904  00305E  6FAF               	movwf	(printintarray2@i+1)& (0+255),b
 10905  003060  0E01               	movlw	1
 10906  003062  6FAE               	movwf	printintarray2@i& (0+255),b
 10907  003064  D0A1               	goto	l10606
 10908  003066                     l10574:
 10909                           
 10910                           ; BSR set to: 0
 10911                           ;display.c: 238: dig = digit0(a[i]);
 10912  003066  90D8               	bcf	status,0,c
 10913  003068  35AE               	rlcf	printintarray2@i& (0+255),w,b
 10914  00306A  6ED9               	movwf	fsr2l,c
 10915  00306C  35AF               	rlcf	(printintarray2@i+1)& (0+255),w,b
 10916  00306E  6EDA               	movwf	fsr2h,c
 10917  003070  51A3               	movf	printintarray2@a& (0+255),w,b
 10918  003072  26D9               	addwf	fsr2l,f,c
 10919  003074  51A4               	movf	(printintarray2@a+1)& (0+255),w,b
 10920  003076  22DA               	addwfc	fsr2h,f,c
 10921  003078  CFDE F080          	movff	postinc2,digit0@h
 10922  00307C  CFDD F081          	movff	postdec2,digit0@h+1
 10923  003080  EC58  F025         	call	_digit0	;wreg free
 10924  003084  C080  F0A9         	movff	?_digit0,printintarray2@dig
 10925  003088  C081  F0AA         	movff	?_digit0+1,printintarray2@dig+1
 10926                           
 10927                           ;display.c: 239: counter = counter + 1 + dig;
 10928  00308C  0100               	movlb	0	; () banked
 10929  00308E  51A9               	movf	printintarray2@dig& (0+255),w,b
 10930  003090  25B0               	addwf	printintarray2@counter& (0+255),w,b
 10931  003092  6FA7               	movwf	??_printintarray2& (0+255),b
 10932  003094  51AA               	movf	(printintarray2@dig+1)& (0+255),w,b
 10933  003096  21B1               	addwfc	(printintarray2@counter+1)& (0+255),w,b
 10934  003098  6FA8               	movwf	(??_printintarray2+1)& (0+255),b
 10935  00309A  0E01               	movlw	1
 10936  00309C  25A7               	addwf	??_printintarray2& (0+255),w,b
 10937  00309E  6FB0               	movwf	printintarray2@counter& (0+255),b
 10938  0030A0  0E00               	movlw	0
 10939  0030A2  21A8               	addwfc	(??_printintarray2+1)& (0+255),w,b
 10940  0030A4  6FB1               	movwf	(printintarray2@counter+1)& (0+255),b
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;display.c: 240: if (counter <= 16){
 10944  0030A6  51B1               	movf	(printintarray2@counter+1)& (0+255),w,b
 10945  0030A8  E128               	bnz	l10584
 10946  0030AA  0E11               	movlw	17
 10947  0030AC  5DB0               	subwf	printintarray2@counter& (0+255),w,b
 10948  0030AE  B0D8               	btfsc	status,0,c
 10949  0030B0  D024               	goto	l10584
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;display.c: 241: printf(" ");
 10953  0030B2  0EDE               	movlw	low (STR_66+10)
 10954  0030B4  6F8E               	movwf	printf@f& (0+255),b
 10955  0030B6  0EFE               	movlw	high (STR_66+10)
 10956  0030B8  6F8F               	movwf	(printf@f+1)& (0+255),b
 10957  0030BA  EC81  F010         	call	_printf	;wreg free
 10958                           
 10959                           ;display.c: 242: printf("%d",a[i]);
 10960  0030BE  0E74               	movlw	low (STR_59+11)
 10961  0030C0  0100               	movlb	0	; () banked
 10962  0030C2  6F8E               	movwf	printf@f& (0+255),b
 10963  0030C4  0EFE               	movlw	high (STR_59+11)
 10964  0030C6  6F8F               	movwf	(printf@f+1)& (0+255),b
 10965  0030C8  90D8               	bcf	status,0,c
 10966  0030CA  35AE               	rlcf	printintarray2@i& (0+255),w,b
 10967  0030CC  6ED9               	movwf	fsr2l,c
 10968  0030CE  35AF               	rlcf	(printintarray2@i+1)& (0+255),w,b
 10969  0030D0  6EDA               	movwf	fsr2h,c
 10970  0030D2  51A3               	movf	printintarray2@a& (0+255),w,b
 10971  0030D4  26D9               	addwf	fsr2l,f,c
 10972  0030D6  51A4               	movf	(printintarray2@a+1)& (0+255),w,b
 10973  0030D8  22DA               	addwfc	fsr2h,f,c
 10974  0030DA  CFDE F090          	movff	postinc2,?_printf+2
 10975  0030DE  CFDD F091          	movff	postdec2,?_printf+3
 10976  0030E2  EC81  F010         	call	_printf	;wreg free
 10977  0030E6                     l10582:
 10978                           
 10979                           ;display.c: 243: left = 16-counter;
 10980  0030E6  0100               	movlb	0	; () banked
 10981  0030E8  51B0               	movf	printintarray2@counter& (0+255),w,b
 10982  0030EA  0810               	sublw	16
 10983  0030EC  6FAB               	movwf	printintarray2@left& (0+255),b
 10984  0030EE  51B1               	movf	(printintarray2@counter+1)& (0+255),w,b
 10985  0030F0  A0D8               	btfss	status,0,c
 10986  0030F2  2AE8               	incf	wreg,f,c
 10987  0030F4  0800               	sublw	0
 10988  0030F6  6FAC               	movwf	(printintarray2@left+1)& (0+255),b
 10989                           
 10990                           ;display.c: 244: }
 10991  0030F8  D055               	goto	l10604
 10992  0030FA                     l10584:
 10993                           
 10994                           ; BSR set to: 0
 10995                           ;display.c: 245: else if (counter > 16){
 10996  0030FA  51B1               	movf	(printintarray2@counter+1)& (0+255),w,b
 10997  0030FC  E104               	bnz	u10460
 10998  0030FE  0E11               	movlw	17
 10999  003100  5DB0               	subwf	printintarray2@counter& (0+255),w,b
 11000  003102  A0D8               	btfss	status,0,c
 11001  003104  D04F               	goto	l10604
 11002  003106                     u10460:
 11003                           
 11004                           ; BSR set to: 0
 11005                           ;display.c: 246: curr_line = nextLine(curr_line);
 11006  003106  51AD               	movf	printintarray2@curr_line& (0+255),w,b
 11007  003108  EC1A  F026         	call	_nextLine
 11008  00310C  0100               	movlb	0	; () banked
 11009  00310E  6FAD               	movwf	printintarray2@curr_line& (0+255),b
 11010                           
 11011                           ; BSR set to: 0
 11012  003110  51AD               	movf	printintarray2@curr_line& (0+255),w,b
 11013  003112  A4D8               	btfss	status,2,c
 11014  003114  D019               	goto	l1680
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;display.c: 248: _delay((unsigned long)((3000)*(10000000/4000.0)));
 11018  003116  0E27               	movlw	39
 11019  003118  0100               	movlb	0	; () banked
 11020  00311A  6FA8               	movwf	(??_printintarray2+1)& (0+255),b
 11021  00311C  0E0D               	movlw	13
 11022  00311E  6FA7               	movwf	??_printintarray2& (0+255),b
 11023  003120  0E26               	movlw	38
 11024  003122                     u13407:
 11025  003122  2EE8               	decfsz	wreg,f,c
 11026  003124  D7FE               	bra	u13407
 11027  003126  2FA7               	decfsz	??_printintarray2& (0+255),f,b
 11028  003128  D7FC               	bra	u13407
 11029  00312A  2FA8               	decfsz	(??_printintarray2+1)& (0+255),f,b
 11030  00312C  D7FA               	bra	u13407
 11031  00312E  F000               	nop	
 11032                           
 11033                           ;display.c: 249: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};}
 11034  003130  0E01               	movlw	1
 11035  003132  EC9A  F02A         	call	_lcdInst
 11036  003136  0E11               	movlw	17
 11037  003138  0100               	movlb	0	; () banked
 11038  00313A  6FA7               	movwf	??_printintarray2& (0+255),b
 11039  00313C  0E3A               	movlw	58
 11040  00313E                     u13417:
 11041  00313E  2EE8               	decfsz	wreg,f,c
 11042  003140  D7FE               	bra	u13417
 11043  003142  2FA7               	decfsz	??_printintarray2& (0+255),f,b
 11044  003144  D7FC               	bra	u13417
 11045  003146  F000               	nop	
 11046  003148                     l1680:
 11047                           
 11048                           ;display.c: 250: { lcdInst(0x80 | curr_line);};
 11049  003148  0100               	movlb	0	; () banked
 11050  00314A  51AD               	movf	printintarray2@curr_line& (0+255),w,b
 11051  00314C  0980               	iorlw	128
 11052  00314E  EC9A  F02A         	call	_lcdInst
 11053                           
 11054                           ;display.c: 251: printf(" ");
 11055  003152  0EDE               	movlw	low (STR_66+10)
 11056  003154  0100               	movlb	0	; () banked
 11057  003156  6F8E               	movwf	printf@f& (0+255),b
 11058  003158  0EFE               	movlw	high (STR_66+10)
 11059  00315A  6F8F               	movwf	(printf@f+1)& (0+255),b
 11060  00315C  EC81  F010         	call	_printf	;wreg free
 11061                           
 11062                           ;display.c: 252: printf("%d",a[i]);
 11063  003160  0E74               	movlw	low (STR_59+11)
 11064  003162  0100               	movlb	0	; () banked
 11065  003164  6F8E               	movwf	printf@f& (0+255),b
 11066  003166  0EFE               	movlw	high (STR_59+11)
 11067  003168  6F8F               	movwf	(printf@f+1)& (0+255),b
 11068  00316A  90D8               	bcf	status,0,c
 11069  00316C  35AE               	rlcf	printintarray2@i& (0+255),w,b
 11070  00316E  6ED9               	movwf	fsr2l,c
 11071  003170  35AF               	rlcf	(printintarray2@i+1)& (0+255),w,b
 11072  003172  6EDA               	movwf	fsr2h,c
 11073  003174  51A3               	movf	printintarray2@a& (0+255),w,b
 11074  003176  26D9               	addwf	fsr2l,f,c
 11075  003178  51A4               	movf	(printintarray2@a+1)& (0+255),w,b
 11076  00317A  22DA               	addwfc	fsr2h,f,c
 11077  00317C  CFDE F090          	movff	postinc2,?_printf+2
 11078  003180  CFDD F091          	movff	postdec2,?_printf+3
 11079  003184  EC81  F010         	call	_printf	;wreg free
 11080                           
 11081                           ;display.c: 253: counter = counter - 16 + left;
 11082  003188  0100               	movlb	0	; () banked
 11083  00318A  51AB               	movf	printintarray2@left& (0+255),w,b
 11084  00318C  25B0               	addwf	printintarray2@counter& (0+255),w,b
 11085  00318E  6FA7               	movwf	??_printintarray2& (0+255),b
 11086  003190  51AC               	movf	(printintarray2@left+1)& (0+255),w,b
 11087  003192  21B1               	addwfc	(printintarray2@counter+1)& (0+255),w,b
 11088  003194  6FA8               	movwf	(??_printintarray2+1)& (0+255),b
 11089  003196  0EF0               	movlw	240
 11090  003198  25A7               	addwf	??_printintarray2& (0+255),w,b
 11091  00319A  6FB0               	movwf	printintarray2@counter& (0+255),b
 11092  00319C  0EFF               	movlw	255
 11093  00319E  21A8               	addwfc	(??_printintarray2+1)& (0+255),w,b
 11094  0031A0  6FB1               	movwf	(printintarray2@counter+1)& (0+255),b
 11095  0031A2  D7A1               	goto	l10582
 11096  0031A4                     l10604:
 11097                           
 11098                           ; BSR set to: 0
 11099  0031A4  4BAE               	infsnz	printintarray2@i& (0+255),f,b
 11100  0031A6  2BAF               	incf	(printintarray2@i+1)& (0+255),f,b
 11101  0031A8                     l10606:
 11102                           
 11103                           ; BSR set to: 0
 11104  0031A8  0E01               	movlw	1
 11105  0031AA  25A5               	addwf	printintarray2@b& (0+255),w,b
 11106  0031AC  6FA7               	movwf	??_printintarray2& (0+255),b
 11107  0031AE  0E00               	movlw	0
 11108  0031B0  21A6               	addwfc	(printintarray2@b+1)& (0+255),w,b
 11109  0031B2  6FA8               	movwf	(??_printintarray2+1)& (0+255),b
 11110  0031B4  51A7               	movf	??_printintarray2& (0+255),w,b
 11111  0031B6  5DAE               	subwf	printintarray2@i& (0+255),w,b
 11112  0031B8  51A8               	movf	(??_printintarray2+1)& (0+255),w,b
 11113  0031BA  59AF               	subwfb	(printintarray2@i+1)& (0+255),w,b
 11114  0031BC  A0D8               	btfss	status,0,c
 11115  0031BE  D753               	goto	l10574
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;display.c: 255: };display.c: 256: };display.c: 257: _delay((unsigned long)((3000)*(1000
      +                          0000/4000.0)));
 11119  0031C0  0E27               	movlw	39
 11120  0031C2  0100               	movlb	0	; () banked
 11121  0031C4  6FA8               	movwf	(??_printintarray2+1)& (0+255),b
 11122  0031C6  0E0D               	movlw	13
 11123  0031C8  6FA7               	movwf	??_printintarray2& (0+255),b
 11124  0031CA  0E26               	movlw	38
 11125  0031CC                     u13427:
 11126  0031CC  2EE8               	decfsz	wreg,f,c
 11127  0031CE  D7FE               	bra	u13427
 11128  0031D0  2FA7               	decfsz	??_printintarray2& (0+255),f,b
 11129  0031D2  D7FC               	bra	u13427
 11130  0031D4  2FA8               	decfsz	(??_printintarray2+1)& (0+255),f,b
 11131  0031D6  D7FA               	bra	u13427
 11132  0031D8  F000               	nop	
 11133  0031DA  0012               	return		;funcret
 11134  0031DC                     __end_of_printintarray2:
 11135                           	opt callstack 0
 11136                           
 11137 ;; *************** function _nextLine *****************
 11138 ;; Defined at:
 11139 ;;		line 208 in file "display.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;  g               1    wreg     unsigned char 
 11142 ;; Auto vars:     Size  Location     Type
 11143 ;;  g               1    0[BANK0 ] unsigned char 
 11144 ;; Return value:  Size  Location     Type
 11145 ;;                  1    wreg      unsigned char 
 11146 ;; Registers used:
 11147 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 11148 ;; Tracked objects:
 11149 ;;		On entry : 0/0
 11150 ;;		On exit  : 0/0
 11151 ;;		Unchanged: 0/0
 11152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11154 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11156 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11157 ;;Total ram usage:        1 bytes
 11158 ;; Hardware stack levels used:    1
 11159 ;; Hardware stack levels required when called:    8
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_page5
 11164 ;;		_printintarray2
 11165 ;; This function uses a non-reentrant model
 11166 ;;
 11167                           
 11168                           	psect	text45
 11169  004C34                     __ptext45:
 11170                           	opt callstack 0
 11171  004C34                     _nextLine:
 11172                           	opt callstack 20
 11173                           
 11174                           ;incstack = 0
 11175                           ;nextLine@g stored from wreg
 11176  004C34  0100               	movlb	0	; () banked
 11177  004C36  6F80               	movwf	nextLine@g& (0+255),b
 11178  004C38  0100               	movlb	0	; () banked
 11179  004C3A  5180               	movf	nextLine@g& (0+255),w,b
 11180  004C3C  A4D8               	btfss	status,2,c
 11181  004C3E  D007               	goto	l9994
 11182                           
 11183                           ; BSR set to: 0
 11184                           ;display.c: 210: return LCD_LINE2_ADDR;
 11185  004C40  0E3A               	movlw	low _LCD_LINE2_ADDR
 11186  004C42  6EF6               	movwf	tblptrl,c
 11187  004C44                     	if	1	;There is more than 1 active tblptr byte
 11188  004C44  0EFD               	movlw	high _LCD_LINE2_ADDR
 11189  004C46  6EF7               	movwf	tblptrh,c
 11190  004C48                     	endif
 11191  004C48                     	if	0	;There are less than 3 active tblptr bytes
 11192  004C48                     	endif
 11193  004C48  0008               	tblrd		*
 11194  004C4A  50F5               	movf	tablat,w,c
 11195                           
 11196                           ; BSR set to: 0
 11197  004C4C  0012               	return	
 11198  004C4E                     l9994:
 11199                           
 11200                           ; BSR set to: 0
 11201  004C4E  0E40               	movlw	64
 11202  004C50  1980               	xorwf	nextLine@g& (0+255),w,b
 11203  004C52  A4D8               	btfss	status,2,c
 11204  004C54  D007               	goto	l10002
 11205                           
 11206                           ; BSR set to: 0
 11207                           ;display.c: 213: return LCD_LINE3_ADDR;
 11208  004C56  0E39               	movlw	low _LCD_LINE3_ADDR
 11209  004C58  6EF6               	movwf	tblptrl,c
 11210  004C5A                     	if	1	;There is more than 1 active tblptr byte
 11211  004C5A  0EFD               	movlw	high _LCD_LINE3_ADDR
 11212  004C5C  6EF7               	movwf	tblptrh,c
 11213  004C5E                     	endif
 11214  004C5E                     	if	0	;There are less than 3 active tblptr bytes
 11215  004C5E                     	endif
 11216  004C5E  0008               	tblrd		*
 11217  004C60  50F5               	movf	tablat,w,c
 11218  004C62  0012               	return	
 11219  004C64                     l10002:
 11220                           
 11221                           ; BSR set to: 0
 11222  004C64  0E10               	movlw	16
 11223  004C66  1980               	xorwf	nextLine@g& (0+255),w,b
 11224  004C68  A4D8               	btfss	status,2,c
 11225  004C6A  D007               	goto	l10010
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;display.c: 216: return LCD_LINE4_ADDR;
 11229  004C6C  0E38               	movlw	low _LCD_LINE4_ADDR
 11230  004C6E  6EF6               	movwf	tblptrl,c
 11231  004C70                     	if	1	;There is more than 1 active tblptr byte
 11232  004C70  0EFD               	movlw	high _LCD_LINE4_ADDR
 11233  004C72  6EF7               	movwf	tblptrh,c
 11234  004C74                     	endif
 11235  004C74                     	if	0	;There are less than 3 active tblptr bytes
 11236  004C74                     	endif
 11237  004C74  0008               	tblrd		*
 11238  004C76  50F5               	movf	tablat,w,c
 11239  004C78  0012               	return	
 11240  004C7A                     l10010:
 11241                           
 11242                           ; BSR set to: 0
 11243  004C7A  0E50               	movlw	80
 11244  004C7C  1980               	xorwf	nextLine@g& (0+255),w,b
 11245  004C7E  A4D8               	btfss	status,2,c
 11246  004C80  0012               	return	
 11247                           
 11248                           ; BSR set to: 0
 11249                           ;display.c: 219: return LCD_LINE1_ADDR;
 11250  004C82  0E3B               	movlw	low _LCD_LINE1_ADDR
 11251  004C84  6EF6               	movwf	tblptrl,c
 11252  004C86                     	if	1	;There is more than 1 active tblptr byte
 11253  004C86  0EFD               	movlw	high _LCD_LINE1_ADDR
 11254  004C88  6EF7               	movwf	tblptrh,c
 11255  004C8A                     	endif
 11256  004C8A                     	if	0	;There are less than 3 active tblptr bytes
 11257  004C8A                     	endif
 11258  004C8A  0008               	tblrd		*
 11259  004C8C  50F5               	movf	tablat,w,c
 11260                           
 11261                           ; BSR set to: 0
 11262  004C8E  0012               	return		;funcret
 11263  004C90                     __end_of_nextLine:
 11264                           	opt callstack 0
 11265                           
 11266 ;; *************** function _digit0 *****************
 11267 ;; Defined at:
 11268 ;;		line 195 in file "display.c"
 11269 ;; Parameters:    Size  Location     Type
 11270 ;;  h               2    0[BANK0 ] unsigned int 
 11271 ;; Auto vars:     Size  Location     Type
 11272 ;;		None
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  2    0[BANK0 ] unsigned int 
 11275 ;; Registers used:
 11276 ;;		wreg, status,2, status,0
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;Total ram usage:        2 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    8
 11289 ;; This function calls:
 11290 ;;		Nothing
 11291 ;; This function is called by:
 11292 ;;		_printintarray2
 11293 ;; This function uses a non-reentrant model
 11294 ;;
 11295                           
 11296                           	psect	text46
 11297  004AB0                     __ptext46:
 11298                           	opt callstack 0
 11299  004AB0                     _digit0:
 11300                           	opt callstack 19
 11301                           
 11302                           ;display.c: 196: if (h<10){
 11303                           
 11304                           ; BSR set to: 0
 11305                           ;incstack = 0
 11306  004AB0  0100               	movlb	0	; () banked
 11307  004AB2  5181               	movf	(digit0@h+1)& (0+255),w,b
 11308  004AB4  E109               	bnz	l10024
 11309  004AB6  0E0A               	movlw	10
 11310  004AB8  5D80               	subwf	digit0@h& (0+255),w,b
 11311  004ABA  B0D8               	btfsc	status,0,c
 11312  004ABC  D005               	goto	l10024
 11313                           
 11314                           ; BSR set to: 0
 11315                           ;display.c: 197: return 1;}
 11316  004ABE  0E00               	movlw	0
 11317  004AC0  6F81               	movwf	(?_digit0+1)& (0+255),b
 11318  004AC2  0E01               	movlw	1
 11319  004AC4  6F80               	movwf	?_digit0& (0+255),b
 11320  004AC6  0012               	return	
 11321  004AC8                     l10024:
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;display.c: 198: else if (h<100){
 11325  004AC8  5181               	movf	(digit0@h+1)& (0+255),w,b
 11326  004ACA  E109               	bnz	l10032
 11327  004ACC  0E64               	movlw	100
 11328  004ACE  5D80               	subwf	digit0@h& (0+255),w,b
 11329  004AD0  B0D8               	btfsc	status,0,c
 11330  004AD2  D005               	goto	l10032
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;display.c: 199: return 2;}
 11334  004AD4  0E00               	movlw	0
 11335  004AD6  6F81               	movwf	(?_digit0+1)& (0+255),b
 11336  004AD8  0E02               	movlw	2
 11337  004ADA  6F80               	movwf	?_digit0& (0+255),b
 11338  004ADC  0012               	return	
 11339  004ADE                     l10032:
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;display.c: 200: else if (h<1000){
 11343  004ADE  0EE8               	movlw	232
 11344  004AE0  5D80               	subwf	digit0@h& (0+255),w,b
 11345  004AE2  0E03               	movlw	3
 11346  004AE4  5981               	subwfb	(digit0@h+1)& (0+255),w,b
 11347  004AE6  B0D8               	btfsc	status,0,c
 11348  004AE8  D005               	goto	l10040
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;display.c: 201: return 3;}
 11352  004AEA  0E00               	movlw	0
 11353  004AEC  6F81               	movwf	(?_digit0+1)& (0+255),b
 11354  004AEE  0E03               	movlw	3
 11355  004AF0  6F80               	movwf	?_digit0& (0+255),b
 11356  004AF2  0012               	return	
 11357  004AF4                     l10040:
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;display.c: 202: else if (h<10000){
 11361  004AF4  0E10               	movlw	16
 11362  004AF6  5D80               	subwf	digit0@h& (0+255),w,b
 11363  004AF8  0E27               	movlw	39
 11364  004AFA  5981               	subwfb	(digit0@h+1)& (0+255),w,b
 11365  004AFC  B0D8               	btfsc	status,0,c
 11366  004AFE  D005               	goto	l10048
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;display.c: 203: return 4;
 11370  004B00  0E00               	movlw	0
 11371  004B02  6F81               	movwf	(?_digit0+1)& (0+255),b
 11372  004B04  0E04               	movlw	4
 11373  004B06  6F80               	movwf	?_digit0& (0+255),b
 11374  004B08  0012               	return	
 11375  004B0A                     l10048:
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;display.c: 205: else{;display.c: 206: return 0;}
 11379  004B0A  0E00               	movlw	0
 11380  004B0C  6F81               	movwf	(?_digit0+1)& (0+255),b
 11381  004B0E  0E00               	movlw	0
 11382  004B10  6F80               	movwf	?_digit0& (0+255),b
 11383                           
 11384                           ; BSR set to: 0
 11385  004B12  0012               	return		;funcret
 11386  004B14                     __end_of_digit0:
 11387                           	opt callstack 0
 11388                           
 11389 ;; *************** function _Cones *****************
 11390 ;; Defined at:
 11391 ;;		line 83 in file "display.c"
 11392 ;; Parameters:    Size  Location     Type
 11393 ;;  print_data      2   35[BANK0 ] PTR unsigned int 
 11394 ;;		 -> print_data(26), 
 11395 ;; Auto vars:     Size  Location     Type
 11396 ;;		None
 11397 ;; Return value:  Size  Location     Type
 11398 ;;                  1    wreg      void 
 11399 ;; Registers used:
 11400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11401 ;; Tracked objects:
 11402 ;;		On entry : 0/0
 11403 ;;		On exit  : 0/0
 11404 ;;		Unchanged: 0/0
 11405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11406 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11408 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11409 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11410 ;;Total ram usage:        4 bytes
 11411 ;; Hardware stack levels used:    1
 11412 ;; Hardware stack levels required when called:   13
 11413 ;; This function calls:
 11414 ;;		_lcdInst
 11415 ;;		_printf
 11416 ;; This function is called by:
 11417 ;;		_data_disp
 11418 ;; This function uses a non-reentrant model
 11419 ;;
 11420                           
 11421                           	psect	text47
 11422  004B14                     __ptext47:
 11423                           	opt callstack 0
 11424  004B14                     _Cones:
 11425                           	opt callstack 16
 11426                           
 11427                           ;display.c: 84: printf("Number of Cones");
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;incstack = 0
 11431  004B14  0EFF               	movlw	low STR_22
 11432  004B16  0100               	movlb	0	; () banked
 11433  004B18  6F8E               	movwf	printf@f& (0+255),b
 11434  004B1A  0EFD               	movlw	high STR_22
 11435  004B1C  6F8F               	movwf	(printf@f+1)& (0+255),b
 11436  004B1E  EC81  F010         	call	_printf	;wreg free
 11437  004B22  0EC0               	movlw	192
 11438  004B24  EC9A  F02A         	call	_lcdInst
 11439                           
 11440                           ;display.c: 86: printf("Deployed:");
 11441  004B28  0E2E               	movlw	low STR_23
 11442  004B2A  0100               	movlb	0	; () banked
 11443  004B2C  6F8E               	movwf	printf@f& (0+255),b
 11444  004B2E  0EFF               	movlw	high STR_23
 11445  004B30  6F8F               	movwf	(printf@f+1)& (0+255),b
 11446  004B32  EC81  F010         	call	_printf	;wreg free
 11447  004B36  0E90               	movlw	144
 11448  004B38  EC9A  F02A         	call	_lcdInst
 11449                           
 11450                           ;display.c: 88: printf("%d",print_data[0]);
 11451  004B3C  0E74               	movlw	low (STR_59+11)
 11452  004B3E  0100               	movlb	0	; () banked
 11453  004B40  6F8E               	movwf	printf@f& (0+255),b
 11454  004B42  0EFE               	movlw	high (STR_59+11)
 11455  004B44  6F8F               	movwf	(printf@f+1)& (0+255),b
 11456  004B46  C0A3  FFD9         	movff	Cones@print_data,fsr2l
 11457  004B4A  C0A4  FFDA         	movff	Cones@print_data+1,fsr2h
 11458  004B4E  CFDE F090          	movff	postinc2,?_printf+2
 11459  004B52  CFDD F091          	movff	postdec2,?_printf+3
 11460  004B56  EC81  F010         	call	_printf	;wreg free
 11461                           
 11462                           ;display.c: 89: _delay((unsigned long)((2000)*(10000000/4000.0)));
 11463  004B5A  0E1A               	movlw	26
 11464  004B5C  0100               	movlb	0	; () banked
 11465  004B5E  6FA6               	movwf	(??_Cones+1)& (0+255),b
 11466  004B60  0E5E               	movlw	94
 11467  004B62  6FA5               	movwf	??_Cones& (0+255),b
 11468  004B64  0E6E               	movlw	110
 11469  004B66                     u13437:
 11470  004B66  2EE8               	decfsz	wreg,f,c
 11471  004B68  D7FE               	bra	u13437
 11472  004B6A  2FA5               	decfsz	??_Cones& (0+255),f,b
 11473  004B6C  D7FC               	bra	u13437
 11474  004B6E  2FA6               	decfsz	(??_Cones+1)& (0+255),f,b
 11475  004B70  D7FA               	bra	u13437
 11476  004B72  F000               	nop	
 11477  004B74  0012               	return		;funcret
 11478  004B76                     __end_of_Cones:
 11479                           	opt callstack 0
 11480                           
 11481 ;; *************** function _configureports *****************
 11482 ;; Defined at:
 11483 ;;		line 95 in file "main.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;		None
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;		None
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  1    wreg      void 
 11490 ;; Registers used:
 11491 ;;		wreg, status,2
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/0
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11501 ;;Total ram usage:        0 bytes
 11502 ;; Hardware stack levels used:    1
 11503 ;; Hardware stack levels required when called:    8
 11504 ;; This function calls:
 11505 ;;		Nothing
 11506 ;; This function is called by:
 11507 ;;		_main
 11508 ;; This function uses a non-reentrant model
 11509 ;;
 11510                           
 11511                           	psect	text48
 11512  005008                     __ptext48:
 11513                           	opt callstack 0
 11514  005008                     _configureports:
 11515                           	opt callstack 22
 11516                           
 11517                           ;main.c: 97: TRISD = 0;
 11518                           
 11519                           ;incstack = 0
 11520  005008  0E00               	movlw	0
 11521  00500A  6E95               	movwf	3989,c	;volatile
 11522                           
 11523                           ;main.c: 99: TRISBbits.RB4 = 1;
 11524  00500C  8893               	bsf	3987,4,c	;volatile
 11525                           
 11526                           ;main.c: 100: TRISBbits.RB5 = 1;
 11527  00500E  8A93               	bsf	3987,5,c	;volatile
 11528                           
 11529                           ;main.c: 101: TRISBbits.RB6 = 1;
 11530  005010  8C93               	bsf	3987,6,c	;volatile
 11531                           
 11532                           ;main.c: 102: TRISBbits.RB7 = 1;
 11533  005012  8E93               	bsf	3987,7,c	;volatile
 11534                           
 11535                           ;main.c: 103: TRISBbits.RB1 = 1;
 11536  005014  8293               	bsf	3987,1,c	;volatile
 11537                           
 11538                           ;main.c: 105: TRISCbits.RC3 = 1;
 11539  005016  8694               	bsf	3988,3,c	;volatile
 11540                           
 11541                           ;main.c: 106: TRISCbits.RC4 = 1;
 11542  005018  8894               	bsf	3988,4,c	;volatile
 11543                           
 11544                           ;main.c: 108: TRISBbits.RB0 = 1;
 11545  00501A  8093               	bsf	3987,0,c	;volatile
 11546                           
 11547                           ;main.c: 110: TRISBbits.RB2 = 1;
 11548  00501C  8493               	bsf	3987,2,c	;volatile
 11549                           
 11550                           ;main.c: 111: TRISBbits.RB3 = 1;
 11551  00501E  8693               	bsf	3987,3,c	;volatile
 11552                           
 11553                           ;main.c: 112: TRISAbits.RA1 = 1;
 11554  005020  8292               	bsf	3986,1,c	;volatile
 11555                           
 11556                           ;main.c: 117: TRISAbits.RA3 = 1;
 11557  005022  8692               	bsf	3986,3,c	;volatile
 11558                           
 11559                           ;main.c: 120: TRISAbits.RA4 = 0;
 11560  005024  9892               	bcf	3986,4,c	;volatile
 11561                           
 11562                           ;main.c: 121: TRISAbits.RA5 = 0;
 11563  005026  9A92               	bcf	3986,5,c	;volatile
 11564                           
 11565                           ;main.c: 122: LATAbits.LATA4 = 0;
 11566  005028  9889               	bcf	3977,4,c	;volatile
 11567                           
 11568                           ;main.c: 123: LATAbits.LATA5 = 0;
 11569  00502A  9A89               	bcf	3977,5,c	;volatile
 11570                           
 11571                           ;main.c: 126: TRISEbits.RE0 = 1;
 11572  00502C  8096               	bsf	3990,0,c	;volatile
 11573                           
 11574                           ;main.c: 127: TRISEbits.RE1 = 1;
 11575  00502E  8296               	bsf	3990,1,c	;volatile
 11576                           
 11577                           ;main.c: 129: TRISCbits.RC1 = 0;
 11578  005030  9294               	bcf	3988,1,c	;volatile
 11579                           
 11580                           ;main.c: 130: TRISCbits.RC2 = 0;
 11581  005032  9494               	bcf	3988,2,c	;volatile
 11582                           
 11583                           ;main.c: 131: TRISCbits.RC5 = 0;
 11584  005034  9A94               	bcf	3988,5,c	;volatile
 11585                           
 11586                           ;main.c: 132: TRISCbits.RC6 = 0;
 11587  005036  9C94               	bcf	3988,6,c	;volatile
 11588                           
 11589                           ;main.c: 133: TRISCbits.RC7 = 0;
 11590  005038  9E94               	bcf	3988,7,c	;volatile
 11591                           
 11592                           ;main.c: 134: TRISCbits.RC0 = 0;
 11593  00503A  9094               	bcf	3988,0,c	;volatile
 11594                           
 11595                           ;main.c: 135: LATC =0;
 11596  00503C  0E00               	movlw	0
 11597  00503E  6E8B               	movwf	3979,c	;volatile
 11598                           
 11599                           ;main.c: 136: LATD =0;
 11600  005040  0E00               	movlw	0
 11601  005042  6E8C               	movwf	3980,c	;volatile
 11602                           
 11603                           ;main.c: 138: ADCON1 = 0b00001111;
 11604  005044  0E0F               	movlw	15
 11605  005046  6EC1               	movwf	4033,c	;volatile
 11606                           
 11607                           ;main.c: 140: INT0IE = 1;
 11608  005048  88F2               	bsf	4082,4,c	;volatile
 11609                           
 11610                           ;main.c: 141: INTEDG0 = 1;
 11611  00504A  8CF1               	bsf	4081,6,c	;volatile
 11612                           
 11613                           ;main.c: 143: INT1IE = 1;
 11614  00504C  86F0               	bsf	4080,3,c	;volatile
 11615                           
 11616                           ;main.c: 144: (INTCONbits.GIE = 1);
 11617  00504E  8EF2               	bsf	4082,7,c	;volatile
 11618  005050  0012               	return		;funcret
 11619  005052                     __end_of_configureports:
 11620                           	opt callstack 0
 11621                           
 11622 ;; *************** function _completion_return *****************
 11623 ;; Defined at:
 11624 ;;		line 156 in file "main.c"
 11625 ;; Parameters:    Size  Location     Type
 11626 ;;		None
 11627 ;; Auto vars:     Size  Location     Type
 11628 ;;  tick            4   45[BANK0 ] unsigned long 
 11629 ;; Return value:  Size  Location     Type
 11630 ;;                  1    wreg      void 
 11631 ;; Registers used:
 11632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11633 ;; Tracked objects:
 11634 ;;		On entry : 0/0
 11635 ;;		On exit  : 0/0
 11636 ;;		Unchanged: 0/0
 11637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11639 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11641 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11642 ;;Total ram usage:       10 bytes
 11643 ;; Hardware stack levels used:    1
 11644 ;; Hardware stack levels required when called:   14
 11645 ;; This function calls:
 11646 ;;		_L_I
 11647 ;;		_R_I
 11648 ;;		_Stop
 11649 ;;		___aldiv
 11650 ;;		___almod
 11651 ;;		___fladd
 11652 ;;		___flge
 11653 ;;		___wmul
 11654 ;;		_backw
 11655 ;;		_completion_write
 11656 ;;		_lcdInst
 11657 ;;		_printf
 11658 ;;		_readRTC
 11659 ;; This function is called by:
 11660 ;;		_main
 11661 ;; This function uses a non-reentrant model
 11662 ;;
 11663                           
 11664                           	psect	text49
 11665  000814                     __ptext49:
 11666                           	opt callstack 0
 11667  000814                     _completion_return:
 11668                           	opt callstack 16
 11669                           
 11670                           ;main.c: 158: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
 11671                           
 11672                           ;incstack = 0
 11673  000814  0E01               	movlw	1
 11674  000816  EC9A  F02A         	call	_lcdInst
 11675  00081A  0E11               	movlw	17
 11676  00081C  0100               	movlb	0	; () banked
 11677  00081E  6FA7               	movwf	??_completion_return& (0+255),b
 11678  000820  0E3A               	movlw	58
 11679  000822                     u13447:
 11680  000822  2EE8               	decfsz	wreg,f,c
 11681  000824  D7FE               	bra	u13447
 11682  000826  2FA7               	decfsz	??_completion_return& (0+255),f,b
 11683  000828  D7FC               	bra	u13447
 11684  00082A  F000               	nop	
 11685                           
 11686                           ;main.c: 159: printf("returning");
 11687  00082C  0E74               	movlw	low STR_4
 11688  00082E  0100               	movlb	0	; () banked
 11689  000830  6F8E               	movwf	printf@f& (0+255),b
 11690  000832  0EFF               	movlw	high STR_4
 11691  000834  6F8F               	movwf	(printf@f+1)& (0+255),b
 11692  000836  EC81  F010         	call	_printf	;wreg free
 11693                           
 11694                           ;main.c: 161: if (last_sensed == 1){
 11695  00083A  0100               	movlb	0	; () banked
 11696  00083C  05DA               	decf	_last_sensed& (0+255),w,b
 11697  00083E  11DB               	iorwf	(_last_sensed+1)& (0+255),w,b
 11698  000840  A4D8               	btfss	status,2,c
 11699  000842  D010               	goto	l11832
 11700                           
 11701                           ; BSR set to: 0
 11702                           ;main.c: 162: LATDbits.LATD0 = 0;
 11703  000844  908C               	bcf	3980,0,c	;volatile
 11704                           
 11705                           ;main.c: 163: LATDbits.LATD1 = 1;
 11706  000846  828C               	bsf	3980,1,c	;volatile
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;main.c: 164: _delay((unsigned long)((ninty_deg)*(10000000/4000.0)));
 11710  000848  0E04               	movlw	4
 11711  00084A  0100               	movlb	0	; () banked
 11712  00084C  6FA8               	movwf	(??_completion_return+1)& (0+255),b
 11713  00084E  0E4D               	movlw	77
 11714  000850  6FA7               	movwf	??_completion_return& (0+255),b
 11715  000852  0E23               	movlw	35
 11716  000854                     u13457:
 11717  000854  2EE8               	decfsz	wreg,f,c
 11718  000856  D7FE               	bra	u13457
 11719  000858  2FA7               	decfsz	??_completion_return& (0+255),f,b
 11720  00085A  D7FC               	bra	u13457
 11721  00085C  2FA8               	decfsz	(??_completion_return+1)& (0+255),f,b
 11722  00085E  D7FA               	bra	u13457
 11723                           
 11724                           ;main.c: 165: LATDbits.LATD1 = 0;
 11725  000860  928C               	bcf	3980,1,c	;volatile
 11726                           
 11727                           ;main.c: 166: }
 11728  000862  D014               	goto	l11840
 11729  000864                     l11832:
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;main.c: 167: else if(last_sensed == 2){
 11733  000864  0E02               	movlw	2
 11734  000866  19DA               	xorwf	_last_sensed& (0+255),w,b
 11735  000868  11DB               	iorwf	(_last_sensed+1)& (0+255),w,b
 11736  00086A  A4D8               	btfss	status,2,c
 11737  00086C  D00F               	goto	l11840
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;main.c: 168: LATDbits.LATD0 = 1;
 11741  00086E  808C               	bsf	3980,0,c	;volatile
 11742                           
 11743                           ;main.c: 169: LATDbits.LATD1 = 0;
 11744  000870  928C               	bcf	3980,1,c	;volatile
 11745                           
 11746                           ; BSR set to: 0
 11747                           ;main.c: 170: _delay((unsigned long)((ninty_deg)*(10000000/4000.0)));
 11748  000872  0E04               	movlw	4
 11749  000874  0100               	movlb	0	; () banked
 11750  000876  6FA8               	movwf	(??_completion_return+1)& (0+255),b
 11751  000878  0E4D               	movlw	77
 11752  00087A  6FA7               	movwf	??_completion_return& (0+255),b
 11753  00087C  0E23               	movlw	35
 11754  00087E                     u13467:
 11755  00087E  2EE8               	decfsz	wreg,f,c
 11756  000880  D7FE               	bra	u13467
 11757  000882  2FA7               	decfsz	??_completion_return& (0+255),f,b
 11758  000884  D7FC               	bra	u13467
 11759  000886  2FA8               	decfsz	(??_completion_return+1)& (0+255),f,b
 11760  000888  D7FA               	bra	u13467
 11761                           
 11762                           ;main.c: 171: LATDbits.LATD0 = 0;
 11763  00088A  908C               	bcf	3980,0,c	;volatile
 11764  00088C                     l11840:
 11765                           
 11766                           ;main.c: 172: };main.c: 174: INT0IF = 0;
 11767  00088C  92F2               	bcf	4082,1,c	;volatile
 11768                           
 11769                           ;main.c: 175: INT0IE = 1;
 11770  00088E  88F2               	bsf	4082,4,c	;volatile
 11771                           
 11772                           ;main.c: 176: INTEDG0 = 1;
 11773  000890  8CF1               	bsf	4081,6,c	;volatile
 11774                           
 11775                           ;main.c: 177: turns_counter=0;
 11776  000892  0E00               	movlw	0
 11777  000894  0100               	movlb	0	; () banked
 11778  000896  6FC8               	movwf	_turns_counter& (0+255),b
 11779  000898  0E00               	movlw	0
 11780  00089A  6FC9               	movwf	(_turns_counter+1)& (0+255),b
 11781  00089C  0E00               	movlw	0
 11782  00089E  6FCA               	movwf	(_turns_counter+2)& (0+255),b
 11783  0008A0  0E00               	movlw	0
 11784  0008A2  6FCB               	movwf	(_turns_counter+3)& (0+255),b
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;main.c: 178: rotary_counter=0;
 11788  0008A4  0E00               	movlw	0
 11789  0008A6  6E40               	movwf	_rotary_counter,c
 11790  0008A8  0E00               	movlw	0
 11791  0008AA  6E41               	movwf	_rotary_counter+1,c
 11792  0008AC  0E00               	movlw	0
 11793  0008AE  6E42               	movwf	_rotary_counter+2,c
 11794  0008B0  0E00               	movlw	0
 11795  0008B2  6E43               	movwf	_rotary_counter+3,c
 11796                           
 11797                           ;main.c: 180: while (turns_counter < (car_width/2 + half_lane_width)){
 11798  0008B4  D002               	goto	l11852
 11799  0008B6                     l11850:
 11800                           
 11801                           ; BSR set to: 0
 11802                           ;main.c: 181: R_I();
 11803  0008B6  EC42  F027         	call	_R_I	;wreg free
 11804  0008BA                     l11852:
 11805  0008BA  C0C8  F098         	movff	_turns_counter,___flge@ff1
 11806  0008BE  C0C9  F099         	movff	_turns_counter+1,___flge@ff1+1
 11807  0008C2  C0CA  F09A         	movff	_turns_counter+2,___flge@ff1+2
 11808  0008C6  C0CB  F09B         	movff	_turns_counter+3,___flge@ff1+3
 11809  0008CA  0ECD               	movlw	205
 11810  0008CC  0100               	movlb	0	; () banked
 11811  0008CE  6F9C               	movwf	___flge@ff2& (0+255),b
 11812  0008D0  0ECC               	movlw	204
 11813  0008D2  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
 11814  0008D4  0EDC               	movlw	220
 11815  0008D6  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
 11816  0008D8  0E3F               	movlw	63
 11817  0008DA  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
 11818  0008DC  ECF6  F01D         	call	___flge	;wreg free
 11819  0008E0  0100               	movlb	0	; () banked
 11820  0008E2  A0D8               	btfss	status,0,c
 11821  0008E4  D7E8               	goto	l11850
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;main.c: 182: };main.c: 183: Stop();
 11825  0008E6  ECAA  F02A         	call	_Stop	;wreg free
 11826                           
 11827                           ;main.c: 185: turns_counter=0;
 11828  0008EA  0E00               	movlw	0
 11829  0008EC  0100               	movlb	0	; () banked
 11830  0008EE  6FC8               	movwf	_turns_counter& (0+255),b
 11831  0008F0  0E00               	movlw	0
 11832  0008F2  6FC9               	movwf	(_turns_counter+1)& (0+255),b
 11833  0008F4  0E00               	movlw	0
 11834  0008F6  6FCA               	movwf	(_turns_counter+2)& (0+255),b
 11835  0008F8  0E00               	movlw	0
 11836  0008FA  6FCB               	movwf	(_turns_counter+3)& (0+255),b
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;main.c: 186: rotary_counter=0;
 11840  0008FC  0E00               	movlw	0
 11841  0008FE  6E40               	movwf	_rotary_counter,c
 11842  000900  0E00               	movlw	0
 11843  000902  6E41               	movwf	_rotary_counter+1,c
 11844  000904  0E00               	movlw	0
 11845  000906  6E42               	movwf	_rotary_counter+2,c
 11846  000908  0E00               	movlw	0
 11847  00090A  6E43               	movwf	_rotary_counter+3,c
 11848                           
 11849                           ;main.c: 187: while (turns_counter < accum_straight_distance + 1.8 ){
 11850  00090C  D002               	goto	l11862
 11851  00090E                     l11860:
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;main.c: 188: backw();
 11855  00090E  EC5E  F02A         	call	_backw	;wreg free
 11856  000912                     l11862:
 11857  000912  C0C8  F098         	movff	_turns_counter,___flge@ff1
 11858  000916  C0C9  F099         	movff	_turns_counter+1,___flge@ff1+1
 11859  00091A  C0CA  F09A         	movff	_turns_counter+2,___flge@ff1+2
 11860  00091E  C0CB  F09B         	movff	_turns_counter+3,___flge@ff1+3
 11861  000922  0E66               	movlw	102
 11862  000924  0100               	movlb	0	; () banked
 11863  000926  6F84               	movwf	___fladd@a& (0+255),b
 11864  000928  0E66               	movlw	102
 11865  00092A  6F85               	movwf	(___fladd@a+1)& (0+255),b
 11866  00092C  0EE6               	movlw	230
 11867  00092E  6F86               	movwf	(___fladd@a+2)& (0+255),b
 11868  000930  0E3F               	movlw	63
 11869  000932  6F87               	movwf	(___fladd@a+3)& (0+255),b
 11870  000934  C0C4  F080         	movff	_accum_straight_distance,___fladd@b
 11871  000938  C0C5  F081         	movff	_accum_straight_distance+1,___fladd@b+1
 11872  00093C  C0C6  F082         	movff	_accum_straight_distance+2,___fladd@b+2
 11873  000940  C0C7  F083         	movff	_accum_straight_distance+3,___fladd@b+3
 11874  000944  ECEB  F00A         	call	___fladd	;wreg free
 11875  000948  C080  F09C         	movff	?___fladd,___flge@ff2
 11876  00094C  C081  F09D         	movff	?___fladd+1,___flge@ff2+1
 11877  000950  C082  F09E         	movff	?___fladd+2,___flge@ff2+2
 11878  000954  C083  F09F         	movff	?___fladd+3,___flge@ff2+3
 11879  000958  ECF6  F01D         	call	___flge	;wreg free
 11880  00095C  0100               	movlb	0	; () banked
 11881  00095E  A0D8               	btfss	status,0,c
 11882  000960  D7D6               	goto	l11860
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;main.c: 189: };main.c: 190: Stop();
 11886  000962  ECAA  F02A         	call	_Stop	;wreg free
 11887                           
 11888                           ;main.c: 192: turns_counter=0;
 11889  000966  0E00               	movlw	0
 11890  000968  0100               	movlb	0	; () banked
 11891  00096A  6FC8               	movwf	_turns_counter& (0+255),b
 11892  00096C  0E00               	movlw	0
 11893  00096E  6FC9               	movwf	(_turns_counter+1)& (0+255),b
 11894  000970  0E00               	movlw	0
 11895  000972  6FCA               	movwf	(_turns_counter+2)& (0+255),b
 11896  000974  0E00               	movlw	0
 11897  000976  6FCB               	movwf	(_turns_counter+3)& (0+255),b
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;main.c: 193: rotary_counter=0;
 11901  000978  0E00               	movlw	0
 11902  00097A  6E40               	movwf	_rotary_counter,c
 11903  00097C  0E00               	movlw	0
 11904  00097E  6E41               	movwf	_rotary_counter+1,c
 11905  000980  0E00               	movlw	0
 11906  000982  6E42               	movwf	_rotary_counter+2,c
 11907  000984  0E00               	movlw	0
 11908  000986  6E43               	movwf	_rotary_counter+3,c
 11909                           
 11910                           ;main.c: 194: while (turns_counter < car_width/2 + half_lane_width){
 11911  000988  D002               	goto	l11872
 11912  00098A                     l11870:
 11913                           
 11914                           ; BSR set to: 0
 11915                           ;main.c: 195: L_I();
 11916  00098A  EC90  F028         	call	_L_I	;wreg free
 11917  00098E                     l11872:
 11918  00098E  C0C8  F098         	movff	_turns_counter,___flge@ff1
 11919  000992  C0C9  F099         	movff	_turns_counter+1,___flge@ff1+1
 11920  000996  C0CA  F09A         	movff	_turns_counter+2,___flge@ff1+2
 11921  00099A  C0CB  F09B         	movff	_turns_counter+3,___flge@ff1+3
 11922  00099E  0ECD               	movlw	205
 11923  0009A0  0100               	movlb	0	; () banked
 11924  0009A2  6F9C               	movwf	___flge@ff2& (0+255),b
 11925  0009A4  0ECC               	movlw	204
 11926  0009A6  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
 11927  0009A8  0EDC               	movlw	220
 11928  0009AA  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
 11929  0009AC  0E3F               	movlw	63
 11930  0009AE  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
 11931  0009B0  ECF6  F01D         	call	___flge	;wreg free
 11932  0009B4  0100               	movlb	0	; () banked
 11933  0009B6  A0D8               	btfss	status,0,c
 11934  0009B8  D7E8               	goto	l11870
 11935                           
 11936                           ; BSR set to: 0
 11937                           ;main.c: 196: };main.c: 197: Stop();
 11938  0009BA  ECAA  F02A         	call	_Stop	;wreg free
 11939                           
 11940                           ;main.c: 199: turns_counter=0;
 11941  0009BE  0E00               	movlw	0
 11942  0009C0  0100               	movlb	0	; () banked
 11943  0009C2  6FC8               	movwf	_turns_counter& (0+255),b
 11944  0009C4  0E00               	movlw	0
 11945  0009C6  6FC9               	movwf	(_turns_counter+1)& (0+255),b
 11946  0009C8  0E00               	movlw	0
 11947  0009CA  6FCA               	movwf	(_turns_counter+2)& (0+255),b
 11948  0009CC  0E00               	movlw	0
 11949  0009CE  6FCB               	movwf	(_turns_counter+3)& (0+255),b
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;main.c: 200: rotary_counter=0;
 11953  0009D0  0E00               	movlw	0
 11954  0009D2  6E40               	movwf	_rotary_counter,c
 11955  0009D4  0E00               	movlw	0
 11956  0009D6  6E41               	movwf	_rotary_counter+1,c
 11957  0009D8  0E00               	movlw	0
 11958  0009DA  6E42               	movwf	_rotary_counter+2,c
 11959  0009DC  0E00               	movlw	0
 11960  0009DE  6E43               	movwf	_rotary_counter+3,c
 11961                           
 11962                           ; BSR set to: 0
 11963                           ;main.c: 202: INT0IF = 0;
 11964  0009E0  92F2               	bcf	4082,1,c	;volatile
 11965                           
 11966                           ; BSR set to: 0
 11967                           ;main.c: 203: INT0IE = 0;
 11968  0009E2  98F2               	bcf	4082,4,c	;volatile
 11969                           
 11970                           ; BSR set to: 0
 11971                           ;main.c: 205: unsigned long tick = 0;
 11972  0009E4  0E00               	movlw	0
 11973  0009E6  6FAD               	movwf	completion_return@tick& (0+255),b
 11974  0009E8  0E00               	movlw	0
 11975  0009EA  6FAE               	movwf	(completion_return@tick+1)& (0+255),b
 11976  0009EC  0E00               	movlw	0
 11977  0009EE  6FAF               	movwf	(completion_return@tick+2)& (0+255),b
 11978  0009F0  0E00               	movlw	0
 11979  0009F2  6FB0               	movwf	(completion_return@tick+3)& (0+255),b
 11980                           
 11981                           ; BSR set to: 0
 11982                           ;main.c: 206: if (no_cone == 1){
 11983  0009F4  05E6               	decf	_no_cone& (0+255),w,b
 11984  0009F6  B4D8               	btfsc	status,2,c
 11985  0009F8  D024               	goto	l252
 11986  0009FA  D02C               	goto	u11890
 11987  0009FC                     l253:
 11988                           
 11989                           ; BSR set to: 0
 11990                           ;main.c: 208: LATAbits.LATA5 = 1;
 11991  0009FC  8A89               	bsf	3977,5,c	;volatile
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;main.c: 209: _delay((unsigned long)((2.5)*(10000000/4000.0)));
 11995  0009FE  0E09               	movlw	9
 11996  000A00  0100               	movlb	0	; () banked
 11997  000A02  6FA7               	movwf	??_completion_return& (0+255),b
 11998  000A04  0E1C               	movlw	28
 11999  000A06                     u13477:
 12000  000A06  2EE8               	decfsz	wreg,f,c
 12001  000A08  D7FE               	bra	u13477
 12002  000A0A  2FA7               	decfsz	??_completion_return& (0+255),f,b
 12003  000A0C  D7FC               	bra	u13477
 12004  000A0E  F000               	nop	
 12005                           
 12006                           ;main.c: 210: LATAbits.LATA5 = 0;
 12007  000A10  9A89               	bcf	3977,5,c	;volatile
 12008                           
 12009                           ;main.c: 211: _delay((unsigned long)((16.5)*(10000000/4000.0)));
 12010  000A12  0E36               	movlw	54
 12011  000A14  0100               	movlb	0	; () banked
 12012  000A16  6FA7               	movwf	??_completion_return& (0+255),b
 12013  000A18  0E91               	movlw	145
 12014  000A1A                     u13487:
 12015  000A1A  2EE8               	decfsz	wreg,f,c
 12016  000A1C  D7FE               	bra	u13487
 12017  000A1E  2FA7               	decfsz	??_completion_return& (0+255),f,b
 12018  000A20  D7FC               	bra	u13487
 12019                           
 12020                           ;main.c: 212: tick ++;
 12021  000A22  0E01               	movlw	1
 12022  000A24  0100               	movlb	0	; () banked
 12023  000A26  27AD               	addwf	completion_return@tick& (0+255),f,b
 12024  000A28  0E00               	movlw	0
 12025  000A2A  23AE               	addwfc	(completion_return@tick+1)& (0+255),f,b
 12026  000A2C  23AF               	addwfc	(completion_return@tick+2)& (0+255),f,b
 12027  000A2E  23B0               	addwfc	(completion_return@tick+3)& (0+255),f,b
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;main.c: 213: _delay((unsigned long)((1)*(10000000/4000.0)));
 12031  000A30  0E04               	movlw	4
 12032  000A32  0100               	movlb	0	; () banked
 12033  000A34  6FA7               	movwf	??_completion_return& (0+255),b
 12034  000A36  0E3D               	movlw	61
 12035  000A38                     u13497:
 12036  000A38  2EE8               	decfsz	wreg,f,c
 12037  000A3A  D7FE               	bra	u13497
 12038  000A3C  2FA7               	decfsz	??_completion_return& (0+255),f,b
 12039  000A3E  D7FC               	bra	u13497
 12040  000A40  D000               	nop2	
 12041  000A42                     l252:
 12042  000A42  0100               	movlb	0	; () banked
 12043  000A44  51B0               	movf	(completion_return@tick+3)& (0+255),w,b
 12044  000A46  11AF               	iorwf	(completion_return@tick+2)& (0+255),w,b
 12045  000A48  11AE               	iorwf	(completion_return@tick+1)& (0+255),w,b
 12046  000A4A  E104               	bnz	u11890
 12047  000A4C  0E3C               	movlw	60
 12048  000A4E  5DAD               	subwf	completion_return@tick& (0+255),w,b
 12049  000A50  A0D8               	btfss	status,0,c
 12050  000A52  D7D4               	goto	l253
 12051  000A54                     u11890:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;main.c: 216: };main.c: 218: readRTC();
 12055                           
 12056                           ; BSR set to: 0
 12057  000A54  EC37  F020         	call	_readRTC	;wreg free
 12058                           
 12059                           ;main.c: 219: end_sec = time[2]*3600+time[1]* 60 + time[0];
 12060  000A58  C0F2  F088         	movff	_time+2,___wmul@multiplier
 12061  000A5C  0100               	movlb	0	; () banked
 12062  000A5E  6B89               	clrf	(___wmul@multiplier+1)& (0+255),b
 12063  000A60  0E0E               	movlw	14
 12064  000A62  6F8B               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12065  000A64  0E10               	movlw	16
 12066  000A66  6F8A               	movwf	___wmul@multiplicand& (0+255),b
 12067  000A68  EC59  F029         	call	___wmul	;wreg free
 12068  000A6C  0100               	movlb	0	; () banked
 12069  000A6E  51F1               	movf	(_time+1)& (0+255),w,b
 12070  000A70  0D3C               	mullw	60
 12071  000A72  CFF3 F0A7          	movff	prodl,??_completion_return
 12072  000A76  CFF4 F0A8          	movff	prodh,??_completion_return+1
 12073  000A7A  5188               	movf	?___wmul& (0+255),w,b
 12074  000A7C  27A7               	addwf	??_completion_return& (0+255),f,b
 12075  000A7E  5189               	movf	(?___wmul+1)& (0+255),w,b
 12076  000A80  23A8               	addwfc	(??_completion_return+1)& (0+255),f,b
 12077  000A82  51F0               	movf	_time& (0+255),w,b
 12078  000A84  27A7               	addwf	??_completion_return& (0+255),f,b
 12079  000A86  0E00               	movlw	0
 12080  000A88  23A8               	addwfc	(??_completion_return+1)& (0+255),f,b
 12081  000A8A  C0A7  F0BC         	movff	??_completion_return,_end_sec
 12082  000A8E  C0A8  F0BD         	movff	??_completion_return+1,_end_sec+1
 12083  000A92  0E00               	movlw	0
 12084  000A94  BFBD               	btfsc	(_end_sec+1)& (0+255),7,b
 12085  000A96  0EFF               	movlw	-1
 12086  000A98  6FBE               	movwf	(_end_sec+2)& (0+255),b
 12087  000A9A  6FBF               	movwf	(_end_sec+3)& (0+255),b
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;main.c: 220: operation_sec = end_sec - start_sec;
 12091  000A9C  51C0               	movf	_start_sec& (0+255),w,b
 12092  000A9E  5DBC               	subwf	_end_sec& (0+255),w,b
 12093  000AA0  6FB8               	movwf	_operation_sec& (0+255),b
 12094  000AA2  51C1               	movf	(_start_sec+1)& (0+255),w,b
 12095  000AA4  59BD               	subwfb	(_end_sec+1)& (0+255),w,b
 12096  000AA6  6FB9               	movwf	(_operation_sec+1)& (0+255),b
 12097  000AA8  51C2               	movf	(_start_sec+2)& (0+255),w,b
 12098  000AAA  59BE               	subwfb	(_end_sec+2)& (0+255),w,b
 12099  000AAC  6FBA               	movwf	(_operation_sec+2)& (0+255),b
 12100  000AAE  51C3               	movf	(_start_sec+3)& (0+255),w,b
 12101  000AB0  59BF               	subwfb	(_end_sec+3)& (0+255),w,b
 12102  000AB2  6FBB               	movwf	(_operation_sec+3)& (0+255),b
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;main.c: 221: operation_time[2] = operation_sec/3600;
 12106  000AB4  C0B8  F08A         	movff	_operation_sec,___aldiv@dividend
 12107  000AB8  C0B9  F08B         	movff	_operation_sec+1,___aldiv@dividend+1
 12108  000ABC  C0BA  F08C         	movff	_operation_sec+2,___aldiv@dividend+2
 12109  000AC0  C0BB  F08D         	movff	_operation_sec+3,___aldiv@dividend+3
 12110  000AC4  0E10               	movlw	16
 12111  000AC6  6F8E               	movwf	___aldiv@divisor& (0+255),b
 12112  000AC8  0E0E               	movlw	14
 12113  000ACA  6F8F               	movwf	(___aldiv@divisor+1)& (0+255),b
 12114  000ACC  0E00               	movlw	0
 12115  000ACE  6F90               	movwf	(___aldiv@divisor+2)& (0+255),b
 12116  000AD0  0E00               	movlw	0
 12117  000AD2  6F91               	movwf	(___aldiv@divisor+3)& (0+255),b
 12118  000AD4  EC5F  F01E         	call	___aldiv	;wreg free
 12119  000AD8  0100               	movlb	0	; () banked
 12120  000ADA  518A               	movf	?___aldiv& (0+255),w,b
 12121  000ADC  6FF9               	movwf	(_operation_time+2)& (0+255),b
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;main.c: 222: operation_time[1] = (operation_sec%3600)/60;
 12125  000ADE  0E10               	movlw	16
 12126  000AE0  6F84               	movwf	___almod@divisor& (0+255),b
 12127  000AE2  0E0E               	movlw	14
 12128  000AE4  6F85               	movwf	(___almod@divisor+1)& (0+255),b
 12129  000AE6  0E00               	movlw	0
 12130  000AE8  6F86               	movwf	(___almod@divisor+2)& (0+255),b
 12131  000AEA  0E00               	movlw	0
 12132  000AEC  6F87               	movwf	(___almod@divisor+3)& (0+255),b
 12133  000AEE  C0B8  F080         	movff	_operation_sec,___almod@dividend
 12134  000AF2  C0B9  F081         	movff	_operation_sec+1,___almod@dividend+1
 12135  000AF6  C0BA  F082         	movff	_operation_sec+2,___almod@dividend+2
 12136  000AFA  C0BB  F083         	movff	_operation_sec+3,___almod@dividend+3
 12137  000AFE  EC8A  F01F         	call	___almod	;wreg free
 12138  000B02  C080  F08A         	movff	?___almod,___aldiv@dividend
 12139  000B06  C081  F08B         	movff	?___almod+1,___aldiv@dividend+1
 12140  000B0A  C082  F08C         	movff	?___almod+2,___aldiv@dividend+2
 12141  000B0E  C083  F08D         	movff	?___almod+3,___aldiv@dividend+3
 12142  000B12  0E3C               	movlw	60
 12143  000B14  0100               	movlb	0	; () banked
 12144  000B16  6F8E               	movwf	___aldiv@divisor& (0+255),b
 12145  000B18  0E00               	movlw	0
 12146  000B1A  6F8F               	movwf	(___aldiv@divisor+1)& (0+255),b
 12147  000B1C  0E00               	movlw	0
 12148  000B1E  6F90               	movwf	(___aldiv@divisor+2)& (0+255),b
 12149  000B20  0E00               	movlw	0
 12150  000B22  6F91               	movwf	(___aldiv@divisor+3)& (0+255),b
 12151  000B24  EC5F  F01E         	call	___aldiv	;wreg free
 12152  000B28  0100               	movlb	0	; () banked
 12153  000B2A  518A               	movf	?___aldiv& (0+255),w,b
 12154  000B2C  6FF8               	movwf	(_operation_time+1)& (0+255),b
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;main.c: 223: operation_time[0] = (operation_sec%3600)%60;
 12158  000B2E  0E10               	movlw	16
 12159  000B30  6F84               	movwf	___almod@divisor& (0+255),b
 12160  000B32  0E0E               	movlw	14
 12161  000B34  6F85               	movwf	(___almod@divisor+1)& (0+255),b
 12162  000B36  0E00               	movlw	0
 12163  000B38  6F86               	movwf	(___almod@divisor+2)& (0+255),b
 12164  000B3A  0E00               	movlw	0
 12165  000B3C  6F87               	movwf	(___almod@divisor+3)& (0+255),b
 12166  000B3E  C0B8  F080         	movff	_operation_sec,___almod@dividend
 12167  000B42  C0B9  F081         	movff	_operation_sec+1,___almod@dividend+1
 12168  000B46  C0BA  F082         	movff	_operation_sec+2,___almod@dividend+2
 12169  000B4A  C0BB  F083         	movff	_operation_sec+3,___almod@dividend+3
 12170  000B4E  EC8A  F01F         	call	___almod	;wreg free
 12171  000B52  C080  F0A9         	movff	?___almod,_completion_return$2720
 12172  000B56  C081  F0AA         	movff	?___almod+1,_completion_return$2720+1
 12173  000B5A  C082  F0AB         	movff	?___almod+2,_completion_return$2720+2
 12174  000B5E  C083  F0AC         	movff	?___almod+3,_completion_return$2720+3
 12175                           
 12176                           ;main.c: 223: operation_time[0] = (operation_sec%3600)%60;
 12177  000B62  C0A9  F080         	movff	_completion_return$2720,___almod@dividend
 12178  000B66  C0AA  F081         	movff	_completion_return$2720+1,___almod@dividend+1
 12179  000B6A  C0AB  F082         	movff	_completion_return$2720+2,___almod@dividend+2
 12180  000B6E  C0AC  F083         	movff	_completion_return$2720+3,___almod@dividend+3
 12181  000B72  0E3C               	movlw	60
 12182  000B74  0100               	movlb	0	; () banked
 12183  000B76  6F84               	movwf	___almod@divisor& (0+255),b
 12184  000B78  0E00               	movlw	0
 12185  000B7A  6F85               	movwf	(___almod@divisor+1)& (0+255),b
 12186  000B7C  0E00               	movlw	0
 12187  000B7E  6F86               	movwf	(___almod@divisor+2)& (0+255),b
 12188  000B80  0E00               	movlw	0
 12189  000B82  6F87               	movwf	(___almod@divisor+3)& (0+255),b
 12190  000B84  EC8A  F01F         	call	___almod	;wreg free
 12191  000B88  0100               	movlb	0	; () banked
 12192  000B8A  5180               	movf	?___almod& (0+255),w,b
 12193  000B8C  6FF7               	movwf	_operation_time& (0+255),b
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;main.c: 225: completion_write();
 12197  000B8E  ECF6  F016         	call	_completion_write	;wreg free
 12198                           
 12199                           ;main.c: 227: completion_bool = 1;
 12200  000B92  0E01               	movlw	1
 12201  000B94  0100               	movlb	0	; () banked
 12202  000B96  6FFE               	movwf	_completion_bool& (0+255),b
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;main.c: 228: disp_standby_page =0;
 12206  000B98  0E00               	movlw	0
 12207  000B9A  6FD5               	movwf	(_disp_standby_page+1)& (0+255),b
 12208  000B9C  0E00               	movlw	0
 12209  000B9E  6FD4               	movwf	_disp_standby_page& (0+255),b
 12210                           
 12211                           ; BSR set to: 0
 12212  000BA0  0012               	return		;funcret
 12213  000BA2                     __end_of_completion_return:
 12214                           	opt callstack 0
 12215                           
 12216 ;; *************** function _readRTC *****************
 12217 ;; Defined at:
 12218 ;;		line 13 in file "RTC.c"
 12219 ;; Parameters:    Size  Location     Type
 12220 ;;		None
 12221 ;; Auto vars:     Size  Location     Type
 12222 ;;  i               1   22[BANK0 ] unsigned char 
 12223 ;;  t_data          1   23[BANK0 ] unsigned char 
 12224 ;; Return value:  Size  Location     Type
 12225 ;;                  1    wreg      void 
 12226 ;; Registers used:
 12227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12228 ;; Tracked objects:
 12229 ;;		On entry : 0/0
 12230 ;;		On exit  : 0/0
 12231 ;;		Unchanged: 0/0
 12232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12234 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12235 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12236 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12237 ;;Total ram usage:        3 bytes
 12238 ;; Hardware stack levels used:    1
 12239 ;; Hardware stack levels required when called:   10
 12240 ;; This function calls:
 12241 ;;		_I2C_Master_Init
 12242 ;;		_I2C_Master_Read
 12243 ;;		_I2C_Master_Start
 12244 ;;		_I2C_Master_Stop
 12245 ;;		_I2C_Master_Write
 12246 ;; This function is called by:
 12247 ;;		_normal_updater
 12248 ;;		_completion_return
 12249 ;;		_page3
 12250 ;; This function uses a non-reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text50
 12254  00406E                     __ptext50:
 12255                           	opt callstack 0
 12256  00406E                     _readRTC:
 12257                           	opt callstack 18
 12258                           
 12259                           ;RTC.c: 14: I2C_Master_Init(100000);
 12260                           
 12261                           ; BSR set to: 0
 12262                           ;incstack = 0
 12263  00406E  0EA0               	movlw	160
 12264  004070  0100               	movlb	0	; () banked
 12265  004072  6F8D               	movwf	I2C_Master_Init@clockFreq& (0+255),b
 12266  004074  0E86               	movlw	134
 12267  004076  6F8E               	movwf	(I2C_Master_Init@clockFreq+1)& (0+255),b
 12268  004078  0E01               	movlw	1
 12269  00407A  6F8F               	movwf	(I2C_Master_Init@clockFreq+2)& (0+255),b
 12270  00407C  0E00               	movlw	0
 12271  00407E  6F90               	movwf	(I2C_Master_Init@clockFreq+3)& (0+255),b
 12272  004080  ECBB  F025         	call	_I2C_Master_Init	;wreg free
 12273                           
 12274                           ;RTC.c: 16: I2C_Master_Start();
 12275  004084  ECD1  F02A         	call	_I2C_Master_Start	;wreg free
 12276                           
 12277                           ;RTC.c: 17: I2C_Master_Write(0b11010000);
 12278  004088  0E00               	movlw	0
 12279  00408A  0100               	movlb	0	; () banked
 12280  00408C  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
 12281  00408E  0ED0               	movlw	208
 12282  004090  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
 12283  004092  ECC3  F02A         	call	_I2C_Master_Write	;wreg free
 12284                           
 12285                           ;RTC.c: 18: I2C_Master_Write(0x00);
 12286  004096  0E00               	movlw	0
 12287  004098  0100               	movlb	0	; () banked
 12288  00409A  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
 12289  00409C  0E00               	movlw	0
 12290  00409E  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
 12291  0040A0  ECC3  F02A         	call	_I2C_Master_Write	;wreg free
 12292                           
 12293                           ;RTC.c: 19: I2C_Master_Stop();
 12294  0040A4  ECCD  F02A         	call	_I2C_Master_Stop	;wreg free
 12295                           
 12296                           ;RTC.c: 22: I2C_Master_Start();
 12297  0040A8  ECD1  F02A         	call	_I2C_Master_Start	;wreg free
 12298                           
 12299                           ;RTC.c: 23: I2C_Master_Write(0b11010001);
 12300  0040AC  0E00               	movlw	0
 12301  0040AE  0100               	movlb	0	; () banked
 12302  0040B0  6F82               	movwf	(I2C_Master_Write@byteToWrite+1)& (0+255),b
 12303  0040B2  0ED1               	movlw	209
 12304  0040B4  6F81               	movwf	I2C_Master_Write@byteToWrite& (0+255),b
 12305  0040B6  ECC3  F02A         	call	_I2C_Master_Write	;wreg free
 12306                           
 12307                           ;RTC.c: 24: for(unsigned char i = 0; i < 6; i++){
 12308  0040BA  0E00               	movlw	0
 12309  0040BC  0100               	movlb	0	; () banked
 12310  0040BE  6F96               	movwf	readRTC@i& (0+255),b
 12311  0040C0                     l10326:
 12312                           
 12313                           ; BSR set to: 0
 12314                           ;RTC.c: 25: t_data = I2C_Master_Read(0);
 12315  0040C0  0E00               	movlw	0
 12316  0040C2  EC1B  F029         	call	_I2C_Master_Read
 12317  0040C6  0100               	movlb	0	; () banked
 12318  0040C8  6F97               	movwf	readRTC@t_data& (0+255),b
 12319                           
 12320                           ; BSR set to: 0
 12321                           ;RTC.c: 26: time[i] = (t_data>>4)*10+(t_data&0x0F);
 12322  0040CA  0EF0               	movlw	low _time
 12323  0040CC  2596               	addwf	readRTC@i& (0+255),w,b
 12324  0040CE  6ED9               	movwf	fsr2l,c
 12325  0040D0  6ADA               	clrf	fsr2h,c
 12326  0040D2  0E00               	movlw	high _time
 12327  0040D4  22DA               	addwfc	fsr2h,f,c
 12328  0040D6  C097  F095         	movff	readRTC@t_data,??_readRTC
 12329  0040DA  0E0F               	movlw	15
 12330  0040DC  1795               	andwf	??_readRTC& (0+255),f,b
 12331  0040DE  3997               	swapf	readRTC@t_data& (0+255),w,b
 12332  0040E0  0B0F               	andlw	15
 12333  0040E2  0D0A               	mullw	10
 12334  0040E4  50F3               	movf	prodl,w,c
 12335  0040E6  2595               	addwf	??_readRTC& (0+255),w,b
 12336  0040E8  6EDF               	movwf	indf2,c
 12337                           
 12338                           ; BSR set to: 0
 12339  0040EA  2B96               	incf	readRTC@i& (0+255),f,b
 12340                           
 12341                           ; BSR set to: 0
 12342  0040EC  0E05               	movlw	5
 12343  0040EE  6596               	cpfsgt	readRTC@i& (0+255),b
 12344  0040F0  D7E7               	goto	l10326
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;RTC.c: 27: };RTC.c: 28: t_data = I2C_Master_Read(1);
 12348  0040F2  0E01               	movlw	1
 12349  0040F4  EC1B  F029         	call	_I2C_Master_Read
 12350  0040F8  0100               	movlb	0	; () banked
 12351  0040FA  6F97               	movwf	readRTC@t_data& (0+255),b
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;RTC.c: 29: time[6] = (t_data>>4)*10+(t_data&0x0F);
 12355  0040FC  C097  F095         	movff	readRTC@t_data,??_readRTC
 12356  004100  0E0F               	movlw	15
 12357  004102  1795               	andwf	??_readRTC& (0+255),f,b
 12358  004104  3997               	swapf	readRTC@t_data& (0+255),w,b
 12359  004106  0B0F               	andlw	15
 12360  004108  0D0A               	mullw	10
 12361  00410A  50F3               	movf	prodl,w,c
 12362  00410C  2595               	addwf	??_readRTC& (0+255),w,b
 12363  00410E  6FF6               	movwf	(_time+6)& (0+255),b
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;RTC.c: 30: I2C_Master_Stop();
 12367  004110  ECCD  F02A         	call	_I2C_Master_Stop	;wreg free
 12368  004114  0012               	return		;funcret
 12369  004116                     __end_of_readRTC:
 12370                           	opt callstack 0
 12371                           
 12372 ;; *************** function _I2C_Master_Write *****************
 12373 ;; Defined at:
 12374 ;;		line 70 in file "I2C.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  byteToWrite     2    1[BANK0 ] unsigned int 
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1    wreg      void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12391 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12392 ;;Total ram usage:        2 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    9
 12395 ;; This function calls:
 12396 ;;		_I2C_Master_Wait
 12397 ;; This function is called by:
 12398 ;;		_readRTC
 12399 ;;		_rtc_set_time
 12400 ;; This function uses a non-reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text51
 12404  005586                     __ptext51:
 12405                           	opt callstack 0
 12406  005586                     _I2C_Master_Write:
 12407                           	opt callstack 18
 12408                           
 12409                           ;I2C.c: 71: I2C_Master_Wait();
 12410                           
 12411                           ;incstack = 0
 12412  005586  EC74  F02A         	call	_I2C_Master_Wait	;wreg free
 12413                           
 12414                           ;I2C.c: 74: SSPBUF = byteToWrite;
 12415  00558A  C081  FFC9         	movff	I2C_Master_Write@byteToWrite,4041	;volatile
 12416  00558E  0012               	return		;funcret
 12417  005590                     __end_of_I2C_Master_Write:
 12418                           	opt callstack 0
 12419                           
 12420 ;; *************** function _I2C_Master_Stop *****************
 12421 ;; Defined at:
 12422 ;;		line 65 in file "I2C.c"
 12423 ;; Parameters:    Size  Location     Type
 12424 ;;		None
 12425 ;; Auto vars:     Size  Location     Type
 12426 ;;		None
 12427 ;; Return value:  Size  Location     Type
 12428 ;;                  1    wreg      void 
 12429 ;; Registers used:
 12430 ;;		wreg, status,2, status,0, cstack
 12431 ;; Tracked objects:
 12432 ;;		On entry : 0/0
 12433 ;;		On exit  : 0/0
 12434 ;;		Unchanged: 0/0
 12435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12440 ;;Total ram usage:        0 bytes
 12441 ;; Hardware stack levels used:    1
 12442 ;; Hardware stack levels required when called:    9
 12443 ;; This function calls:
 12444 ;;		_I2C_Master_Wait
 12445 ;; This function is called by:
 12446 ;;		_readRTC
 12447 ;;		_rtc_set_time
 12448 ;; This function uses a non-reentrant model
 12449 ;;
 12450                           
 12451                           	psect	text52
 12452  00559A                     __ptext52:
 12453                           	opt callstack 0
 12454  00559A                     _I2C_Master_Stop:
 12455                           	opt callstack 18
 12456                           
 12457                           ;I2C.c: 66: I2C_Master_Wait();
 12458                           
 12459                           ;incstack = 0
 12460  00559A  EC74  F02A         	call	_I2C_Master_Wait	;wreg free
 12461                           
 12462                           ;I2C.c: 67: SSPCON2bits.PEN = 1;
 12463  00559E  84C5               	bsf	4037,2,c	;volatile
 12464  0055A0  0012               	return		;funcret
 12465  0055A2                     __end_of_I2C_Master_Stop:
 12466                           	opt callstack 0
 12467                           
 12468 ;; *************** function _I2C_Master_Start *****************
 12469 ;; Defined at:
 12470 ;;		line 55 in file "I2C.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;		None
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;		None
 12475 ;; Return value:  Size  Location     Type
 12476 ;;                  1    wreg      void 
 12477 ;; Registers used:
 12478 ;;		wreg, status,2, status,0, cstack
 12479 ;; Tracked objects:
 12480 ;;		On entry : 0/0
 12481 ;;		On exit  : 0/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12488 ;;Total ram usage:        0 bytes
 12489 ;; Hardware stack levels used:    1
 12490 ;; Hardware stack levels required when called:    9
 12491 ;; This function calls:
 12492 ;;		_I2C_Master_Wait
 12493 ;; This function is called by:
 12494 ;;		_readRTC
 12495 ;;		_rtc_set_time
 12496 ;; This function uses a non-reentrant model
 12497 ;;
 12498                           
 12499                           	psect	text53
 12500  0055A2                     __ptext53:
 12501                           	opt callstack 0
 12502  0055A2                     _I2C_Master_Start:
 12503                           	opt callstack 18
 12504                           
 12505                           ;I2C.c: 56: I2C_Master_Wait();
 12506                           
 12507                           ;incstack = 0
 12508  0055A2  EC74  F02A         	call	_I2C_Master_Wait	;wreg free
 12509                           
 12510                           ;I2C.c: 57: SSPCON2bits.SEN = 1;
 12511  0055A6  80C5               	bsf	4037,0,c	;volatile
 12512  0055A8  0012               	return		;funcret
 12513  0055AA                     __end_of_I2C_Master_Start:
 12514                           	opt callstack 0
 12515                           
 12516 ;; *************** function _I2C_Master_Read *****************
 12517 ;; Defined at:
 12518 ;;		line 77 in file "I2C.c"
 12519 ;; Parameters:    Size  Location     Type
 12520 ;;  ackBit          1    wreg     unsigned char 
 12521 ;; Auto vars:     Size  Location     Type
 12522 ;;  ackBit          1    1[BANK0 ] unsigned char 
 12523 ;;  receivedByte    1    2[BANK0 ] unsigned char 
 12524 ;; Return value:  Size  Location     Type
 12525 ;;                  1    wreg      unsigned char 
 12526 ;; Registers used:
 12527 ;;		wreg, status,2, status,0, cstack
 12528 ;; Tracked objects:
 12529 ;;		On entry : 0/0
 12530 ;;		On exit  : 0/0
 12531 ;;		Unchanged: 0/0
 12532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12534 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12537 ;;Total ram usage:        2 bytes
 12538 ;; Hardware stack levels used:    1
 12539 ;; Hardware stack levels required when called:    9
 12540 ;; This function calls:
 12541 ;;		_I2C_Master_Wait
 12542 ;; This function is called by:
 12543 ;;		_readRTC
 12544 ;; This function uses a non-reentrant model
 12545 ;;
 12546                           
 12547                           	psect	text54
 12548  005236                     __ptext54:
 12549                           	opt callstack 0
 12550  005236                     _I2C_Master_Read:
 12551                           	opt callstack 18
 12552                           
 12553                           ;incstack = 0
 12554                           ;I2C_Master_Read@ackBit stored from wreg
 12555  005236  0100               	movlb	0	; () banked
 12556  005238  6F81               	movwf	I2C_Master_Read@ackBit& (0+255),b
 12557                           
 12558                           ;I2C.c: 78: I2C_Master_Wait();
 12559  00523A  EC74  F02A         	call	_I2C_Master_Wait	;wreg free
 12560                           
 12561                           ;I2C.c: 79: SSPCON2bits.RCEN = 1;
 12562  00523E  86C5               	bsf	4037,3,c	;volatile
 12563                           
 12564                           ;I2C.c: 81: I2C_Master_Wait();
 12565  005240  EC74  F02A         	call	_I2C_Master_Wait	;wreg free
 12566                           
 12567                           ;I2C.c: 84: unsigned char receivedByte = SSPBUF;
 12568  005244  CFC9 F082          	movff	4041,I2C_Master_Read@receivedByte	;volatile
 12569                           
 12570                           ;I2C.c: 86: I2C_Master_Wait();
 12571  005248  EC74  F02A         	call	_I2C_Master_Wait	;wreg free
 12572                           
 12573                           ;I2C.c: 87: SSPCON2bits.ACKDT = ackBit;
 12574  00524C  0100               	movlb	0	; () banked
 12575  00524E  B181               	btfsc	I2C_Master_Read@ackBit& (0+255),0,b
 12576  005250  D002               	bra	u9785
 12577  005252  9AC5               	bcf	4037,5,c	;volatile
 12578  005254  D001               	bra	u9786
 12579  005256                     u9785:
 12580  005256  8AC5               	bsf	4037,5,c	;volatile
 12581  005258                     u9786:
 12582                           
 12583                           ;I2C.c: 88: SSPCON2bits.ACKEN = 1;
 12584  005258  88C5               	bsf	4037,4,c	;volatile
 12585                           
 12586                           ;I2C.c: 90: return receivedByte;
 12587  00525A  0100               	movlb	0	; () banked
 12588  00525C  5182               	movf	I2C_Master_Read@receivedByte& (0+255),w,b
 12589                           
 12590                           ; BSR set to: 0
 12591  00525E  0012               	return		;funcret
 12592  005260                     __end_of_I2C_Master_Read:
 12593                           	opt callstack 0
 12594                           
 12595 ;; *************** function _I2C_Master_Wait *****************
 12596 ;; Defined at:
 12597 ;;		line 21 in file "I2C.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;		None
 12600 ;; Auto vars:     Size  Location     Type
 12601 ;;		None
 12602 ;; Return value:  Size  Location     Type
 12603 ;;                  1    wreg      void 
 12604 ;; Registers used:
 12605 ;;		wreg, status,2, status,0
 12606 ;; Tracked objects:
 12607 ;;		On entry : 0/0
 12608 ;;		On exit  : 0/0
 12609 ;;		Unchanged: 0/0
 12610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12615 ;;Total ram usage:        1 bytes
 12616 ;; Hardware stack levels used:    1
 12617 ;; Hardware stack levels required when called:    8
 12618 ;; This function calls:
 12619 ;;		Nothing
 12620 ;; This function is called by:
 12621 ;;		_I2C_Master_Start
 12622 ;;		_I2C_Master_Stop
 12623 ;;		_I2C_Master_Write
 12624 ;;		_I2C_Master_Read
 12625 ;;		_I2C_Master_RepeatedStart
 12626 ;; This function uses a non-reentrant model
 12627 ;;
 12628                           
 12629                           	psect	text55
 12630  0054E8                     __ptext55:
 12631                           	opt callstack 0
 12632  0054E8                     _I2C_Master_Wait:
 12633                           	opt callstack 18
 12634                           
 12635                           ;I2C.c: 26: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;incstack = 0
 12639  0054E8  B4C7               	btfsc	4039,2,c	;volatile
 12640  0054EA  D7FE               	goto	_I2C_Master_Wait
 12641  0054EC  CFC5 F080          	movff	4037,??_I2C_Master_Wait	;volatile
 12642  0054F0  0E1F               	movlw	31
 12643  0054F2  0100               	movlb	0	; () banked
 12644  0054F4  1780               	andwf	??_I2C_Master_Wait& (0+255),f,b
 12645  0054F6  B4D8               	btfsc	status,2,c
 12646  0054F8  0012               	return	
 12647  0054FA  D7F6               	goto	_I2C_Master_Wait
 12648  0054FC                     __end_of_I2C_Master_Wait:
 12649                           	opt callstack 0
 12650                           
 12651 ;; *************** function _I2C_Master_Init *****************
 12652 ;; Defined at:
 12653 ;;		line 32 in file "I2C.c"
 12654 ;; Parameters:    Size  Location     Type
 12655 ;;  clockFreq       4   13[BANK0 ] const unsigned long 
 12656 ;; Auto vars:     Size  Location     Type
 12657 ;;		None
 12658 ;; Return value:  Size  Location     Type
 12659 ;;                  1    wreg      void 
 12660 ;; Registers used:
 12661 ;;		wreg, status,2, status,0, cstack
 12662 ;; Tracked objects:
 12663 ;;		On entry : 0/0
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12667 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12669 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12670 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12671 ;;Total ram usage:        8 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:    9
 12674 ;; This function calls:
 12675 ;;		___lldiv
 12676 ;; This function is called by:
 12677 ;;		_readRTC
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           	psect	text56
 12682  004B76                     __ptext56:
 12683                           	opt callstack 0
 12684  004B76                     _I2C_Master_Init:
 12685                           	opt callstack 18
 12686                           
 12687                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;incstack = 0
 12691  004B76  9AC6               	bcf	4038,5,c	;volatile
 12692                           
 12693                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
 12694  004B78  8694               	bsf	3988,3,c	;volatile
 12695                           
 12696                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
 12697  004B7A  8894               	bsf	3988,4,c	;volatile
 12698                           
 12699                           ;I2C.c: 43: SSPADD = (10000000 / (4 * clockFreq)) - 1;
 12700  004B7C  0E80               	movlw	128
 12701  004B7E  0100               	movlb	0	; () banked
 12702  004B80  6F80               	movwf	___lldiv@dividend& (0+255),b
 12703  004B82  0E96               	movlw	150
 12704  004B84  6F81               	movwf	(___lldiv@dividend+1)& (0+255),b
 12705  004B86  0E98               	movlw	152
 12706  004B88  6F82               	movwf	(___lldiv@dividend+2)& (0+255),b
 12707  004B8A  0E00               	movlw	0
 12708  004B8C  6F83               	movwf	(___lldiv@dividend+3)& (0+255),b
 12709  004B8E  C08D  F091         	movff	I2C_Master_Init@clockFreq,??_I2C_Master_Init
 12710  004B92  C08E  F092         	movff	I2C_Master_Init@clockFreq+1,??_I2C_Master_Init+1
 12711  004B96  C08F  F093         	movff	I2C_Master_Init@clockFreq+2,??_I2C_Master_Init+2
 12712  004B9A  C090  F094         	movff	I2C_Master_Init@clockFreq+3,??_I2C_Master_Init+3
 12713  004B9E  0E02               	movlw	2
 12714  004BA0                     u9775:
 12715  004BA0  90D8               	bcf	status,0,c
 12716  004BA2  3791               	rlcf	??_I2C_Master_Init& (0+255),f,b
 12717  004BA4  3792               	rlcf	(??_I2C_Master_Init+1)& (0+255),f,b
 12718  004BA6  3793               	rlcf	(??_I2C_Master_Init+2)& (0+255),f,b
 12719  004BA8  3794               	rlcf	(??_I2C_Master_Init+3)& (0+255),f,b
 12720  004BAA  2EE8               	decfsz	wreg,f,c
 12721  004BAC  D7F9               	goto	u9775
 12722  004BAE  C091  F084         	movff	??_I2C_Master_Init,___lldiv@divisor
 12723  004BB2  C092  F085         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12724  004BB6  C093  F086         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12725  004BBA  C094  F087         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12726  004BBE  ECD0  F022         	call	___lldiv	;wreg free
 12727  004BC2  0100               	movlb	0	; () banked
 12728  004BC4  0580               	decf	?___lldiv& (0+255),w,b
 12729  004BC6  6EC8               	movwf	4040,c	;volatile
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;I2C.c: 46: SSPSTAT = 0b10000000;
 12733  004BC8  0E80               	movlw	128
 12734  004BCA  6EC7               	movwf	4039,c	;volatile
 12735                           
 12736                           ; BSR set to: 0
 12737                           ;I2C.c: 49: SSPCON1 = 0b00101000;
 12738  004BCC  0E28               	movlw	40
 12739  004BCE  6EC6               	movwf	4038,c	;volatile
 12740                           
 12741                           ; BSR set to: 0
 12742                           ;I2C.c: 52: SSPCON2 = 0b00000000;
 12743  004BD0  0E00               	movlw	0
 12744  004BD2  6EC5               	movwf	4037,c	;volatile
 12745                           
 12746                           ; BSR set to: 0
 12747  004BD4  0012               	return		;funcret
 12748  004BD6                     __end_of_I2C_Master_Init:
 12749                           	opt callstack 0
 12750                           
 12751 ;; *************** function ___lldiv *****************
 12752 ;; Defined at:
 12753 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;  dividend        4    0[BANK0 ] unsigned long 
 12756 ;;  divisor         4    4[BANK0 ] unsigned long 
 12757 ;; Auto vars:     Size  Location     Type
 12758 ;;  quotient        4    8[BANK0 ] unsigned long 
 12759 ;;  counter         1   12[BANK0 ] unsigned char 
 12760 ;; Return value:  Size  Location     Type
 12761 ;;                  4    0[BANK0 ] unsigned long 
 12762 ;; Registers used:
 12763 ;;		wreg, status,2, status,0
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12769 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12770 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12772 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12773 ;;Total ram usage:       13 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; Hardware stack levels required when called:    8
 12776 ;; This function calls:
 12777 ;;		Nothing
 12778 ;; This function is called by:
 12779 ;;		_I2C_Master_Init
 12780 ;; This function uses a non-reentrant model
 12781 ;;
 12782                           
 12783                           	psect	text57
 12784  0045A0                     __ptext57:
 12785                           	opt callstack 0
 12786  0045A0                     ___lldiv:
 12787                           	opt callstack 18
 12788                           
 12789                           ; BSR set to: 0
 12790                           ;incstack = 0
 12791  0045A0  0E00               	movlw	0
 12792  0045A2  0100               	movlb	0	; () banked
 12793  0045A4  6F88               	movwf	___lldiv@quotient& (0+255),b
 12794  0045A6  0E00               	movlw	0
 12795  0045A8  6F89               	movwf	(___lldiv@quotient+1)& (0+255),b
 12796  0045AA  0E00               	movlw	0
 12797  0045AC  6F8A               	movwf	(___lldiv@quotient+2)& (0+255),b
 12798  0045AE  0E00               	movlw	0
 12799  0045B0  6F8B               	movwf	(___lldiv@quotient+3)& (0+255),b
 12800                           
 12801                           ; BSR set to: 0
 12802  0045B2  5184               	movf	___lldiv@divisor& (0+255),w,b
 12803  0045B4  1185               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 12804  0045B6  1186               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 12805  0045B8  1187               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 12806  0045BA  B4D8               	btfsc	status,2,c
 12807  0045BC  D02A               	goto	l1799
 12808                           
 12809                           ; BSR set to: 0
 12810  0045BE  0E01               	movlw	1
 12811  0045C0  6F8C               	movwf	___lldiv@counter& (0+255),b
 12812  0045C2  D006               	goto	l9780
 12813  0045C4                     l9778:
 12814                           
 12815                           ; BSR set to: 0
 12816  0045C4  90D8               	bcf	status,0,c
 12817  0045C6  3784               	rlcf	___lldiv@divisor& (0+255),f,b
 12818  0045C8  3785               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 12819  0045CA  3786               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 12820  0045CC  3787               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 12821  0045CE  2B8C               	incf	___lldiv@counter& (0+255),f,b
 12822  0045D0                     l9780:
 12823                           
 12824                           ; BSR set to: 0
 12825  0045D0  AF87               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 12826  0045D2  D7F8               	goto	l9778
 12827  0045D4                     u9510:
 12828                           
 12829                           ; BSR set to: 0
 12830  0045D4  90D8               	bcf	status,0,c
 12831  0045D6  3788               	rlcf	___lldiv@quotient& (0+255),f,b
 12832  0045D8  3789               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 12833  0045DA  378A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 12834  0045DC  378B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 12835                           
 12836                           ; BSR set to: 0
 12837  0045DE  5184               	movf	___lldiv@divisor& (0+255),w,b
 12838  0045E0  5D80               	subwf	___lldiv@dividend& (0+255),w,b
 12839  0045E2  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12840  0045E4  5981               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 12841  0045E6  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12842  0045E8  5982               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 12843  0045EA  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12844  0045EC  5983               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 12845  0045EE  A0D8               	btfss	status,0,c
 12846  0045F0  D009               	goto	l9790
 12847                           
 12848                           ; BSR set to: 0
 12849  0045F2  5184               	movf	___lldiv@divisor& (0+255),w,b
 12850  0045F4  5F80               	subwf	___lldiv@dividend& (0+255),f,b
 12851  0045F6  5185               	movf	(___lldiv@divisor+1)& (0+255),w,b
 12852  0045F8  5B81               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 12853  0045FA  5186               	movf	(___lldiv@divisor+2)& (0+255),w,b
 12854  0045FC  5B82               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 12855  0045FE  5187               	movf	(___lldiv@divisor+3)& (0+255),w,b
 12856  004600  5B83               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 12857                           
 12858                           ; BSR set to: 0
 12859  004602  8188               	bsf	___lldiv@quotient& (0+255),0,b
 12860  004604                     l9790:
 12861                           
 12862                           ; BSR set to: 0
 12863  004604  90D8               	bcf	status,0,c
 12864  004606  3387               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 12865  004608  3386               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 12866  00460A  3385               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 12867  00460C  3384               	rrcf	___lldiv@divisor& (0+255),f,b
 12868                           
 12869                           ; BSR set to: 0
 12870  00460E  2F8C               	decfsz	___lldiv@counter& (0+255),f,b
 12871  004610  D7E1               	goto	u9510
 12872  004612                     l1799:
 12873                           
 12874                           ; BSR set to: 0
 12875  004612  C088  F080         	movff	___lldiv@quotient,?___lldiv
 12876  004616  C089  F081         	movff	___lldiv@quotient+1,?___lldiv+1
 12877  00461A  C08A  F082         	movff	___lldiv@quotient+2,?___lldiv+2
 12878  00461E  C08B  F083         	movff	___lldiv@quotient+3,?___lldiv+3
 12879                           
 12880                           ; BSR set to: 0
 12881  004622  0012               	return		;funcret
 12882  004624                     __end_of___lldiv:
 12883                           	opt callstack 0
 12884                           
 12885 ;; *************** function _completion_write *****************
 12886 ;; Defined at:
 12887 ;;		line 85 in file "EEPROM.c"
 12888 ;; Parameters:    Size  Location     Type
 12889 ;;		None
 12890 ;; Auto vars:     Size  Location     Type
 12891 ;;  value           2   37[BANK0 ] int 
 12892 ;; Return value:  Size  Location     Type
 12893 ;;                  1    wreg      void 
 12894 ;; Registers used:
 12895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12896 ;; Tracked objects:
 12897 ;;		On entry : 0/0
 12898 ;;		On exit  : 0/0
 12899 ;;		Unchanged: 0/0
 12900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12904 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12905 ;;Total ram usage:        4 bytes
 12906 ;; Hardware stack levels used:    1
 12907 ;; Hardware stack levels required when called:   13
 12908 ;; This function calls:
 12909 ;;		___awdiv
 12910 ;;		_printf
 12911 ;;		_read_pointer
 12912 ;;		_update_pointer
 12913 ;; This function is called by:
 12914 ;;		_completion_return
 12915 ;; This function uses a non-reentrant model
 12916 ;;
 12917                           
 12918                           	psect	text58
 12919  002DEC                     __ptext58:
 12920                           	opt callstack 0
 12921  002DEC                     _completion_write:
 12922                           	opt callstack 16
 12923                           
 12924                           ;EEPROM.c: 86: read_pointer();
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;incstack = 0
 12928  002DEC  EC6D  F029         	call	_read_pointer	;wreg free
 12929                           
 12930                           ;EEPROM.c: 88: int value = 0;
 12931  002DF0  0E00               	movlw	0
 12932  002DF2  0100               	movlb	0	; () banked
 12933  002DF4  6FA6               	movwf	(completion_write@value+1)& (0+255),b
 12934  002DF6  0E00               	movlw	0
 12935  002DF8  6FA5               	movwf	completion_write@value& (0+255),b
 12936                           
 12937                           ;EEPROM.c: 89: while(value <56){
 12938  002DFA  D0EC               	goto	l11066
 12939  002DFC                     l1189:
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;EEPROM.c: 91: EEADRH = addrh;
 12943  002DFC  C0E3  FFAA         	movff	_addrh,4010	;volatile
 12944                           
 12945                           ;EEPROM.c: 92: EEADR = addr;
 12946  002E00  C0E4  FFA9         	movff	_addr,4009	;volatile
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;EEPROM.c: 94: if (value <2){
 12950  002E04  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 12951  002E06  D006               	goto	u11100
 12952  002E08  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 12953  002E0A  E10C               	bnz	l10996
 12954  002E0C  0E02               	movlw	2
 12955  002E0E  5DA5               	subwf	completion_write@value& (0+255),w,b
 12956  002E10  B0D8               	btfsc	status,0,c
 12957  002E12  D008               	goto	l10996
 12958  002E14                     u11100:
 12959                           
 12960                           ; BSR set to: 0
 12961                           ;EEPROM.c: 95: EEDATA = start_time[1-value];}
 12962  002E14  51A5               	movf	completion_write@value& (0+255),w,b
 12963  002E16  0856               	sublw	low (_start_time+1)
 12964  002E18  6ED9               	movwf	fsr2l,c
 12965  002E1A  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 12966  002E1C  A0D8               	btfss	status,0,c
 12967  002E1E  2AE8               	incf	wreg,f,c
 12968  002E20  0800               	sublw	high (_start_time+1)
 12969  002E22  D0B6               	goto	L16
 12970  002E24                     l10996:
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;EEPROM.c: 96: else if (value <5){
 12974  002E24  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 12975  002E26  D006               	goto	u11110
 12976  002E28  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 12977  002E2A  E10C               	bnz	l11000
 12978  002E2C  0E05               	movlw	5
 12979  002E2E  5DA5               	subwf	completion_write@value& (0+255),w,b
 12980  002E30  B0D8               	btfsc	status,0,c
 12981  002E32  D008               	goto	l11000
 12982  002E34                     u11110:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;EEPROM.c: 97: EEDATA = operation_time[4-value];}
 12986  002E34  51A5               	movf	completion_write@value& (0+255),w,b
 12987  002E36  08FB               	sublw	low (_operation_time+4)
 12988  002E38  6ED9               	movwf	fsr2l,c
 12989  002E3A  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 12990  002E3C  A0D8               	btfss	status,0,c
 12991  002E3E  2AE8               	incf	wreg,f,c
 12992  002E40  0800               	sublw	high (_operation_time+4)
 12993  002E42  D0A6               	goto	L16
 12994  002E44                     l11000:
 12995                           
 12996                           ; BSR set to: 0
 12997                           ;EEPROM.c: 98: else if (value == 5){
 12998  002E44  0E05               	movlw	5
 12999  002E46  19A5               	xorwf	completion_write@value& (0+255),w,b
 13000  002E48  11A6               	iorwf	(completion_write@value+1)& (0+255),w,b
 13001  002E4A  A4D8               	btfss	status,2,c
 13002  002E4C  D003               	goto	l11004
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;EEPROM.c: 99: EEDATA = cones_deployed;}
 13006  002E4E  C0D6  FFA8         	movff	_cones_deployed,4008	;volatile
 13007  002E52  D0A1               	goto	l1201
 13008  002E54                     l11004:
 13009                           
 13010                           ; BSR set to: 0
 13011                           ;EEPROM.c: 100: else if (value == 6){
 13012  002E54  0E06               	movlw	6
 13013  002E56  19A5               	xorwf	completion_write@value& (0+255),w,b
 13014  002E58  11A6               	iorwf	(completion_write@value+1)& (0+255),w,b
 13015  002E5A  A4D8               	btfss	status,2,c
 13016  002E5C  D003               	goto	l11008
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;EEPROM.c: 101: EEDATA = hole_counter;}
 13020  002E5E  C048  FFA8         	movff	_hole_counter,4008	;volatile
 13021  002E62  D099               	goto	l1201
 13022  002E64                     l11008:
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;EEPROM.c: 102: else if ((value <31)&&(value%2 == 1)){
 13026  002E64  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 13027  002E66  D006               	goto	u11140
 13028  002E68  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 13029  002E6A  E12D               	bnz	l11016
 13030  002E6C  0E1F               	movlw	31
 13031  002E6E  5DA5               	subwf	completion_write@value& (0+255),w,b
 13032  002E70  B0D8               	btfsc	status,0,c
 13033  002E72  D029               	goto	l11016
 13034  002E74                     u11140:
 13035                           
 13036                           ; BSR set to: 0
 13037  002E74  A1A5               	btfss	completion_write@value& (0+255),0,b
 13038  002E76  D027               	goto	l11016
 13039                           
 13040                           ; BSR set to: 0
 13041                           ;EEPROM.c: 103: EEDATA = array_holes_distance[(value-7)/2]/256;}
 13042  002E78  0E00               	movlw	0
 13043  002E7A  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
 13044  002E7C  0E02               	movlw	2
 13045  002E7E  6F82               	movwf	___awdiv@divisor& (0+255),b
 13046  002E80  0EF9               	movlw	249
 13047  002E82  25A5               	addwf	completion_write@value& (0+255),w,b
 13048  002E84  6F80               	movwf	___awdiv@dividend& (0+255),b
 13049  002E86  0EFF               	movlw	255
 13050  002E88  21A6               	addwfc	(completion_write@value+1)& (0+255),w,b
 13051  002E8A  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
 13052  002E8C  EC8D  F022         	call	___awdiv	;wreg free
 13053  002E90  90D8               	bcf	status,0,c
 13054  002E92  0100               	movlb	0	; () banked
 13055  002E94  3780               	rlcf	?___awdiv& (0+255),f,b
 13056  002E96  3781               	rlcf	(?___awdiv+1)& (0+255),f,b
 13057  002E98  0E48               	movlw	low _array_holes_distance
 13058  002E9A  2580               	addwf	?___awdiv& (0+255),w,b
 13059  002E9C  6ED9               	movwf	fsr2l,c
 13060  002E9E  0E01               	movlw	high _array_holes_distance
 13061  002EA0  2181               	addwfc	(?___awdiv+1)& (0+255),w,b
 13062  002EA2  6EDA               	movwf	fsr2h,c
 13063  002EA4  CFDE F0A3          	movff	postinc2,_completion_write$2721
 13064  002EA8  CFDD F0A4          	movff	postdec2,_completion_write$2721+1
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;EEPROM.c: 103: EEDATA = array_holes_distance[(value-7)/2]/256;}
 13068  002EAC  C0A3  F080         	movff	_completion_write$2721,___awdiv@dividend
 13069  002EB0  C0A4  F081         	movff	_completion_write$2721+1,___awdiv@dividend+1
 13070  002EB4  0E01               	movlw	1
 13071  002EB6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
 13072  002EB8  0E00               	movlw	0
 13073  002EBA  6F82               	movwf	___awdiv@divisor& (0+255),b
 13074  002EBC  EC8D  F022         	call	___awdiv	;wreg free
 13075  002EC0  0100               	movlb	0	; () banked
 13076  002EC2  5180               	movf	?___awdiv& (0+255),w,b
 13077  002EC4  D067               	goto	L15
 13078  002EC6                     l11016:
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;EEPROM.c: 104: else if ((value <31)&&(value%2 == 0)){
 13082  002EC6  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 13083  002EC8  D006               	goto	u11160
 13084  002ECA  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 13085  002ECC  E11B               	bnz	l11022
 13086  002ECE  0E1F               	movlw	31
 13087  002ED0  5DA5               	subwf	completion_write@value& (0+255),w,b
 13088  002ED2  B0D8               	btfsc	status,0,c
 13089  002ED4  D017               	goto	l11022
 13090  002ED6                     u11160:
 13091                           
 13092                           ; BSR set to: 0
 13093  002ED6  B1A5               	btfsc	completion_write@value& (0+255),0,b
 13094  002ED8  D015               	goto	l11022
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;EEPROM.c: 105: EEDATA = array_holes_distance[(value-8)/2]%256;}
 13098  002EDA  0EF8               	movlw	248
 13099  002EDC  25A5               	addwf	completion_write@value& (0+255),w,b
 13100  002EDE  6F80               	movwf	___awdiv@dividend& (0+255),b
 13101  002EE0  0EFF               	movlw	255
 13102  002EE2  21A6               	addwfc	(completion_write@value+1)& (0+255),w,b
 13103  002EE4  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
 13104  002EE6  0E00               	movlw	0
 13105  002EE8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
 13106  002EEA  0E02               	movlw	2
 13107  002EEC  6F82               	movwf	___awdiv@divisor& (0+255),b
 13108  002EEE  EC8D  F022         	call	___awdiv	;wreg free
 13109  002EF2  90D8               	bcf	status,0,c
 13110  002EF4  0100               	movlb	0	; () banked
 13111  002EF6  3780               	rlcf	?___awdiv& (0+255),f,b
 13112  002EF8  3781               	rlcf	(?___awdiv+1)& (0+255),f,b
 13113  002EFA  0E48               	movlw	low _array_holes_distance
 13114  002EFC  2580               	addwf	?___awdiv& (0+255),w,b
 13115  002EFE  6ED9               	movwf	fsr2l,c
 13116  002F00  0E01               	movlw	high _array_holes_distance
 13117  002F02  D045               	goto	L14
 13118  002F04                     l11022:
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;EEPROM.c: 106: else if (value == 31){
 13122  002F04  0E1F               	movlw	31
 13123  002F06  19A5               	xorwf	completion_write@value& (0+255),w,b
 13124  002F08  11A6               	iorwf	(completion_write@value+1)& (0+255),w,b
 13125  002F0A  A4D8               	btfss	status,2,c
 13126  002F0C  D003               	goto	l11026
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;EEPROM.c: 107: EEDATA = crack_counter;}
 13130  002F0E  C046  FFA8         	movff	_crack_counter,4008	;volatile
 13131  002F12  D041               	goto	l1201
 13132  002F14                     l11026:
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;EEPROM.c: 108: else if ((value <56)&&(value%2 == 0)){
 13136  002F14  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 13137  002F16  D006               	goto	u11190
 13138  002F18  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 13139  002F1A  E11B               	bnz	l11034
 13140  002F1C  0E38               	movlw	56
 13141  002F1E  5DA5               	subwf	completion_write@value& (0+255),w,b
 13142  002F20  B0D8               	btfsc	status,0,c
 13143  002F22  D017               	goto	l11034
 13144  002F24                     u11190:
 13145                           
 13146                           ; BSR set to: 0
 13147  002F24  B1A5               	btfsc	completion_write@value& (0+255),0,b
 13148  002F26  D015               	goto	l11034
 13149                           
 13150                           ; BSR set to: 0
 13151                           ;EEPROM.c: 109: EEDATA = array_cracks_distance[(value-32)/2]/256;
 13152  002F28  0E00               	movlw	0
 13153  002F2A  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
 13154  002F2C  0E02               	movlw	2
 13155  002F2E  6F82               	movwf	___awdiv@divisor& (0+255),b
 13156  002F30  0EE0               	movlw	224
 13157  002F32  25A5               	addwf	completion_write@value& (0+255),w,b
 13158  002F34  6F80               	movwf	___awdiv@dividend& (0+255),b
 13159  002F36  0EFF               	movlw	255
 13160  002F38  21A6               	addwfc	(completion_write@value+1)& (0+255),w,b
 13161  002F3A  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
 13162  002F3C  EC8D  F022         	call	___awdiv	;wreg free
 13163  002F40  90D8               	bcf	status,0,c
 13164  002F42  0100               	movlb	0	; () banked
 13165  002F44  3780               	rlcf	?___awdiv& (0+255),f,b
 13166  002F46  3781               	rlcf	(?___awdiv+1)& (0+255),f,b
 13167  002F48  0E30               	movlw	low _array_cracks_distance
 13168  002F4A  2580               	addwf	?___awdiv& (0+255),w,b
 13169  002F4C  6ED9               	movwf	fsr2l,c
 13170  002F4E  0E01               	movlw	high _array_cracks_distance
 13171  002F50  D7A7               	goto	L10
 13172  002F52                     l11034:
 13173                           
 13174                           ; BSR set to: 0
 13175                           ;EEPROM.c: 111: else if ((value <56)&&(value%2 == 1)){
 13176  002F52  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 13177  002F54  D006               	goto	u11210
 13178  002F56  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 13179  002F58  E11E               	bnz	l1201
 13180  002F5A  0E38               	movlw	56
 13181  002F5C  5DA5               	subwf	completion_write@value& (0+255),w,b
 13182  002F5E  B0D8               	btfsc	status,0,c
 13183  002F60  D01A               	goto	l1201
 13184  002F62                     u11210:
 13185                           
 13186                           ; BSR set to: 0
 13187  002F62  A1A5               	btfss	completion_write@value& (0+255),0,b
 13188  002F64  D018               	goto	l1201
 13189                           
 13190                           ; BSR set to: 0
 13191                           ;EEPROM.c: 112: EEDATA = array_cracks_distance[(value-33)/2]%256;
 13192  002F66  0EDF               	movlw	223
 13193  002F68  25A5               	addwf	completion_write@value& (0+255),w,b
 13194  002F6A  6F80               	movwf	___awdiv@dividend& (0+255),b
 13195  002F6C  0EFF               	movlw	255
 13196  002F6E  21A6               	addwfc	(completion_write@value+1)& (0+255),w,b
 13197  002F70  6F81               	movwf	(___awdiv@dividend+1)& (0+255),b
 13198  002F72  0E00               	movlw	0
 13199  002F74  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
 13200  002F76  0E02               	movlw	2
 13201  002F78  6F82               	movwf	___awdiv@divisor& (0+255),b
 13202  002F7A  EC8D  F022         	call	___awdiv	;wreg free
 13203  002F7E  90D8               	bcf	status,0,c
 13204  002F80  0100               	movlb	0	; () banked
 13205  002F82  3780               	rlcf	?___awdiv& (0+255),f,b
 13206  002F84  3781               	rlcf	(?___awdiv+1)& (0+255),f,b
 13207  002F86  0E30               	movlw	low _array_cracks_distance
 13208  002F88  2580               	addwf	?___awdiv& (0+255),w,b
 13209  002F8A  6ED9               	movwf	fsr2l,c
 13210  002F8C  0E01               	movlw	high _array_cracks_distance
 13211  002F8E                     L14:
 13212  002F8E  2181               	addwfc	(?___awdiv+1)& (0+255),w,b
 13213  002F90                     L16:
 13214  002F90  6EDA               	movwf	fsr2h,c
 13215  002F92  50DF               	movf	indf2,w,c
 13216  002F94                     L15:
 13217  002F94  6EA8               	movwf	4008,c	;volatile
 13218  002F96                     l1201:
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;EEPROM.c: 113: };EEPROM.c: 115: EECON1bits.EEPGD = 0;
 13222                           
 13223                           ; BSR set to: 0
 13224  002F96  9EA6               	bcf	4006,7,c	;volsfr
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;EEPROM.c: 116: EECON1bits.CFGS = 0;
 13228  002F98  9CA6               	bcf	4006,6,c	;volsfr
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;EEPROM.c: 117: EECON1bits.WREN = 1;
 13232  002F9A  84A6               	bsf	4006,2,c	;volsfr
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;EEPROM.c: 118: GIE =0;
 13236  002F9C  9EF2               	bcf	4082,7,c	;volatile
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;EEPROM.c: 120: EECON2 = 0x55;
 13240  002F9E  0E55               	movlw	85
 13241  002FA0  6EA7               	movwf	4007,c	;volsfr
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;EEPROM.c: 121: EECON2 = 0xAA;
 13245  002FA2  0EAA               	movlw	170
 13246  002FA4  6EA7               	movwf	4007,c	;volsfr
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;EEPROM.c: 123: EECON1bits.WR =1;
 13250  002FA6  82A6               	bsf	4006,1,c	;volsfr
 13251  002FA8                     l1207:
 13252  002FA8  B2A6               	btfsc	4006,1,c	;volsfr
 13253  002FAA  D7FE               	goto	l1207
 13254                           
 13255                           ;EEPROM.c: 126: };EEPROM.c: 127: GIE =1;
 13256  002FAC  8EF2               	bsf	4082,7,c	;volatile
 13257                           
 13258                           ;EEPROM.c: 128: EECON1bits.WREN = 0;
 13259  002FAE  94A6               	bcf	4006,2,c	;volsfr
 13260                           
 13261                           ;EEPROM.c: 130: addr +=1;
 13262  002FB0  0100               	movlb	0	; () banked
 13263  002FB2  2BE4               	incf	_addr& (0+255),f,b
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;EEPROM.c: 131: if (addr == 0){
 13267  002FB4  51E4               	movf	_addr& (0+255),w,b
 13268  002FB6  B4D8               	btfsc	status,2,c
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;EEPROM.c: 132: addrh+=1;
 13272  002FB8  2BE3               	incf	_addrh& (0+255),f,b
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;EEPROM.c: 133: };EEPROM.c: 134: if (addrh == 0x03){
 13276  002FBA  0E03               	movlw	3
 13277  002FBC  19E3               	xorwf	_addrh& (0+255),w,b
 13278  002FBE  A4D8               	btfss	status,2,c
 13279  002FC0  D007               	goto	l11064
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;EEPROM.c: 136: printf("memory full");
 13283  002FC2  0EEC               	movlw	low STR_7
 13284  002FC4  6F8E               	movwf	printf@f& (0+255),b
 13285  002FC6  0EFE               	movlw	high STR_7
 13286  002FC8  6F8F               	movwf	(printf@f+1)& (0+255),b
 13287  002FCA  EC81  F010         	call	_printf	;wreg free
 13288                           
 13289                           ;EEPROM.c: 137: break;
 13290  002FCE  D00A               	goto	u11260
 13291  002FD0                     l11064:
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;EEPROM.c: 138: };EEPROM.c: 139: value +=1;
 13295  002FD0  4BA5               	infsnz	completion_write@value& (0+255),f,b
 13296  002FD2  2BA6               	incf	(completion_write@value+1)& (0+255),f,b
 13297  002FD4                     l11066:
 13298                           
 13299                           ; BSR set to: 0
 13300  002FD4  BFA6               	btfsc	(completion_write@value+1)& (0+255),7,b
 13301  002FD6  D712               	goto	l1189
 13302  002FD8  51A6               	movf	(completion_write@value+1)& (0+255),w,b
 13303  002FDA  E104               	bnz	u11260
 13304  002FDC  0E38               	movlw	56
 13305  002FDE  5DA5               	subwf	completion_write@value& (0+255),w,b
 13306  002FE0  A0D8               	btfss	status,0,c
 13307  002FE2  D70C               	goto	l1189
 13308  002FE4                     u11260:
 13309                           
 13310                           ;EEPROM.c: 140: };EEPROM.c: 141: update_pointer();
 13311  002FE4  EC91  F027         	call	_update_pointer	;wreg free
 13312  002FE8  0012               	return		;funcret
 13313  002FEA                     __end_of_completion_write:
 13314                           	opt callstack 0
 13315                           
 13316 ;; *************** function _update_pointer *****************
 13317 ;; Defined at:
 13318 ;;		line 144 in file "EEPROM.c"
 13319 ;; Parameters:    Size  Location     Type
 13320 ;;		None
 13321 ;; Auto vars:     Size  Location     Type
 13322 ;;		None
 13323 ;; Return value:  Size  Location     Type
 13324 ;;                  1    wreg      void 
 13325 ;; Registers used:
 13326 ;;		wreg, status,2
 13327 ;; Tracked objects:
 13328 ;;		On entry : 0/0
 13329 ;;		On exit  : 0/0
 13330 ;;		Unchanged: 0/0
 13331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13336 ;;Total ram usage:        0 bytes
 13337 ;; Hardware stack levels used:    1
 13338 ;; Hardware stack levels required when called:    8
 13339 ;; This function calls:
 13340 ;;		Nothing
 13341 ;; This function is called by:
 13342 ;;		_completion_write
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           	psect	text59
 13347  004F22                     __ptext59:
 13348                           	opt callstack 0
 13349  004F22                     _update_pointer:
 13350                           	opt callstack 20
 13351                           
 13352                           ;EEPROM.c: 146: EEADRH = 0;
 13353                           
 13354                           ;incstack = 0
 13355  004F22  0E00               	movlw	0
 13356  004F24  6EAA               	movwf	4010,c	;volatile
 13357                           
 13358                           ;EEPROM.c: 147: EEADR = 0;
 13359  004F26  0E00               	movlw	0
 13360  004F28  6EA9               	movwf	4009,c	;volatile
 13361                           
 13362                           ;EEPROM.c: 149: EEDATA = addrh;
 13363  004F2A  C0E3  FFA8         	movff	_addrh,4008	;volatile
 13364                           
 13365                           ;EEPROM.c: 151: EECON1bits.EEPGD = 0;
 13366  004F2E  9EA6               	bcf	4006,7,c	;volsfr
 13367                           
 13368                           ;EEPROM.c: 152: EECON1bits.CFGS = 0;
 13369  004F30  9CA6               	bcf	4006,6,c	;volsfr
 13370                           
 13371                           ;EEPROM.c: 153: EECON1bits.WREN = 1;
 13372  004F32  84A6               	bsf	4006,2,c	;volsfr
 13373                           
 13374                           ;EEPROM.c: 154: GIE = 0;
 13375  004F34  9EF2               	bcf	4082,7,c	;volatile
 13376                           
 13377                           ;EEPROM.c: 156: EECON2 = 0x55;
 13378  004F36  0E55               	movlw	85
 13379  004F38  6EA7               	movwf	4007,c	;volsfr
 13380                           
 13381                           ;EEPROM.c: 157: EECON2 = 0xAA;
 13382  004F3A  0EAA               	movlw	170
 13383  004F3C  6EA7               	movwf	4007,c	;volsfr
 13384                           
 13385                           ;EEPROM.c: 159: EECON1bits.WR =1;
 13386  004F3E  82A6               	bsf	4006,1,c	;volsfr
 13387  004F40                     l1216:
 13388  004F40  B2A6               	btfsc	4006,1,c	;volsfr
 13389  004F42  D7FE               	goto	l1216
 13390                           
 13391                           ;EEPROM.c: 162: };EEPROM.c: 164: GIE =1;
 13392  004F44  8EF2               	bsf	4082,7,c	;volatile
 13393                           
 13394                           ;EEPROM.c: 165: EECON1bits.WREN = 0;
 13395  004F46  94A6               	bcf	4006,2,c	;volsfr
 13396                           
 13397                           ;EEPROM.c: 167: EEADRH = 0;
 13398  004F48  0E00               	movlw	0
 13399  004F4A  6EAA               	movwf	4010,c	;volatile
 13400                           
 13401                           ;EEPROM.c: 168: EEADR = 1;
 13402  004F4C  0E01               	movlw	1
 13403  004F4E  6EA9               	movwf	4009,c	;volatile
 13404                           
 13405                           ;EEPROM.c: 170: EEDATA = addr;
 13406  004F50  C0E4  FFA8         	movff	_addr,4008	;volatile
 13407                           
 13408                           ;EEPROM.c: 172: EECON1bits.EEPGD = 0;
 13409  004F54  9EA6               	bcf	4006,7,c	;volsfr
 13410                           
 13411                           ;EEPROM.c: 173: EECON1bits.CFGS = 0;
 13412  004F56  9CA6               	bcf	4006,6,c	;volsfr
 13413                           
 13414                           ;EEPROM.c: 174: EECON1bits.WREN = 1;
 13415  004F58  84A6               	bsf	4006,2,c	;volsfr
 13416                           
 13417                           ;EEPROM.c: 175: GIE = 0;
 13418  004F5A  9EF2               	bcf	4082,7,c	;volatile
 13419                           
 13420                           ;EEPROM.c: 177: EECON2 = 0x55;
 13421  004F5C  0E55               	movlw	85
 13422  004F5E  6EA7               	movwf	4007,c	;volsfr
 13423                           
 13424                           ;EEPROM.c: 178: EECON2 = 0xAA;
 13425  004F60  0EAA               	movlw	170
 13426  004F62  6EA7               	movwf	4007,c	;volsfr
 13427                           
 13428                           ;EEPROM.c: 180: EECON1bits.WR =1;
 13429  004F64  82A6               	bsf	4006,1,c	;volsfr
 13430  004F66                     l1219:
 13431  004F66  B2A6               	btfsc	4006,1,c	;volsfr
 13432  004F68  D7FE               	goto	l1219
 13433                           
 13434                           ;EEPROM.c: 183: };EEPROM.c: 185: GIE =1;
 13435  004F6A  8EF2               	bsf	4082,7,c	;volatile
 13436                           
 13437                           ;EEPROM.c: 186: EECON1bits.WREN = 0;
 13438  004F6C  94A6               	bcf	4006,2,c	;volsfr
 13439  004F6E  0012               	return		;funcret
 13440  004F70                     __end_of_update_pointer:
 13441                           	opt callstack 0
 13442                           
 13443 ;; *************** function ___awdiv *****************
 13444 ;; Defined at:
 13445 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
 13446 ;; Parameters:    Size  Location     Type
 13447 ;;  dividend        2    0[BANK0 ] int 
 13448 ;;  divisor         2    2[BANK0 ] int 
 13449 ;; Auto vars:     Size  Location     Type
 13450 ;;  quotient        2    6[BANK0 ] int 
 13451 ;;  sign            1    5[BANK0 ] unsigned char 
 13452 ;;  counter         1    4[BANK0 ] unsigned char 
 13453 ;; Return value:  Size  Location     Type
 13454 ;;                  2    0[BANK0 ] int 
 13455 ;; Registers used:
 13456 ;;		wreg, status,2, status,0
 13457 ;; Tracked objects:
 13458 ;;		On entry : 0/0
 13459 ;;		On exit  : 0/0
 13460 ;;		Unchanged: 0/0
 13461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13465 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13466 ;;Total ram usage:        8 bytes
 13467 ;; Hardware stack levels used:    1
 13468 ;; Hardware stack levels required when called:    8
 13469 ;; This function calls:
 13470 ;;		Nothing
 13471 ;; This function is called by:
 13472 ;;		_main
 13473 ;;		_completion_write
 13474 ;;		_read_total
 13475 ;;		_data_disp
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           	psect	text60
 13480  00451A                     __ptext60:
 13481                           	opt callstack 0
 13482  00451A                     ___awdiv:
 13483                           	opt callstack 19
 13484                           
 13485                           ;incstack = 0
 13486  00451A  0E00               	movlw	0
 13487  00451C  0100               	movlb	0	; () banked
 13488  00451E  6F85               	movwf	___awdiv@sign& (0+255),b
 13489                           
 13490                           ; BSR set to: 0
 13491  004520  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13492  004522  D006               	goto	l10262
 13493                           
 13494                           ; BSR set to: 0
 13495  004524  6D82               	negf	___awdiv@divisor& (0+255),b
 13496  004526  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
 13497  004528  B0D8               	btfsc	status,0,c
 13498  00452A  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
 13499                           
 13500                           ; BSR set to: 0
 13501  00452C  0E01               	movlw	1
 13502  00452E  6F85               	movwf	___awdiv@sign& (0+255),b
 13503  004530                     l10262:
 13504                           
 13505                           ; BSR set to: 0
 13506  004530  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 13507  004532  D006               	goto	l10268
 13508                           
 13509                           ; BSR set to: 0
 13510  004534  6D80               	negf	___awdiv@dividend& (0+255),b
 13511  004536  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
 13512  004538  B0D8               	btfsc	status,0,c
 13513  00453A  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
 13514                           
 13515                           ; BSR set to: 0
 13516  00453C  0E01               	movlw	1
 13517  00453E  1B85               	xorwf	___awdiv@sign& (0+255),f,b
 13518  004540                     l10268:
 13519                           
 13520                           ; BSR set to: 0
 13521  004540  0E00               	movlw	0
 13522  004542  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
 13523  004544  0E00               	movlw	0
 13524  004546  6F86               	movwf	___awdiv@quotient& (0+255),b
 13525                           
 13526                           ; BSR set to: 0
 13527  004548  5182               	movf	___awdiv@divisor& (0+255),w,b
 13528  00454A  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 13529  00454C  B4D8               	btfsc	status,2,c
 13530  00454E  D01C               	goto	l10290
 13531                           
 13532                           ; BSR set to: 0
 13533  004550  0E01               	movlw	1
 13534  004552  6F84               	movwf	___awdiv@counter& (0+255),b
 13535  004554  D004               	goto	l10276
 13536  004556                     l10274:
 13537                           
 13538                           ; BSR set to: 0
 13539  004556  90D8               	bcf	status,0,c
 13540  004558  3782               	rlcf	___awdiv@divisor& (0+255),f,b
 13541  00455A  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 13542  00455C  2B84               	incf	___awdiv@counter& (0+255),f,b
 13543  00455E                     l10276:
 13544                           
 13545                           ; BSR set to: 0
 13546  00455E  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 13547  004560  D7FA               	goto	l10274
 13548  004562                     u10290:
 13549                           
 13550                           ; BSR set to: 0
 13551  004562  90D8               	bcf	status,0,c
 13552  004564  3786               	rlcf	___awdiv@quotient& (0+255),f,b
 13553  004566  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 13554                           
 13555                           ; BSR set to: 0
 13556  004568  5182               	movf	___awdiv@divisor& (0+255),w,b
 13557  00456A  5D80               	subwf	___awdiv@dividend& (0+255),w,b
 13558  00456C  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13559  00456E  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 13560  004570  A0D8               	btfss	status,0,c
 13561  004572  D005               	goto	l10286
 13562                           
 13563                           ; BSR set to: 0
 13564  004574  5182               	movf	___awdiv@divisor& (0+255),w,b
 13565  004576  5F80               	subwf	___awdiv@dividend& (0+255),f,b
 13566  004578  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
 13567  00457A  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 13568                           
 13569                           ; BSR set to: 0
 13570  00457C  8186               	bsf	___awdiv@quotient& (0+255),0,b
 13571  00457E                     l10286:
 13572                           
 13573                           ; BSR set to: 0
 13574  00457E  90D8               	bcf	status,0,c
 13575  004580  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 13576  004582  3382               	rrcf	___awdiv@divisor& (0+255),f,b
 13577                           
 13578                           ; BSR set to: 0
 13579  004584  2F84               	decfsz	___awdiv@counter& (0+255),f,b
 13580  004586  D7ED               	goto	u10290
 13581  004588                     l10290:
 13582                           
 13583                           ; BSR set to: 0
 13584  004588  5185               	movf	___awdiv@sign& (0+255),w,b
 13585  00458A  B4D8               	btfsc	status,2,c
 13586  00458C  D004               	goto	l10294
 13587                           
 13588                           ; BSR set to: 0
 13589  00458E  6D86               	negf	___awdiv@quotient& (0+255),b
 13590  004590  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
 13591  004592  B0D8               	btfsc	status,0,c
 13592  004594  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
 13593  004596                     l10294:
 13594                           
 13595                           ; BSR set to: 0
 13596  004596  C086  F080         	movff	___awdiv@quotient,?___awdiv
 13597  00459A  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
 13598                           
 13599                           ; BSR set to: 0
 13600  00459E  0012               	return		;funcret
 13601  0045A0                     __end_of___awdiv:
 13602                           	opt callstack 0
 13603                           
 13604 ;; *************** function _backw *****************
 13605 ;; Defined at:
 13606 ;;		line 128 in file "encoder_motor.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;		None
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  1    wreg      void 
 13613 ;; Registers used:
 13614 ;;		wreg
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13624 ;;Total ram usage:        0 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    8
 13627 ;; This function calls:
 13628 ;;		Nothing
 13629 ;; This function is called by:
 13630 ;;		_completion_return
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           	psect	text61
 13635  0054BC                     __ptext61:
 13636                           	opt callstack 0
 13637  0054BC                     _backw:
 13638                           	opt callstack 21
 13639                           
 13640                           ;encoder_motor.c: 129: LATCbits.LATC6 = 0;
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;incstack = 0
 13644  0054BC  9C8B               	bcf	3979,6,c	;volatile
 13645                           
 13646                           ;encoder_motor.c: 130: LATCbits.LATC2 = 0;
 13647  0054BE  948B               	bcf	3979,2,c	;volatile
 13648                           
 13649                           ;encoder_motor.c: 131: LATCbits.LATC0 = 0;
 13650  0054C0  908B               	bcf	3979,0,c	;volatile
 13651                           
 13652                           ;encoder_motor.c: 133: LATCbits.LATC1 = 1;
 13653  0054C2  828B               	bsf	3979,1,c	;volatile
 13654                           
 13655                           ;encoder_motor.c: 134: LATCbits.LATC5 = 1;
 13656  0054C4  8A8B               	bsf	3979,5,c	;volatile
 13657                           
 13658                           ;encoder_motor.c: 135: LATCbits.LATC7 = 1;
 13659  0054C6  8E8B               	bsf	3979,7,c	;volatile
 13660                           
 13661                           ;encoder_motor.c: 136: _delay((unsigned long)((100)*(10000000/4000000.0)));
 13662  0054C8  0E53               	movlw	83
 13663  0054CA                     u13507:
 13664  0054CA  2EE8               	decfsz	wreg,f,c
 13665  0054CC  D7FE               	bra	u13507
 13666  0054CE  F000               	nop	
 13667  0054D0  0012               	return		;funcret
 13668  0054D2                     __end_of_backw:
 13669                           	opt callstack 0
 13670                           
 13671 ;; *************** function ___flge *****************
 13672 ;; Defined at:
 13673 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;  ff1             4   24[BANK0 ] void 
 13676 ;;  ff2             4   28[BANK0 ] void 
 13677 ;; Auto vars:     Size  Location     Type
 13678 ;;		None
 13679 ;; Return value:  Size  Location     Type
 13680 ;;		None               void
 13681 ;; Registers used:
 13682 ;;		wreg, status,2, status,0
 13683 ;; Tracked objects:
 13684 ;;		On entry : 0/0
 13685 ;;		On exit  : 0/0
 13686 ;;		Unchanged: 0/0
 13687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13688 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13690 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13691 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13692 ;;Total ram usage:       12 bytes
 13693 ;; Hardware stack levels used:    1
 13694 ;; Hardware stack levels required when called:    8
 13695 ;; This function calls:
 13696 ;;		Nothing
 13697 ;; This function is called by:
 13698 ;;		_main
 13699 ;;		_completion_return
 13700 ;;		_hole_drop_bool_function
 13701 ;;		_crack_drop_bool_function
 13702 ;;		_middle_crack_drop
 13703 ;;		_left_crack_drop
 13704 ;;		_right_crack_drop
 13705 ;; This function uses a non-reentrant model
 13706 ;;
 13707                           
 13708                           	psect	text62
 13709  003BEC                     __ptext62:
 13710                           	opt callstack 0
 13711  003BEC                     ___flge:
 13712                           	opt callstack 20
 13713                           
 13714                           ;incstack = 0
 13715  003BEC  0E00               	movlw	0
 13716  003BEE  0100               	movlb	0	; () banked
 13717  003BF0  1598               	andwf	___flge@ff1& (0+255),w,b
 13718  003BF2  6FA0               	movwf	??___flge& (0+255),b
 13719  003BF4  0E00               	movlw	0
 13720  003BF6  1599               	andwf	(___flge@ff1+1)& (0+255),w,b
 13721  003BF8  6FA1               	movwf	(??___flge+1)& (0+255),b
 13722  003BFA  0E80               	movlw	128
 13723  003BFC  159A               	andwf	(___flge@ff1+2)& (0+255),w,b
 13724  003BFE  6FA2               	movwf	(??___flge+2)& (0+255),b
 13725  003C00  0E7F               	movlw	127
 13726  003C02  159B               	andwf	(___flge@ff1+3)& (0+255),w,b
 13727  003C04  6FA3               	movwf	(??___flge+3)& (0+255),b
 13728  003C06  51A0               	movf	??___flge& (0+255),w,b
 13729  003C08  11A1               	iorwf	(??___flge+1)& (0+255),w,b
 13730  003C0A  11A2               	iorwf	(??___flge+2)& (0+255),w,b
 13731  003C0C  11A3               	iorwf	(??___flge+3)& (0+255),w,b
 13732  003C0E  A4D8               	btfss	status,2,c
 13733  003C10  D008               	goto	l10904
 13734                           
 13735                           ; BSR set to: 0
 13736  003C12  0E00               	movlw	0
 13737  003C14  6F98               	movwf	___flge@ff1& (0+255),b
 13738  003C16  0E00               	movlw	0
 13739  003C18  6F99               	movwf	(___flge@ff1+1)& (0+255),b
 13740  003C1A  0E00               	movlw	0
 13741  003C1C  6F9A               	movwf	(___flge@ff1+2)& (0+255),b
 13742  003C1E  0E00               	movlw	0
 13743  003C20  6F9B               	movwf	(___flge@ff1+3)& (0+255),b
 13744  003C22                     l10904:
 13745                           
 13746                           ; BSR set to: 0
 13747  003C22  0E00               	movlw	0
 13748  003C24  159C               	andwf	___flge@ff2& (0+255),w,b
 13749  003C26  6FA0               	movwf	??___flge& (0+255),b
 13750  003C28  0E00               	movlw	0
 13751  003C2A  159D               	andwf	(___flge@ff2+1)& (0+255),w,b
 13752  003C2C  6FA1               	movwf	(??___flge+1)& (0+255),b
 13753  003C2E  0E80               	movlw	128
 13754  003C30  159E               	andwf	(___flge@ff2+2)& (0+255),w,b
 13755  003C32  6FA2               	movwf	(??___flge+2)& (0+255),b
 13756  003C34  0E7F               	movlw	127
 13757  003C36  159F               	andwf	(___flge@ff2+3)& (0+255),w,b
 13758  003C38  6FA3               	movwf	(??___flge+3)& (0+255),b
 13759  003C3A  51A0               	movf	??___flge& (0+255),w,b
 13760  003C3C  11A1               	iorwf	(??___flge+1)& (0+255),w,b
 13761  003C3E  11A2               	iorwf	(??___flge+2)& (0+255),w,b
 13762  003C40  11A3               	iorwf	(??___flge+3)& (0+255),w,b
 13763  003C42  A4D8               	btfss	status,2,c
 13764  003C44  D008               	goto	l10908
 13765                           
 13766                           ; BSR set to: 0
 13767  003C46  0E00               	movlw	0
 13768  003C48  6F9C               	movwf	___flge@ff2& (0+255),b
 13769  003C4A  0E00               	movlw	0
 13770  003C4C  6F9D               	movwf	(___flge@ff2+1)& (0+255),b
 13771  003C4E  0E00               	movlw	0
 13772  003C50  6F9E               	movwf	(___flge@ff2+2)& (0+255),b
 13773  003C52  0E00               	movlw	0
 13774  003C54  6F9F               	movwf	(___flge@ff2+3)& (0+255),b
 13775  003C56                     l10908:
 13776                           
 13777                           ; BSR set to: 0
 13778  003C56  AF9B               	btfss	(___flge@ff1+3)& (0+255),7,b
 13779  003C58  D009               	goto	l10912
 13780                           
 13781                           ; BSR set to: 0
 13782  003C5A  6D98               	negf	___flge@ff1& (0+255),b
 13783  003C5C  1F99               	comf	(___flge@ff1+1)& (0+255),f,b
 13784  003C5E  B0D8               	btfsc	status,0,c
 13785  003C60  2B99               	incf	(___flge@ff1+1)& (0+255),f,b
 13786  003C62  1F9A               	comf	(___flge@ff1+2)& (0+255),f,b
 13787  003C64  B0D8               	btfsc	status,0,c
 13788  003C66  2B9A               	incf	(___flge@ff1+2)& (0+255),f,b
 13789  003C68  0E80               	movlw	128
 13790  003C6A  579B               	subfwb	(___flge@ff1+3)& (0+255),f,b
 13791  003C6C                     l10912:
 13792                           
 13793                           ; BSR set to: 0
 13794  003C6C  AF9F               	btfss	(___flge@ff2+3)& (0+255),7,b
 13795  003C6E  D009               	goto	l2033
 13796                           
 13797                           ; BSR set to: 0
 13798  003C70  6D9C               	negf	___flge@ff2& (0+255),b
 13799  003C72  1F9D               	comf	(___flge@ff2+1)& (0+255),f,b
 13800  003C74  B0D8               	btfsc	status,0,c
 13801  003C76  2B9D               	incf	(___flge@ff2+1)& (0+255),f,b
 13802  003C78  1F9E               	comf	(___flge@ff2+2)& (0+255),f,b
 13803  003C7A  B0D8               	btfsc	status,0,c
 13804  003C7C  2B9E               	incf	(___flge@ff2+2)& (0+255),f,b
 13805  003C7E  0E80               	movlw	128
 13806  003C80  579F               	subfwb	(___flge@ff2+3)& (0+255),f,b
 13807  003C82                     l2033:
 13808                           
 13809                           ; BSR set to: 0
 13810  003C82  0E00               	movlw	0
 13811  003C84  1B98               	xorwf	___flge@ff1& (0+255),f,b
 13812  003C86  0E00               	movlw	0
 13813  003C88  1B99               	xorwf	(___flge@ff1+1)& (0+255),f,b
 13814  003C8A  0E00               	movlw	0
 13815  003C8C  1B9A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 13816  003C8E  0E80               	movlw	128
 13817  003C90  1B9B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 13818  003C92  0E00               	movlw	0
 13819  003C94  1B9C               	xorwf	___flge@ff2& (0+255),f,b
 13820  003C96  0E00               	movlw	0
 13821  003C98  1B9D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 13822  003C9A  0E00               	movlw	0
 13823  003C9C  1B9E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 13824  003C9E  0E80               	movlw	128
 13825  003CA0  1B9F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 13826  003CA2  519C               	movf	___flge@ff2& (0+255),w,b
 13827  003CA4  5D98               	subwf	___flge@ff1& (0+255),w,b
 13828  003CA6  519D               	movf	(___flge@ff2+1)& (0+255),w,b
 13829  003CA8  5999               	subwfb	(___flge@ff1+1)& (0+255),w,b
 13830  003CAA  519E               	movf	(___flge@ff2+2)& (0+255),w,b
 13831  003CAC  599A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 13832  003CAE  519F               	movf	(___flge@ff2+3)& (0+255),w,b
 13833  003CB0  599B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 13834  003CB2  B0D8               	btfsc	status,0,c
 13835  003CB4  D002               	goto	l10918
 13836                           
 13837                           ; BSR set to: 0
 13838  003CB6  90D8               	bcf	status,0,c
 13839  003CB8  0012               	return	
 13840  003CBA                     l10918:
 13841                           
 13842                           ; BSR set to: 0
 13843  003CBA  80D8               	bsf	status,0,c
 13844                           
 13845                           ; BSR set to: 0
 13846  003CBC  0012               	return		;funcret
 13847  003CBE                     __end_of___flge:
 13848                           	opt callstack 0
 13849                           
 13850 ;; *************** function ___fladd *****************
 13851 ;; Defined at:
 13852 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 13853 ;; Parameters:    Size  Location     Type
 13854 ;;  b               4    0[BANK0 ] void 
 13855 ;;  a               4    4[BANK0 ] void 
 13856 ;; Auto vars:     Size  Location     Type
 13857 ;;  grs             1   15[BANK0 ] unsigned char 
 13858 ;;  bexp            1   14[BANK0 ] unsigned char 
 13859 ;;  aexp            1   13[BANK0 ] unsigned char 
 13860 ;;  signs           1   12[BANK0 ] unsigned char 
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  4    0[BANK0 ] unsigned char 
 13863 ;; Registers used:
 13864 ;;		wreg, status,2, status,0
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13870 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13871 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13872 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;Total ram usage:       16 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; Hardware stack levels required when called:    8
 13877 ;; This function calls:
 13878 ;;		Nothing
 13879 ;; This function is called by:
 13880 ;;		_completion_return
 13881 ;;		_hole_drop_bool_function
 13882 ;;		_crack_drop_bool_function
 13883 ;;		_drop_record
 13884 ;;		_read_encoder
 13885 ;;		___flsub
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text63
 13890  0015D6                     __ptext63:
 13891                           	opt callstack 0
 13892  0015D6                     ___fladd:
 13893                           	opt callstack 20
 13894                           
 13895                           ; BSR set to: 0
 13896                           ;incstack = 0
 13897  0015D6  0100               	movlb	0	; () banked
 13898  0015D8  5183               	movf	(___fladd@b+3)& (0+255),w,b
 13899  0015DA  0B80               	andlw	128
 13900  0015DC  6F8C               	movwf	___fladd@signs& (0+255),b
 13901  0015DE  5183               	movf	(___fladd@b+3)& (0+255),w,b
 13902  0015E0  2583               	addwf	(___fladd@b+3)& (0+255),w,b
 13903  0015E2  6F8E               	movwf	___fladd@bexp& (0+255),b
 13904                           
 13905                           ; BSR set to: 0
 13906  0015E4  BF82               	btfsc	(___fladd@b+2)& (0+255),7,b
 13907                           
 13908                           ; BSR set to: 0
 13909  0015E6  818E               	bsf	___fladd@bexp& (0+255),0,b
 13910                           
 13911                           ; BSR set to: 0
 13912  0015E8  518E               	movf	___fladd@bexp& (0+255),w,b
 13913  0015EA  B4D8               	btfsc	status,2,c
 13914  0015EC  D00D               	goto	l10068
 13915                           
 13916                           ; BSR set to: 0
 13917  0015EE  298E               	incf	___fladd@bexp& (0+255),w,b
 13918  0015F0  A4D8               	btfss	status,2,c
 13919  0015F2  D008               	goto	l10064
 13920                           
 13921                           ; BSR set to: 0
 13922  0015F4  0E00               	movlw	0
 13923  0015F6  6F80               	movwf	___fladd@b& (0+255),b
 13924  0015F8  0E00               	movlw	0
 13925  0015FA  6F81               	movwf	(___fladd@b+1)& (0+255),b
 13926  0015FC  0E00               	movlw	0
 13927  0015FE  6F82               	movwf	(___fladd@b+2)& (0+255),b
 13928  001600  0E00               	movlw	0
 13929  001602  6F83               	movwf	(___fladd@b+3)& (0+255),b
 13930  001604                     l10064:
 13931                           
 13932                           ; BSR set to: 0
 13933  001604  8F82               	bsf	(___fladd@b+2)& (0+255),7,b
 13934  001606  D006               	goto	L17
 13935  001608                     l10068:
 13936                           
 13937                           ; BSR set to: 0
 13938  001608  0E00               	movlw	0
 13939  00160A  6F80               	movwf	___fladd@b& (0+255),b
 13940  00160C  0E00               	movlw	0
 13941  00160E  6F81               	movwf	(___fladd@b+1)& (0+255),b
 13942  001610  0E00               	movlw	0
 13943  001612  6F82               	movwf	(___fladd@b+2)& (0+255),b
 13944  001614                     L17:
 13945  001614  0E00               	movlw	0
 13946  001616  6F83               	movwf	(___fladd@b+3)& (0+255),b
 13947                           
 13948                           ; BSR set to: 0
 13949  001618  5187               	movf	(___fladd@a+3)& (0+255),w,b
 13950  00161A  0B80               	andlw	128
 13951  00161C  6F8D               	movwf	___fladd@aexp& (0+255),b
 13952                           
 13953                           ; BSR set to: 0
 13954  00161E  518C               	movf	___fladd@signs& (0+255),w,b
 13955  001620  198D               	xorwf	___fladd@aexp& (0+255),w,b
 13956  001622  A4D8               	btfss	status,2,c
 13957                           
 13958                           ; BSR set to: 0
 13959  001624  8D8C               	bsf	___fladd@signs& (0+255),6,b
 13960                           
 13961                           ; BSR set to: 0
 13962  001626  5187               	movf	(___fladd@a+3)& (0+255),w,b
 13963  001628  2587               	addwf	(___fladd@a+3)& (0+255),w,b
 13964  00162A  6F8D               	movwf	___fladd@aexp& (0+255),b
 13965                           
 13966                           ; BSR set to: 0
 13967  00162C  BF86               	btfsc	(___fladd@a+2)& (0+255),7,b
 13968                           
 13969                           ; BSR set to: 0
 13970  00162E  818D               	bsf	___fladd@aexp& (0+255),0,b
 13971                           
 13972                           ; BSR set to: 0
 13973  001630  518D               	movf	___fladd@aexp& (0+255),w,b
 13974  001632  B4D8               	btfsc	status,2,c
 13975  001634  D00D               	goto	l10092
 13976                           
 13977                           ; BSR set to: 0
 13978  001636  298D               	incf	___fladd@aexp& (0+255),w,b
 13979  001638  A4D8               	btfss	status,2,c
 13980  00163A  D008               	goto	l10088
 13981                           
 13982                           ; BSR set to: 0
 13983  00163C  0E00               	movlw	0
 13984  00163E  6F84               	movwf	___fladd@a& (0+255),b
 13985  001640  0E00               	movlw	0
 13986  001642  6F85               	movwf	(___fladd@a+1)& (0+255),b
 13987  001644  0E00               	movlw	0
 13988  001646  6F86               	movwf	(___fladd@a+2)& (0+255),b
 13989  001648  0E00               	movlw	0
 13990  00164A  6F87               	movwf	(___fladd@a+3)& (0+255),b
 13991  00164C                     l10088:
 13992                           
 13993                           ; BSR set to: 0
 13994  00164C  8F86               	bsf	(___fladd@a+2)& (0+255),7,b
 13995  00164E  D006               	goto	L18
 13996  001650                     l10092:
 13997                           
 13998                           ; BSR set to: 0
 13999  001650  0E00               	movlw	0
 14000  001652  6F84               	movwf	___fladd@a& (0+255),b
 14001  001654  0E00               	movlw	0
 14002  001656  6F85               	movwf	(___fladd@a+1)& (0+255),b
 14003  001658  0E00               	movlw	0
 14004  00165A  6F86               	movwf	(___fladd@a+2)& (0+255),b
 14005  00165C                     L18:
 14006  00165C  0E00               	movlw	0
 14007  00165E  6F87               	movwf	(___fladd@a+3)& (0+255),b
 14008                           
 14009                           ; BSR set to: 0
 14010  001660  518E               	movf	___fladd@bexp& (0+255),w,b
 14011  001662  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 14012  001664  B0D8               	btfsc	status,0,c
 14013  001666  D022               	goto	l10130
 14014                           
 14015                           ; BSR set to: 0
 14016  001668  AD8C               	btfss	___fladd@signs& (0+255),6,b
 14017  00166A  D002               	goto	l10100
 14018                           
 14019                           ; BSR set to: 0
 14020  00166C  0E80               	movlw	128
 14021  00166E  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 14022  001670                     l10100:
 14023                           
 14024                           ; BSR set to: 0
 14025  001670  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 14026                           
 14027                           ; BSR set to: 0
 14028  001674  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 14029                           
 14030                           ; BSR set to: 0
 14031  001678  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 14032                           
 14033                           ; BSR set to: 0
 14034  00167C  C080  F08F         	movff	___fladd@b,___fladd@grs
 14035                           
 14036                           ; BSR set to: 0
 14037  001680  C084  F080         	movff	___fladd@a,___fladd@b
 14038                           
 14039                           ; BSR set to: 0
 14040  001684  C08F  F084         	movff	___fladd@grs,___fladd@a
 14041                           
 14042                           ; BSR set to: 0
 14043  001688  C081  F08F         	movff	___fladd@b+1,___fladd@grs
 14044                           
 14045                           ; BSR set to: 0
 14046  00168C  C085  F081         	movff	___fladd@a+1,___fladd@b+1
 14047                           
 14048                           ; BSR set to: 0
 14049  001690  C08F  F085         	movff	___fladd@grs,___fladd@a+1
 14050                           
 14051                           ; BSR set to: 0
 14052  001694  C082  F08F         	movff	___fladd@b+2,___fladd@grs
 14053                           
 14054                           ; BSR set to: 0
 14055  001698  C086  F082         	movff	___fladd@a+2,___fladd@b+2
 14056                           
 14057                           ; BSR set to: 0
 14058  00169C  C08F  F086         	movff	___fladd@grs,___fladd@a+2
 14059                           
 14060                           ; BSR set to: 0
 14061  0016A0  C083  F08F         	movff	___fladd@b+3,___fladd@grs
 14062                           
 14063                           ; BSR set to: 0
 14064  0016A4  C087  F083         	movff	___fladd@a+3,___fladd@b+3
 14065                           
 14066                           ; BSR set to: 0
 14067  0016A8  C08F  F087         	movff	___fladd@grs,___fladd@a+3
 14068  0016AC                     l10130:
 14069                           
 14070                           ; BSR set to: 0
 14071  0016AC  0E00               	movlw	0
 14072  0016AE  6F8F               	movwf	___fladd@grs& (0+255),b
 14073                           
 14074                           ; BSR set to: 0
 14075  0016B0  518E               	movf	___fladd@bexp& (0+255),w,b
 14076  0016B2  C08D  F088         	movff	___fladd@aexp,??___fladd
 14077  0016B6  6B89               	clrf	(??___fladd+1)& (0+255),b
 14078  0016B8  5F88               	subwf	??___fladd& (0+255),f,b
 14079  0016BA  0E00               	movlw	0
 14080  0016BC  5B89               	subwfb	(??___fladd+1)& (0+255),f,b
 14081  0016BE  BF89               	btfsc	(??___fladd+1)& (0+255),7,b
 14082  0016C0  D02C               	goto	l2289
 14083  0016C2  5189               	movf	(??___fladd+1)& (0+255),w,b
 14084  0016C4  E104               	bnz	u9960
 14085  0016C6  0E1A               	movlw	26
 14086  0016C8  5D88               	subwf	??___fladd& (0+255),w,b
 14087  0016CA  A0D8               	btfss	status,0,c
 14088  0016CC  D026               	goto	l2289
 14089  0016CE                     u9960:
 14090                           
 14091                           ; BSR set to: 0
 14092  0016CE  5180               	movf	___fladd@b& (0+255),w,b
 14093  0016D0  1181               	iorwf	(___fladd@b+1)& (0+255),w,b
 14094  0016D2  1182               	iorwf	(___fladd@b+2)& (0+255),w,b
 14095  0016D4  1183               	iorwf	(___fladd@b+3)& (0+255),w,b
 14096  0016D6  B4D8               	btfsc	status,2,c
 14097  0016D8  D002               	goto	u9970
 14098  0016DA  0E01               	movlw	1
 14099  0016DC  D001               	goto	u9980
 14100  0016DE                     u9970:
 14101  0016DE  0E00               	movlw	0
 14102  0016E0                     u9980:
 14103  0016E0  6F8F               	movwf	___fladd@grs& (0+255),b
 14104                           
 14105                           ; BSR set to: 0
 14106  0016E2  0E00               	movlw	0
 14107  0016E4  6F80               	movwf	___fladd@b& (0+255),b
 14108  0016E6  0E00               	movlw	0
 14109  0016E8  6F81               	movwf	(___fladd@b+1)& (0+255),b
 14110  0016EA  0E00               	movlw	0
 14111  0016EC  6F82               	movwf	(___fladd@b+2)& (0+255),b
 14112  0016EE  0E00               	movlw	0
 14113  0016F0  6F83               	movwf	(___fladd@b+3)& (0+255),b
 14114                           
 14115                           ; BSR set to: 0
 14116  0016F2  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 14117  0016F6  D015               	goto	u10010
 14118  0016F8                     l2290:
 14119                           
 14120                           ; BSR set to: 0
 14121  0016F8  A18F               	btfss	___fladd@grs& (0+255),0,b
 14122  0016FA  D005               	goto	l10142
 14123                           
 14124                           ; BSR set to: 0
 14125  0016FC  90D8               	bcf	status,0,c
 14126  0016FE  318F               	rrcf	___fladd@grs& (0+255),w,b
 14127  001700  0901               	iorlw	1
 14128  001702  6F8F               	movwf	___fladd@grs& (0+255),b
 14129  001704  D002               	goto	l10144
 14130  001706                     l10142:
 14131                           
 14132                           ; BSR set to: 0
 14133  001706  90D8               	bcf	status,0,c
 14134  001708  338F               	rrcf	___fladd@grs& (0+255),f,b
 14135  00170A                     l10144:
 14136                           
 14137                           ; BSR set to: 0
 14138  00170A  B180               	btfsc	___fladd@b& (0+255),0,b
 14139                           
 14140                           ; BSR set to: 0
 14141  00170C  8F8F               	bsf	___fladd@grs& (0+255),7,b
 14142                           
 14143                           ; BSR set to: 0
 14144  00170E  3583               	rlcf	(___fladd@b+3)& (0+255),w,b
 14145  001710  3383               	rrcf	(___fladd@b+3)& (0+255),f,b
 14146  001712  3382               	rrcf	(___fladd@b+2)& (0+255),f,b
 14147  001714  3381               	rrcf	(___fladd@b+1)& (0+255),f,b
 14148  001716  3380               	rrcf	___fladd@b& (0+255),f,b
 14149                           
 14150                           ; BSR set to: 0
 14151  001718  2B8E               	incf	___fladd@bexp& (0+255),f,b
 14152  00171A                     l2289:
 14153                           
 14154                           ; BSR set to: 0
 14155  00171A  518D               	movf	___fladd@aexp& (0+255),w,b
 14156  00171C  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 14157  00171E  A0D8               	btfss	status,0,c
 14158  001720  D7EB               	goto	l2290
 14159  001722                     u10010:
 14160                           
 14161                           ; BSR set to: 0
 14162  001722  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 14163  001724  D028               	goto	l10176
 14164                           
 14165                           ; BSR set to: 0
 14166  001726  518E               	movf	___fladd@bexp& (0+255),w,b
 14167  001728  A4D8               	btfss	status,2,c
 14168  00172A  D009               	goto	l10158
 14169                           
 14170                           ; BSR set to: 0
 14171  00172C  0E00               	movlw	0
 14172  00172E  6F80               	movwf	?___fladd& (0+255),b
 14173  001730  0E00               	movlw	0
 14174  001732  6F81               	movwf	(?___fladd+1)& (0+255),b
 14175  001734  0E00               	movlw	0
 14176  001736  6F82               	movwf	(?___fladd+2)& (0+255),b
 14177  001738  0E00               	movlw	0
 14178  00173A  6F83               	movwf	(?___fladd+3)& (0+255),b
 14179  00173C  0012               	return	
 14180  00173E                     l10158:
 14181                           
 14182                           ; BSR set to: 0
 14183  00173E  5184               	movf	___fladd@a& (0+255),w,b
 14184  001740  2780               	addwf	___fladd@b& (0+255),f,b
 14185  001742  5185               	movf	(___fladd@a+1)& (0+255),w,b
 14186  001744  2381               	addwfc	(___fladd@b+1)& (0+255),f,b
 14187  001746  5186               	movf	(___fladd@a+2)& (0+255),w,b
 14188  001748  2382               	addwfc	(___fladd@b+2)& (0+255),f,b
 14189  00174A  5187               	movf	(___fladd@a+3)& (0+255),w,b
 14190  00174C  2383               	addwfc	(___fladd@b+3)& (0+255),f,b
 14191                           
 14192                           ; BSR set to: 0
 14193  00174E  A183               	btfss	(___fladd@b+3)& (0+255),0,b
 14194  001750  D071               	goto	u10140
 14195                           
 14196                           ; BSR set to: 0
 14197  001752  A18F               	btfss	___fladd@grs& (0+255),0,b
 14198  001754  D005               	goto	l10166
 14199                           
 14200                           ; BSR set to: 0
 14201  001756  90D8               	bcf	status,0,c
 14202  001758  318F               	rrcf	___fladd@grs& (0+255),w,b
 14203  00175A  0901               	iorlw	1
 14204  00175C  6F8F               	movwf	___fladd@grs& (0+255),b
 14205  00175E  D002               	goto	l10168
 14206  001760                     l10166:
 14207                           
 14208                           ; BSR set to: 0
 14209  001760  90D8               	bcf	status,0,c
 14210  001762  338F               	rrcf	___fladd@grs& (0+255),f,b
 14211  001764                     l10168:
 14212                           
 14213                           ; BSR set to: 0
 14214  001764  B180               	btfsc	___fladd@b& (0+255),0,b
 14215                           
 14216                           ; BSR set to: 0
 14217  001766  8F8F               	bsf	___fladd@grs& (0+255),7,b
 14218                           
 14219                           ; BSR set to: 0
 14220  001768  3583               	rlcf	(___fladd@b+3)& (0+255),w,b
 14221  00176A  3383               	rrcf	(___fladd@b+3)& (0+255),f,b
 14222  00176C  3382               	rrcf	(___fladd@b+2)& (0+255),f,b
 14223  00176E  3381               	rrcf	(___fladd@b+1)& (0+255),f,b
 14224  001770  3380               	rrcf	___fladd@b& (0+255),f,b
 14225                           
 14226                           ; BSR set to: 0
 14227  001772  2B8E               	incf	___fladd@bexp& (0+255),f,b
 14228  001774  D05F               	goto	u10140
 14229  001776                     l10176:
 14230                           
 14231                           ; BSR set to: 0
 14232  001776  5184               	movf	___fladd@a& (0+255),w,b
 14233  001778  5D80               	subwf	___fladd@b& (0+255),w,b
 14234  00177A  5185               	movf	(___fladd@a+1)& (0+255),w,b
 14235  00177C  5981               	subwfb	(___fladd@b+1)& (0+255),w,b
 14236  00177E  5186               	movf	(___fladd@a+2)& (0+255),w,b
 14237  001780  5982               	subwfb	(___fladd@b+2)& (0+255),w,b
 14238  001782  5183               	movf	(___fladd@b+3)& (0+255),w,b
 14239  001784  0A80               	xorlw	128
 14240  001786  6F88               	movwf	??___fladd& (0+255),b
 14241  001788  5187               	movf	(___fladd@a+3)& (0+255),w,b
 14242  00178A  0A80               	xorlw	128
 14243  00178C  5988               	subwfb	??___fladd& (0+255),w,b
 14244  00178E  B0D8               	btfsc	status,0,c
 14245  001790  D025               	goto	l10186
 14246                           
 14247                           ; BSR set to: 0
 14248  001792  5180               	movf	___fladd@b& (0+255),w,b
 14249  001794  5D84               	subwf	___fladd@a& (0+255),w,b
 14250  001796  6F88               	movwf	??___fladd& (0+255),b
 14251  001798  5181               	movf	(___fladd@b+1)& (0+255),w,b
 14252  00179A  5985               	subwfb	(___fladd@a+1)& (0+255),w,b
 14253  00179C  6F89               	movwf	(??___fladd+1)& (0+255),b
 14254  00179E  5182               	movf	(___fladd@b+2)& (0+255),w,b
 14255  0017A0  5986               	subwfb	(___fladd@a+2)& (0+255),w,b
 14256  0017A2  6F8A               	movwf	(??___fladd+2)& (0+255),b
 14257  0017A4  5183               	movf	(___fladd@b+3)& (0+255),w,b
 14258  0017A6  5987               	subwfb	(___fladd@a+3)& (0+255),w,b
 14259  0017A8  6F8B               	movwf	(??___fladd+3)& (0+255),b
 14260  0017AA  0EFF               	movlw	255
 14261  0017AC  2588               	addwf	??___fladd& (0+255),w,b
 14262  0017AE  6F80               	movwf	___fladd@b& (0+255),b
 14263  0017B0  0EFF               	movlw	255
 14264  0017B2  2189               	addwfc	(??___fladd+1)& (0+255),w,b
 14265  0017B4  6F81               	movwf	(___fladd@b+1)& (0+255),b
 14266  0017B6  0EFF               	movlw	255
 14267  0017B8  218A               	addwfc	(??___fladd+2)& (0+255),w,b
 14268  0017BA  6F82               	movwf	(___fladd@b+2)& (0+255),b
 14269  0017BC  0EFF               	movlw	255
 14270  0017BE  218B               	addwfc	(??___fladd+3)& (0+255),w,b
 14271  0017C0  6F83               	movwf	(___fladd@b+3)& (0+255),b
 14272  0017C2  0E80               	movlw	128
 14273  0017C4  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 14274                           
 14275                           ; BSR set to: 0
 14276  0017C6  6D8F               	negf	___fladd@grs& (0+255),b
 14277                           
 14278                           ; BSR set to: 0
 14279  0017C8  518F               	movf	___fladd@grs& (0+255),w,b
 14280  0017CA  A4D8               	btfss	status,2,c
 14281  0017CC  D00F               	goto	l2305
 14282                           
 14283                           ; BSR set to: 0
 14284  0017CE  0E01               	movlw	1
 14285  0017D0  2780               	addwf	___fladd@b& (0+255),f,b
 14286  0017D2  0E00               	movlw	0
 14287  0017D4  2381               	addwfc	(___fladd@b+1)& (0+255),f,b
 14288  0017D6  2382               	addwfc	(___fladd@b+2)& (0+255),f,b
 14289  0017D8  2383               	addwfc	(___fladd@b+3)& (0+255),f,b
 14290  0017DA  D008               	goto	l2305
 14291  0017DC                     l10186:
 14292                           
 14293                           ; BSR set to: 0
 14294  0017DC  5184               	movf	___fladd@a& (0+255),w,b
 14295  0017DE  5F80               	subwf	___fladd@b& (0+255),f,b
 14296  0017E0  5185               	movf	(___fladd@a+1)& (0+255),w,b
 14297  0017E2  5B81               	subwfb	(___fladd@b+1)& (0+255),f,b
 14298  0017E4  5186               	movf	(___fladd@a+2)& (0+255),w,b
 14299  0017E6  5B82               	subwfb	(___fladd@b+2)& (0+255),f,b
 14300  0017E8  5187               	movf	(___fladd@a+3)& (0+255),w,b
 14301  0017EA  5B83               	subwfb	(___fladd@b+3)& (0+255),f,b
 14302  0017EC                     l2305:
 14303                           
 14304                           ; BSR set to: 0
 14305  0017EC  5180               	movf	___fladd@b& (0+255),w,b
 14306  0017EE  1181               	iorwf	(___fladd@b+1)& (0+255),w,b
 14307  0017F0  1182               	iorwf	(___fladd@b+2)& (0+255),w,b
 14308  0017F2  1183               	iorwf	(___fladd@b+3)& (0+255),w,b
 14309  0017F4  A4D8               	btfss	status,2,c
 14310  0017F6  D01C               	goto	l10210
 14311                           
 14312                           ; BSR set to: 0
 14313  0017F8  518F               	movf	___fladd@grs& (0+255),w,b
 14314  0017FA  A4D8               	btfss	status,2,c
 14315  0017FC  D019               	goto	l10210
 14316                           
 14317                           ; BSR set to: 0
 14318  0017FE  0E00               	movlw	0
 14319  001800  6F80               	movwf	?___fladd& (0+255),b
 14320  001802  0E00               	movlw	0
 14321  001804  6F81               	movwf	(?___fladd+1)& (0+255),b
 14322  001806  0E00               	movlw	0
 14323  001808  6F82               	movwf	(?___fladd+2)& (0+255),b
 14324  00180A  0E00               	movlw	0
 14325  00180C  6F83               	movwf	(?___fladd+3)& (0+255),b
 14326  00180E  0012               	return	
 14327  001810                     l10194:
 14328                           
 14329                           ; BSR set to: 0
 14330  001810  90D8               	bcf	status,0,c
 14331  001812  3780               	rlcf	___fladd@b& (0+255),f,b
 14332  001814  3781               	rlcf	(___fladd@b+1)& (0+255),f,b
 14333  001816  3782               	rlcf	(___fladd@b+2)& (0+255),f,b
 14334  001818  3783               	rlcf	(___fladd@b+3)& (0+255),f,b
 14335                           
 14336                           ; BSR set to: 0
 14337  00181A  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 14338                           
 14339                           ; BSR set to: 0
 14340  00181C  8180               	bsf	___fladd@b& (0+255),0,b
 14341                           
 14342                           ; BSR set to: 0
 14343  00181E  A18F               	btfss	___fladd@grs& (0+255),0,b
 14344  001820  D002               	goto	l10204
 14345                           
 14346                           ; BSR set to: 0
 14347  001822  80D8               	bsf	status,0,c
 14348  001824  D001               	goto	L19
 14349  001826                     l10204:
 14350                           
 14351                           ; BSR set to: 0
 14352  001826  90D8               	bcf	status,0,c
 14353  001828                     L19:
 14354  001828  378F               	rlcf	___fladd@grs& (0+255),f,b
 14355                           
 14356                           ; BSR set to: 0
 14357  00182A  518E               	movf	___fladd@bexp& (0+255),w,b
 14358  00182C  A4D8               	btfss	status,2,c
 14359                           
 14360                           ; BSR set to: 0
 14361  00182E  078E               	decf	___fladd@bexp& (0+255),f,b
 14362  001830                     l10210:
 14363                           
 14364                           ; BSR set to: 0
 14365  001830  AF82               	btfss	(___fladd@b+2)& (0+255),7,b
 14366  001832  D7EE               	goto	l10194
 14367  001834                     u10140:
 14368                           
 14369                           ; BSR set to: 0
 14370  001834  0E00               	movlw	0
 14371  001836  6F8D               	movwf	___fladd@aexp& (0+255),b
 14372                           
 14373                           ; BSR set to: 0
 14374  001838  AF8F               	btfss	___fladd@grs& (0+255),7,b
 14375  00183A  D00B               	goto	l2314
 14376                           
 14377                           ; BSR set to: 0
 14378  00183C  C08F  F088         	movff	___fladd@grs,??___fladd
 14379  001840  0E7F               	movlw	127
 14380  001842  1788               	andwf	??___fladd& (0+255),f,b
 14381  001844  B4D8               	btfsc	status,2,c
 14382  001846  D003               	goto	l2315
 14383  001848                     u10160:
 14384                           
 14385                           ; BSR set to: 0
 14386  001848  0E01               	movlw	1
 14387  00184A  6F8D               	movwf	___fladd@aexp& (0+255),b
 14388  00184C  D002               	goto	l2314
 14389  00184E                     l2315:
 14390                           
 14391                           ; BSR set to: 0
 14392  00184E  B180               	btfsc	___fladd@b& (0+255),0,b
 14393  001850  D7FB               	goto	u10160
 14394  001852                     l2314:
 14395                           
 14396                           ; BSR set to: 0
 14397  001852  518D               	movf	___fladd@aexp& (0+255),w,b
 14398  001854  B4D8               	btfsc	status,2,c
 14399  001856  D020               	goto	l10230
 14400                           
 14401                           ; BSR set to: 0
 14402  001858  0E01               	movlw	1
 14403  00185A  2780               	addwf	___fladd@b& (0+255),f,b
 14404  00185C  0E00               	movlw	0
 14405  00185E  2381               	addwfc	(___fladd@b+1)& (0+255),f,b
 14406  001860  2382               	addwfc	(___fladd@b+2)& (0+255),f,b
 14407  001862  2383               	addwfc	(___fladd@b+3)& (0+255),f,b
 14408                           
 14409                           ; BSR set to: 0
 14410  001864  A183               	btfss	(___fladd@b+3)& (0+255),0,b
 14411  001866  D018               	goto	l10230
 14412                           
 14413                           ; BSR set to: 0
 14414  001868  C080  F088         	movff	___fladd@b,??___fladd
 14415  00186C  C081  F089         	movff	___fladd@b+1,??___fladd+1
 14416  001870  C082  F08A         	movff	___fladd@b+2,??___fladd+2
 14417  001874  C083  F08B         	movff	___fladd@b+3,??___fladd+3
 14418  001878  358B               	rlcf	(??___fladd+3)& (0+255),w,b
 14419  00187A  338B               	rrcf	(??___fladd+3)& (0+255),f,b
 14420  00187C  338A               	rrcf	(??___fladd+2)& (0+255),f,b
 14421  00187E  3389               	rrcf	(??___fladd+1)& (0+255),f,b
 14422  001880  3388               	rrcf	??___fladd& (0+255),f,b
 14423  001882  C088  F080         	movff	??___fladd,___fladd@b
 14424  001886  C089  F081         	movff	??___fladd+1,___fladd@b+1
 14425  00188A  C08A  F082         	movff	??___fladd+2,___fladd@b+2
 14426  00188E  C08B  F083         	movff	??___fladd+3,___fladd@b+3
 14427  001892  298E               	incf	___fladd@bexp& (0+255),w,b
 14428  001894  A4D8               	btfss	status,2,c
 14429                           
 14430                           ; BSR set to: 0
 14431  001896  2B8E               	incf	___fladd@bexp& (0+255),f,b
 14432  001898                     l10230:
 14433                           
 14434                           ; BSR set to: 0
 14435  001898  298E               	incf	___fladd@bexp& (0+255),w,b
 14436  00189A  B4D8               	btfsc	status,2,c
 14437  00189C  D003               	goto	u10220
 14438                           
 14439                           ; BSR set to: 0
 14440  00189E  518E               	movf	___fladd@bexp& (0+255),w,b
 14441  0018A0  A4D8               	btfss	status,2,c
 14442  0018A2  D00D               	goto	l10238
 14443  0018A4                     u10220:
 14444                           
 14445                           ; BSR set to: 0
 14446  0018A4  0E00               	movlw	0
 14447  0018A6  6F80               	movwf	___fladd@b& (0+255),b
 14448  0018A8  0E00               	movlw	0
 14449  0018AA  6F81               	movwf	(___fladd@b+1)& (0+255),b
 14450  0018AC  0E00               	movlw	0
 14451  0018AE  6F82               	movwf	(___fladd@b+2)& (0+255),b
 14452  0018B0  0E00               	movlw	0
 14453  0018B2  6F83               	movwf	(___fladd@b+3)& (0+255),b
 14454  0018B4  518E               	movf	___fladd@bexp& (0+255),w,b
 14455  0018B6  A4D8               	btfss	status,2,c
 14456  0018B8  D002               	goto	l10238
 14457                           
 14458                           ; BSR set to: 0
 14459  0018BA  0E00               	movlw	0
 14460  0018BC  6F8C               	movwf	___fladd@signs& (0+255),b
 14461  0018BE                     l10238:
 14462                           
 14463                           ; BSR set to: 0
 14464  0018BE  A18E               	btfss	___fladd@bexp& (0+255),0,b
 14465  0018C0  D002               	goto	l10242
 14466                           
 14467                           ; BSR set to: 0
 14468  0018C2  8F82               	bsf	(___fladd@b+2)& (0+255),7,b
 14469  0018C4  D001               	goto	l10244
 14470  0018C6                     l10242:
 14471                           
 14472                           ; BSR set to: 0
 14473  0018C6  9F82               	bcf	(___fladd@b+2)& (0+255),7,b
 14474  0018C8                     l10244:
 14475                           
 14476                           ; BSR set to: 0
 14477  0018C8  90D8               	bcf	status,0,c
 14478  0018CA  318E               	rrcf	___fladd@bexp& (0+255),w,b
 14479  0018CC  6F83               	movwf	(___fladd@b+3)& (0+255),b
 14480                           
 14481                           ; BSR set to: 0
 14482  0018CE  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 14483                           
 14484                           ; BSR set to: 0
 14485  0018D0  8F83               	bsf	(___fladd@b+3)& (0+255),7,b
 14486                           
 14487                           ; BSR set to: 0
 14488  0018D2  C080  F080         	movff	___fladd@b,?___fladd
 14489  0018D6  C081  F081         	movff	___fladd@b+1,?___fladd+1
 14490  0018DA  C082  F082         	movff	___fladd@b+2,?___fladd+2
 14491  0018DE  C083  F083         	movff	___fladd@b+3,?___fladd+3
 14492                           
 14493                           ; BSR set to: 0
 14494  0018E2  0012               	return		;funcret
 14495  0018E4                     __end_of___fladd:
 14496                           	opt callstack 0
 14497                           
 14498 ;; *************** function ___almod *****************
 14499 ;; Defined at:
 14500 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\almod.c"
 14501 ;; Parameters:    Size  Location     Type
 14502 ;;  dividend        4    0[BANK0 ] long 
 14503 ;;  divisor         4    4[BANK0 ] long 
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;  sign            1    9[BANK0 ] unsigned char 
 14506 ;;  counter         1    8[BANK0 ] unsigned char 
 14507 ;; Return value:  Size  Location     Type
 14508 ;;                  4    0[BANK0 ] long 
 14509 ;; Registers used:
 14510 ;;		wreg, status,2, status,0
 14511 ;; Tracked objects:
 14512 ;;		On entry : 0/0
 14513 ;;		On exit  : 0/0
 14514 ;;		Unchanged: 0/0
 14515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14516 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14517 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14519 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14520 ;;Total ram usage:       10 bytes
 14521 ;; Hardware stack levels used:    1
 14522 ;; Hardware stack levels required when called:    8
 14523 ;; This function calls:
 14524 ;;		Nothing
 14525 ;; This function is called by:
 14526 ;;		_normal_updater
 14527 ;;		_completion_return
 14528 ;; This function uses a non-reentrant model
 14529 ;;
 14530                           
 14531                           	psect	text64
 14532  003F14                     __ptext64:
 14533                           	opt callstack 0
 14534  003F14                     ___almod:
 14535                           	opt callstack 21
 14536                           
 14537                           ; BSR set to: 0
 14538                           ;incstack = 0
 14539  003F14  0E00               	movlw	0
 14540  003F16  0100               	movlb	0	; () banked
 14541  003F18  6F89               	movwf	___almod@sign& (0+255),b
 14542                           
 14543                           ; BSR set to: 0
 14544  003F1A  AF83               	btfss	(___almod@dividend+3)& (0+255),7,b
 14545  003F1C  D00A               	goto	l11676
 14546                           
 14547                           ; BSR set to: 0
 14548  003F1E  1F83               	comf	(___almod@dividend+3)& (0+255),f,b
 14549  003F20  1F82               	comf	(___almod@dividend+2)& (0+255),f,b
 14550  003F22  1F81               	comf	(___almod@dividend+1)& (0+255),f,b
 14551  003F24  6D80               	negf	___almod@dividend& (0+255),b
 14552  003F26  0E00               	movlw	0
 14553  003F28  2381               	addwfc	(___almod@dividend+1)& (0+255),f,b
 14554  003F2A  2382               	addwfc	(___almod@dividend+2)& (0+255),f,b
 14555  003F2C  2383               	addwfc	(___almod@dividend+3)& (0+255),f,b
 14556                           
 14557                           ; BSR set to: 0
 14558  003F2E  0E01               	movlw	1
 14559  003F30  6F89               	movwf	___almod@sign& (0+255),b
 14560  003F32                     l11676:
 14561                           
 14562                           ; BSR set to: 0
 14563  003F32  AF87               	btfss	(___almod@divisor+3)& (0+255),7,b
 14564  003F34  D008               	goto	l11680
 14565                           
 14566                           ; BSR set to: 0
 14567  003F36  1F87               	comf	(___almod@divisor+3)& (0+255),f,b
 14568  003F38  1F86               	comf	(___almod@divisor+2)& (0+255),f,b
 14569  003F3A  1F85               	comf	(___almod@divisor+1)& (0+255),f,b
 14570  003F3C  6D84               	negf	___almod@divisor& (0+255),b
 14571  003F3E  0E00               	movlw	0
 14572  003F40  2385               	addwfc	(___almod@divisor+1)& (0+255),f,b
 14573  003F42  2386               	addwfc	(___almod@divisor+2)& (0+255),f,b
 14574  003F44  2387               	addwfc	(___almod@divisor+3)& (0+255),f,b
 14575  003F46                     l11680:
 14576                           
 14577                           ; BSR set to: 0
 14578  003F46  5184               	movf	___almod@divisor& (0+255),w,b
 14579  003F48  1185               	iorwf	(___almod@divisor+1)& (0+255),w,b
 14580  003F4A  1186               	iorwf	(___almod@divisor+2)& (0+255),w,b
 14581  003F4C  1187               	iorwf	(___almod@divisor+3)& (0+255),w,b
 14582  003F4E  B4D8               	btfsc	status,2,c
 14583  003F50  D024               	goto	l11696
 14584                           
 14585                           ; BSR set to: 0
 14586  003F52  0E01               	movlw	1
 14587  003F54  6F88               	movwf	___almod@counter& (0+255),b
 14588  003F56  D006               	goto	l11686
 14589  003F58                     l11684:
 14590                           
 14591                           ; BSR set to: 0
 14592  003F58  90D8               	bcf	status,0,c
 14593  003F5A  3784               	rlcf	___almod@divisor& (0+255),f,b
 14594  003F5C  3785               	rlcf	(___almod@divisor+1)& (0+255),f,b
 14595  003F5E  3786               	rlcf	(___almod@divisor+2)& (0+255),f,b
 14596  003F60  3787               	rlcf	(___almod@divisor+3)& (0+255),f,b
 14597  003F62  2B88               	incf	___almod@counter& (0+255),f,b
 14598  003F64                     l11686:
 14599                           
 14600                           ; BSR set to: 0
 14601  003F64  AF87               	btfss	(___almod@divisor+3)& (0+255),7,b
 14602  003F66  D7F8               	goto	l11684
 14603  003F68                     u11740:
 14604                           
 14605                           ; BSR set to: 0
 14606  003F68  5184               	movf	___almod@divisor& (0+255),w,b
 14607  003F6A  5D80               	subwf	___almod@dividend& (0+255),w,b
 14608  003F6C  5185               	movf	(___almod@divisor+1)& (0+255),w,b
 14609  003F6E  5981               	subwfb	(___almod@dividend+1)& (0+255),w,b
 14610  003F70  5186               	movf	(___almod@divisor+2)& (0+255),w,b
 14611  003F72  5982               	subwfb	(___almod@dividend+2)& (0+255),w,b
 14612  003F74  5187               	movf	(___almod@divisor+3)& (0+255),w,b
 14613  003F76  5983               	subwfb	(___almod@dividend+3)& (0+255),w,b
 14614  003F78  A0D8               	btfss	status,0,c
 14615  003F7A  D008               	goto	l11692
 14616                           
 14617                           ; BSR set to: 0
 14618  003F7C  5184               	movf	___almod@divisor& (0+255),w,b
 14619  003F7E  5F80               	subwf	___almod@dividend& (0+255),f,b
 14620  003F80  5185               	movf	(___almod@divisor+1)& (0+255),w,b
 14621  003F82  5B81               	subwfb	(___almod@dividend+1)& (0+255),f,b
 14622  003F84  5186               	movf	(___almod@divisor+2)& (0+255),w,b
 14623  003F86  5B82               	subwfb	(___almod@dividend+2)& (0+255),f,b
 14624  003F88  5187               	movf	(___almod@divisor+3)& (0+255),w,b
 14625  003F8A  5B83               	subwfb	(___almod@dividend+3)& (0+255),f,b
 14626  003F8C                     l11692:
 14627                           
 14628                           ; BSR set to: 0
 14629  003F8C  90D8               	bcf	status,0,c
 14630  003F8E  3387               	rrcf	(___almod@divisor+3)& (0+255),f,b
 14631  003F90  3386               	rrcf	(___almod@divisor+2)& (0+255),f,b
 14632  003F92  3385               	rrcf	(___almod@divisor+1)& (0+255),f,b
 14633  003F94  3384               	rrcf	___almod@divisor& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636  003F96  2F88               	decfsz	___almod@counter& (0+255),f,b
 14637  003F98  D7E7               	goto	u11740
 14638  003F9A                     l11696:
 14639                           
 14640                           ; BSR set to: 0
 14641  003F9A  5189               	movf	___almod@sign& (0+255),w,b
 14642  003F9C  B4D8               	btfsc	status,2,c
 14643  003F9E  D008               	goto	l11700
 14644                           
 14645                           ; BSR set to: 0
 14646  003FA0  1F83               	comf	(___almod@dividend+3)& (0+255),f,b
 14647  003FA2  1F82               	comf	(___almod@dividend+2)& (0+255),f,b
 14648  003FA4  1F81               	comf	(___almod@dividend+1)& (0+255),f,b
 14649  003FA6  6D80               	negf	___almod@dividend& (0+255),b
 14650  003FA8  0E00               	movlw	0
 14651  003FAA  2381               	addwfc	(___almod@dividend+1)& (0+255),f,b
 14652  003FAC  2382               	addwfc	(___almod@dividend+2)& (0+255),f,b
 14653  003FAE  2383               	addwfc	(___almod@dividend+3)& (0+255),f,b
 14654  003FB0                     l11700:
 14655                           
 14656                           ; BSR set to: 0
 14657  003FB0  C080  F080         	movff	___almod@dividend,?___almod
 14658  003FB4  C081  F081         	movff	___almod@dividend+1,?___almod+1
 14659  003FB8  C082  F082         	movff	___almod@dividend+2,?___almod+2
 14660  003FBC  C083  F083         	movff	___almod@dividend+3,?___almod+3
 14661                           
 14662                           ; BSR set to: 0
 14663  003FC0  0012               	return		;funcret
 14664  003FC2                     __end_of___almod:
 14665                           	opt callstack 0
 14666                           
 14667 ;; *************** function ___aldiv *****************
 14668 ;; Defined at:
 14669 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
 14670 ;; Parameters:    Size  Location     Type
 14671 ;;  dividend        4   10[BANK0 ] long 
 14672 ;;  divisor         4   14[BANK0 ] long 
 14673 ;; Auto vars:     Size  Location     Type
 14674 ;;  quotient        4   20[BANK0 ] long 
 14675 ;;  sign            1   19[BANK0 ] unsigned char 
 14676 ;;  counter         1   18[BANK0 ] unsigned char 
 14677 ;; Return value:  Size  Location     Type
 14678 ;;                  4   10[BANK0 ] long 
 14679 ;; Registers used:
 14680 ;;		wreg, status,2, status,0
 14681 ;; Tracked objects:
 14682 ;;		On entry : 0/0
 14683 ;;		On exit  : 0/0
 14684 ;;		Unchanged: 0/0
 14685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14686 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14687 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14689 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14690 ;;Total ram usage:       14 bytes
 14691 ;; Hardware stack levels used:    1
 14692 ;; Hardware stack levels required when called:    8
 14693 ;; This function calls:
 14694 ;;		Nothing
 14695 ;; This function is called by:
 14696 ;;		_normal_updater
 14697 ;;		_completion_return
 14698 ;; This function uses a non-reentrant model
 14699 ;;
 14700                           
 14701                           	psect	text65
 14702  003CBE                     __ptext65:
 14703                           	opt callstack 0
 14704  003CBE                     ___aldiv:
 14705                           	opt callstack 21
 14706                           
 14707                           ; BSR set to: 0
 14708                           ;incstack = 0
 14709  003CBE  0E00               	movlw	0
 14710  003CC0  0100               	movlb	0	; () banked
 14711  003CC2  6F93               	movwf	___aldiv@sign& (0+255),b
 14712                           
 14713                           ; BSR set to: 0
 14714  003CC4  AF91               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14715  003CC6  D00A               	goto	l11632
 14716                           
 14717                           ; BSR set to: 0
 14718  003CC8  1F91               	comf	(___aldiv@divisor+3)& (0+255),f,b
 14719  003CCA  1F90               	comf	(___aldiv@divisor+2)& (0+255),f,b
 14720  003CCC  1F8F               	comf	(___aldiv@divisor+1)& (0+255),f,b
 14721  003CCE  6D8E               	negf	___aldiv@divisor& (0+255),b
 14722  003CD0  0E00               	movlw	0
 14723  003CD2  238F               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 14724  003CD4  2390               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 14725  003CD6  2391               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 14726                           
 14727                           ; BSR set to: 0
 14728  003CD8  0E01               	movlw	1
 14729  003CDA  6F93               	movwf	___aldiv@sign& (0+255),b
 14730  003CDC                     l11632:
 14731                           
 14732                           ; BSR set to: 0
 14733  003CDC  AF8D               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 14734  003CDE  D00A               	goto	l11638
 14735                           
 14736                           ; BSR set to: 0
 14737  003CE0  1F8D               	comf	(___aldiv@dividend+3)& (0+255),f,b
 14738  003CE2  1F8C               	comf	(___aldiv@dividend+2)& (0+255),f,b
 14739  003CE4  1F8B               	comf	(___aldiv@dividend+1)& (0+255),f,b
 14740  003CE6  6D8A               	negf	___aldiv@dividend& (0+255),b
 14741  003CE8  0E00               	movlw	0
 14742  003CEA  238B               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 14743  003CEC  238C               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 14744  003CEE  238D               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 14745                           
 14746                           ; BSR set to: 0
 14747  003CF0  0E01               	movlw	1
 14748  003CF2  1B93               	xorwf	___aldiv@sign& (0+255),f,b
 14749  003CF4                     l11638:
 14750                           
 14751                           ; BSR set to: 0
 14752  003CF4  0E00               	movlw	0
 14753  003CF6  6F94               	movwf	___aldiv@quotient& (0+255),b
 14754  003CF8  0E00               	movlw	0
 14755  003CFA  6F95               	movwf	(___aldiv@quotient+1)& (0+255),b
 14756  003CFC  0E00               	movlw	0
 14757  003CFE  6F96               	movwf	(___aldiv@quotient+2)& (0+255),b
 14758  003D00  0E00               	movlw	0
 14759  003D02  6F97               	movwf	(___aldiv@quotient+3)& (0+255),b
 14760                           
 14761                           ; BSR set to: 0
 14762  003D04  518E               	movf	___aldiv@divisor& (0+255),w,b
 14763  003D06  118F               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 14764  003D08  1190               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 14765  003D0A  1191               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 14766  003D0C  B4D8               	btfsc	status,2,c
 14767  003D0E  D02A               	goto	l11660
 14768                           
 14769                           ; BSR set to: 0
 14770  003D10  0E01               	movlw	1
 14771  003D12  6F92               	movwf	___aldiv@counter& (0+255),b
 14772  003D14  D006               	goto	l11646
 14773  003D16                     l11644:
 14774                           
 14775                           ; BSR set to: 0
 14776  003D16  90D8               	bcf	status,0,c
 14777  003D18  378E               	rlcf	___aldiv@divisor& (0+255),f,b
 14778  003D1A  378F               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 14779  003D1C  3790               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 14780  003D1E  3791               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 14781  003D20  2B92               	incf	___aldiv@counter& (0+255),f,b
 14782  003D22                     l11646:
 14783                           
 14784                           ; BSR set to: 0
 14785  003D22  AF91               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14786  003D24  D7F8               	goto	l11644
 14787  003D26                     u11680:
 14788                           
 14789                           ; BSR set to: 0
 14790  003D26  90D8               	bcf	status,0,c
 14791  003D28  3794               	rlcf	___aldiv@quotient& (0+255),f,b
 14792  003D2A  3795               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 14793  003D2C  3796               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 14794  003D2E  3797               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 14795                           
 14796                           ; BSR set to: 0
 14797  003D30  518E               	movf	___aldiv@divisor& (0+255),w,b
 14798  003D32  5D8A               	subwf	___aldiv@dividend& (0+255),w,b
 14799  003D34  518F               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14800  003D36  598B               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 14801  003D38  5190               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14802  003D3A  598C               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 14803  003D3C  5191               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14804  003D3E  598D               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 14805  003D40  A0D8               	btfss	status,0,c
 14806  003D42  D009               	goto	l11656
 14807                           
 14808                           ; BSR set to: 0
 14809  003D44  518E               	movf	___aldiv@divisor& (0+255),w,b
 14810  003D46  5F8A               	subwf	___aldiv@dividend& (0+255),f,b
 14811  003D48  518F               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14812  003D4A  5B8B               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 14813  003D4C  5190               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14814  003D4E  5B8C               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 14815  003D50  5191               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14816  003D52  5B8D               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 14817                           
 14818                           ; BSR set to: 0
 14819  003D54  8194               	bsf	___aldiv@quotient& (0+255),0,b
 14820  003D56                     l11656:
 14821                           
 14822                           ; BSR set to: 0
 14823  003D56  90D8               	bcf	status,0,c
 14824  003D58  3391               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 14825  003D5A  3390               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 14826  003D5C  338F               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 14827  003D5E  338E               	rrcf	___aldiv@divisor& (0+255),f,b
 14828                           
 14829                           ; BSR set to: 0
 14830  003D60  2F92               	decfsz	___aldiv@counter& (0+255),f,b
 14831  003D62  D7E1               	goto	u11680
 14832  003D64                     l11660:
 14833                           
 14834                           ; BSR set to: 0
 14835  003D64  5193               	movf	___aldiv@sign& (0+255),w,b
 14836  003D66  B4D8               	btfsc	status,2,c
 14837  003D68  D008               	goto	l11664
 14838                           
 14839                           ; BSR set to: 0
 14840  003D6A  1F97               	comf	(___aldiv@quotient+3)& (0+255),f,b
 14841  003D6C  1F96               	comf	(___aldiv@quotient+2)& (0+255),f,b
 14842  003D6E  1F95               	comf	(___aldiv@quotient+1)& (0+255),f,b
 14843  003D70  6D94               	negf	___aldiv@quotient& (0+255),b
 14844  003D72  0E00               	movlw	0
 14845  003D74  2395               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 14846  003D76  2396               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 14847  003D78  2397               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 14848  003D7A                     l11664:
 14849                           
 14850                           ; BSR set to: 0
 14851  003D7A  C094  F08A         	movff	___aldiv@quotient,?___aldiv
 14852  003D7E  C095  F08B         	movff	___aldiv@quotient+1,?___aldiv+1
 14853  003D82  C096  F08C         	movff	___aldiv@quotient+2,?___aldiv+2
 14854  003D86  C097  F08D         	movff	___aldiv@quotient+3,?___aldiv+3
 14855                           
 14856                           ; BSR set to: 0
 14857  003D8A  0012               	return		;funcret
 14858  003D8C                     __end_of___aldiv:
 14859                           	opt callstack 0
 14860                           
 14861 ;; *************** function _Stop *****************
 14862 ;; Defined at:
 14863 ;;		line 101 in file "encoder_motor.c"
 14864 ;; Parameters:    Size  Location     Type
 14865 ;;		None
 14866 ;; Auto vars:     Size  Location     Type
 14867 ;;		None
 14868 ;; Return value:  Size  Location     Type
 14869 ;;                  1    wreg      void 
 14870 ;; Registers used:
 14871 ;;		None
 14872 ;; Tracked objects:
 14873 ;;		On entry : 0/0
 14874 ;;		On exit  : 0/0
 14875 ;;		Unchanged: 0/0
 14876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14881 ;;Total ram usage:        0 bytes
 14882 ;; Hardware stack levels used:    1
 14883 ;; Hardware stack levels required when called:    8
 14884 ;; This function calls:
 14885 ;;		Nothing
 14886 ;; This function is called by:
 14887 ;;		_main
 14888 ;;		_completion_return
 14889 ;;		_sensed_function_3
 14890 ;;		_middle_crack_drop
 14891 ;;		_left_crack_drop
 14892 ;;		_right_crack_drop
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text66
 14897  005554                     __ptext66:
 14898                           	opt callstack 0
 14899  005554                     _Stop:
 14900                           	opt callstack 21
 14901                           
 14902                           ;encoder_motor.c: 102: LATCbits.LATC6 = 0;
 14903                           
 14904                           ; BSR set to: 0
 14905                           ;incstack = 0
 14906  005554  9C8B               	bcf	3979,6,c	;volatile
 14907                           
 14908                           ;encoder_motor.c: 103: LATCbits.LATC1 = 0;
 14909  005556  928B               	bcf	3979,1,c	;volatile
 14910                           
 14911                           ;encoder_motor.c: 104: LATCbits.LATC7 = 0;
 14912  005558  9E8B               	bcf	3979,7,c	;volatile
 14913                           
 14914                           ;encoder_motor.c: 105: LATCbits.LATC0 = 0;
 14915  00555A  908B               	bcf	3979,0,c	;volatile
 14916                           
 14917                           ;encoder_motor.c: 106: LATCbits.LATC5 = 0;
 14918  00555C  9A8B               	bcf	3979,5,c	;volatile
 14919                           
 14920                           ;encoder_motor.c: 107: LATCbits.LATC2 = 0;
 14921  00555E  948B               	bcf	3979,2,c	;volatile
 14922  005560  0012               	return		;funcret
 14923  005562                     __end_of_Stop:
 14924                           	opt callstack 0
 14925                           
 14926 ;; *************** function _R_I *****************
 14927 ;; Defined at:
 14928 ;;		line 109 in file "encoder_motor.c"
 14929 ;; Parameters:    Size  Location     Type
 14930 ;;		None
 14931 ;; Auto vars:     Size  Location     Type
 14932 ;;		None
 14933 ;; Return value:  Size  Location     Type
 14934 ;;                  1    wreg      void 
 14935 ;; Registers used:
 14936 ;;		wreg
 14937 ;; Tracked objects:
 14938 ;;		On entry : 0/0
 14939 ;;		On exit  : 0/0
 14940 ;;		Unchanged: 0/0
 14941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14945 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14946 ;;Total ram usage:        1 bytes
 14947 ;; Hardware stack levels used:    1
 14948 ;; Hardware stack levels required when called:    8
 14949 ;; This function calls:
 14950 ;;		Nothing
 14951 ;; This function is called by:
 14952 ;;		_completion_return
 14953 ;;		_middle_crack_drop
 14954 ;;		_left_crack_drop
 14955 ;;		_right_crack_drop
 14956 ;; This function uses a non-reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text67
 14960  004E84                     __ptext67:
 14961                           	opt callstack 0
 14962  004E84                     _R_I:
 14963                           	opt callstack 20
 14964                           
 14965                           ;encoder_motor.c: 110: LATCbits.LATC0 = 0;
 14966                           
 14967                           ;incstack = 0
 14968  004E84  908B               	bcf	3979,0,c	;volatile
 14969                           
 14970                           ;encoder_motor.c: 111: LATCbits.LATC5 = 0;
 14971  004E86  9A8B               	bcf	3979,5,c	;volatile
 14972                           
 14973                           ;encoder_motor.c: 112: LATCbits.LATC2 = 0;
 14974  004E88  948B               	bcf	3979,2,c	;volatile
 14975                           
 14976                           ;encoder_motor.c: 114: LATCbits.LATC6 = 1;
 14977  004E8A  8C8B               	bsf	3979,6,c	;volatile
 14978                           
 14979                           ;encoder_motor.c: 115: LATCbits.LATC1 = 1;
 14980  004E8C  828B               	bsf	3979,1,c	;volatile
 14981                           
 14982                           ;encoder_motor.c: 116: LATCbits.LATC7 = 1;
 14983  004E8E  8E8B               	bsf	3979,7,c	;volatile
 14984                           
 14985                           ;encoder_motor.c: 117: _delay((unsigned long)((5)*(10000000/4000.0)));
 14986  004E90  0E11               	movlw	17
 14987  004E92  0100               	movlb	0	; () banked
 14988  004E94  6F80               	movwf	??_R_I& (0+255),b
 14989  004E96  0E3A               	movlw	58
 14990  004E98                     u13517:
 14991  004E98  2EE8               	decfsz	wreg,f,c
 14992  004E9A  D7FE               	bra	u13517
 14993  004E9C  2F80               	decfsz	??_R_I& (0+255),f,b
 14994  004E9E  D7FC               	bra	u13517
 14995  004EA0  F000               	nop	
 14996                           
 14997                           ;encoder_motor.c: 118: LATCbits.LATC6 = 0;
 14998  004EA2  9C8B               	bcf	3979,6,c	;volatile
 14999                           
 15000                           ;encoder_motor.c: 119: LATCbits.LATC1 = 0;
 15001  004EA4  928B               	bcf	3979,1,c	;volatile
 15002                           
 15003                           ;encoder_motor.c: 120: _delay((unsigned long)((1.2)*(10000000/4000.0)));
 15004  004EA6  0E04               	movlw	4
 15005  004EA8  0100               	movlb	0	; () banked
 15006  004EAA  6F80               	movwf	??_R_I& (0+255),b
 15007  004EAC  0EE4               	movlw	228
 15008  004EAE                     u13527:
 15009  004EAE  2EE8               	decfsz	wreg,f,c
 15010  004EB0  D7FE               	bra	u13527
 15011  004EB2  2F80               	decfsz	??_R_I& (0+255),f,b
 15012  004EB4  D7FC               	bra	u13527
 15013  004EB6  F000               	nop	
 15014                           
 15015                           ;encoder_motor.c: 121: LATCbits.LATC1 = 1;
 15016  004EB8  828B               	bsf	3979,1,c	;volatile
 15017                           
 15018                           ;encoder_motor.c: 122: _delay((unsigned long)((0.5)*(10000000/4000.0)));
 15019  004EBA  0EFA               	movlw	250
 15020  004EBC                     u13537:
 15021  004EBC  D000               	nop2	
 15022  004EBE  2EE8               	decfsz	wreg,f,c
 15023  004EC0  D7FD               	bra	u13537
 15024                           
 15025                           ;encoder_motor.c: 123: LATCbits.LATC6 = 0;
 15026  004EC2  9C8B               	bcf	3979,6,c	;volatile
 15027                           
 15028                           ;encoder_motor.c: 124: LATCbits.LATC1 = 0;
 15029  004EC4  928B               	bcf	3979,1,c	;volatile
 15030                           
 15031                           ;encoder_motor.c: 125: LATCbits.LATC7 = 1;
 15032  004EC6  8E8B               	bsf	3979,7,c	;volatile
 15033                           
 15034                           ;encoder_motor.c: 126: _delay((unsigned long)((700)*(10000000/4000000.0)));
 15035  004EC8  0EFA               	movlw	250
 15036  004ECA                     u13547:
 15037  004ECA  D000               	nop2	
 15038  004ECC  D000               	nop2	
 15039  004ECE  2EE8               	decfsz	wreg,f,c
 15040  004ED0  D7FC               	bra	u13547
 15041  004ED2  0012               	return		;funcret
 15042  004ED4                     __end_of_R_I:
 15043                           	opt callstack 0
 15044                           
 15045 ;; *************** function _L_I *****************
 15046 ;; Defined at:
 15047 ;;		line 86 in file "encoder_motor.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;		None
 15050 ;; Auto vars:     Size  Location     Type
 15051 ;;		None
 15052 ;; Return value:  Size  Location     Type
 15053 ;;                  1    wreg      void 
 15054 ;; Registers used:
 15055 ;;		wreg
 15056 ;; Tracked objects:
 15057 ;;		On entry : 0/0
 15058 ;;		On exit  : 0/0
 15059 ;;		Unchanged: 0/0
 15060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15063 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15064 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15065 ;;Total ram usage:        1 bytes
 15066 ;; Hardware stack levels used:    1
 15067 ;; Hardware stack levels required when called:    8
 15068 ;; This function calls:
 15069 ;;		Nothing
 15070 ;; This function is called by:
 15071 ;;		_completion_return
 15072 ;;		_middle_crack_drop
 15073 ;;		_left_crack_drop
 15074 ;;		_right_crack_drop
 15075 ;; This function uses a non-reentrant model
 15076 ;;
 15077                           
 15078                           	psect	text68
 15079  005120                     __ptext68:
 15080                           	opt callstack 0
 15081  005120                     _L_I:
 15082                           	opt callstack 20
 15083                           
 15084                           ;encoder_motor.c: 87: LATCbits.LATC6 = 0;
 15085                           
 15086                           ;incstack = 0
 15087  005120  9C8B               	bcf	3979,6,c	;volatile
 15088                           
 15089                           ;encoder_motor.c: 88: LATCbits.LATC1 = 0;
 15090  005122  928B               	bcf	3979,1,c	;volatile
 15091                           
 15092                           ;encoder_motor.c: 89: LATCbits.LATC7 = 0;
 15093  005124  9E8B               	bcf	3979,7,c	;volatile
 15094                           
 15095                           ;encoder_motor.c: 91: LATCbits.LATC0 = 1;
 15096  005126  808B               	bsf	3979,0,c	;volatile
 15097                           
 15098                           ;encoder_motor.c: 92: LATCbits.LATC5 = 1;
 15099  005128  8A8B               	bsf	3979,5,c	;volatile
 15100                           
 15101                           ;encoder_motor.c: 93: LATCbits.LATC2 = 1;
 15102  00512A  848B               	bsf	3979,2,c	;volatile
 15103                           
 15104                           ;encoder_motor.c: 94: _delay((unsigned long)((4.5)*(10000000/4000.0)));
 15105  00512C  0E0F               	movlw	15
 15106  00512E  0100               	movlb	0	; () banked
 15107  005130  6F80               	movwf	??_L_I& (0+255),b
 15108  005132  0E9B               	movlw	155
 15109  005134                     u13557:
 15110  005134  2EE8               	decfsz	wreg,f,c
 15111  005136  D7FE               	bra	u13557
 15112  005138  2F80               	decfsz	??_L_I& (0+255),f,b
 15113  00513A  D7FC               	bra	u13557
 15114                           
 15115                           ;encoder_motor.c: 95: LATCbits.LATC5 = 0;
 15116  00513C  9A8B               	bcf	3979,5,c	;volatile
 15117                           
 15118                           ;encoder_motor.c: 96: _delay((unsigned long)((1)*(10000000/4000.0)));
 15119  00513E  0E04               	movlw	4
 15120  005140  0100               	movlb	0	; () banked
 15121  005142  6F80               	movwf	??_L_I& (0+255),b
 15122  005144  0E3D               	movlw	61
 15123  005146                     u13567:
 15124  005146  2EE8               	decfsz	wreg,f,c
 15125  005148  D7FE               	bra	u13567
 15126  00514A  2F80               	decfsz	??_L_I& (0+255),f,b
 15127  00514C  D7FC               	bra	u13567
 15128  00514E  D000               	nop2	
 15129                           
 15130                           ;encoder_motor.c: 97: LATCbits.LATC0 = 1;
 15131  005150  808B               	bsf	3979,0,c	;volatile
 15132                           
 15133                           ;encoder_motor.c: 98: LATCbits.LATC2 = 0;
 15134  005152  948B               	bcf	3979,2,c	;volatile
 15135                           
 15136                           ;encoder_motor.c: 99: _delay((unsigned long)((700)*(10000000/4000000.0)));
 15137  005154  0EFA               	movlw	250
 15138  005156                     u13577:
 15139  005156  D000               	nop2	
 15140  005158  D000               	nop2	
 15141  00515A  2EE8               	decfsz	wreg,f,c
 15142  00515C  D7FC               	bra	u13577
 15143  00515E  0012               	return		;funcret
 15144  005160                     __end_of_L_I:
 15145                           	opt callstack 0
 15146                           
 15147 ;; *************** function _clear_select *****************
 15148 ;; Defined at:
 15149 ;;		line 141 in file "display.c"
 15150 ;; Parameters:    Size  Location     Type
 15151 ;;		None
 15152 ;; Auto vars:     Size  Location     Type
 15153 ;;		None
 15154 ;; Return value:  Size  Location     Type
 15155 ;;                  1    wreg      void 
 15156 ;; Registers used:
 15157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15158 ;; Tracked objects:
 15159 ;;		On entry : 0/0
 15160 ;;		On exit  : 0/0
 15161 ;;		Unchanged: 0/0
 15162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15167 ;;Total ram usage:        0 bytes
 15168 ;; Hardware stack levels used:    1
 15169 ;; Hardware stack levels required when called:   13
 15170 ;; This function calls:
 15171 ;;		_lcdInst
 15172 ;;		_printf
 15173 ;; This function is called by:
 15174 ;;		_main
 15175 ;; This function uses a non-reentrant model
 15176 ;;
 15177                           
 15178                           	psect	text69
 15179  00536E                     __ptext69:
 15180                           	opt callstack 0
 15181  00536E                     _clear_select:
 15182                           	opt callstack 17
 15183                           
 15184                           ;display.c: 142: printf("Clear?");
 15185                           
 15186                           ;incstack = 0
 15187  00536E  0ED7               	movlw	low STR_34
 15188  005370  0100               	movlb	0	; () banked
 15189  005372  6F8E               	movwf	printf@f& (0+255),b
 15190  005374  0EFF               	movlw	high STR_34
 15191  005376  6F8F               	movwf	(printf@f+1)& (0+255),b
 15192  005378  EC81  F010         	call	_printf	;wreg free
 15193  00537C  0EC0               	movlw	192
 15194  00537E  EC9A  F02A         	call	_lcdInst
 15195                           
 15196                           ;display.c: 144: printf("C: confirm");
 15197  005382  0E0E               	movlw	low STR_35
 15198  005384  0100               	movlb	0	; () banked
 15199  005386  6F8E               	movwf	printf@f& (0+255),b
 15200  005388  0EFF               	movlw	high STR_35
 15201  00538A  6F8F               	movwf	(printf@f+1)& (0+255),b
 15202  00538C  EC81  F010         	call	_printf	;wreg free
 15203  005390  0012               	return		;funcret
 15204  005392                     __end_of_clear_select:
 15205                           	opt callstack 0
 15206                           
 15207 ;; *************** function _lcdInst *****************
 15208 ;; Defined at:
 15209 ;;		line 56 in file "lcd.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;  data            1    wreg     unsigned char 
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;  data            1    3[BANK0 ] unsigned char 
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, status,2, status,0, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15226 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15227 ;;Total ram usage:        1 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:   11
 15230 ;; This function calls:
 15231 ;;		_send_byte
 15232 ;; This function is called by:
 15233 ;;		_main
 15234 ;;		_completion_return
 15235 ;;		_initLCD
 15236 ;;		_hole_dispense_function
 15237 ;;		_ot
 15238 ;;		_Cones
 15239 ;;		_Holes2
 15240 ;;		_Cracks
 15241 ;;		_page5
 15242 ;;		_clear_select
 15243 ;;		_printintarray2
 15244 ;;		_page1
 15245 ;;		_page3
 15246 ;;		_page2
 15247 ;;		_page6
 15248 ;;		_page4
 15249 ;;		_data1
 15250 ;;		_data2
 15251 ;;		_data3
 15252 ;;		_data4
 15253 ;;		_initmoving_disp
 15254 ;;		_lcd_shift_cursor
 15255 ;;		_lcd_shift_display
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text70
 15260  005534                     __ptext70:
 15261                           	opt callstack 0
 15262  005534                     _lcdInst:
 15263                           	opt callstack 17
 15264                           
 15265                           ;incstack = 0
 15266                           ;lcdInst@data stored from wreg
 15267  005534  0100               	movlb	0	; () banked
 15268  005536  6F83               	movwf	lcdInst@data& (0+255),b
 15269                           
 15270                           ;lcd.c: 57: LATDbits.LATD2 = 0;
 15271  005538  948C               	bcf	3980,2,c	;volatile
 15272                           
 15273                           ;lcd.c: 58: send_byte(data);
 15274  00553A  0100               	movlb	0	; () banked
 15275  00553C  5183               	movf	lcdInst@data& (0+255),w,b
 15276  00553E  EC46  F02A         	call	_send_byte
 15277  005542  0012               	return		;funcret
 15278  005544                     __end_of_lcdInst:
 15279                           	opt callstack 0
 15280                           
 15281 ;; *************** function _clear_finish *****************
 15282 ;; Defined at:
 15283 ;;		line 147 in file "display.c"
 15284 ;; Parameters:    Size  Location     Type
 15285 ;;		None
 15286 ;; Auto vars:     Size  Location     Type
 15287 ;;		None
 15288 ;; Return value:  Size  Location     Type
 15289 ;;                  1    wreg      void 
 15290 ;; Registers used:
 15291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15292 ;; Tracked objects:
 15293 ;;		On entry : 0/0
 15294 ;;		On exit  : 0/0
 15295 ;;		Unchanged: 0/0
 15296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15301 ;;Total ram usage:        0 bytes
 15302 ;; Hardware stack levels used:    1
 15303 ;; Hardware stack levels required when called:   13
 15304 ;; This function calls:
 15305 ;;		_clear_mem
 15306 ;;		_printf
 15307 ;; This function is called by:
 15308 ;;		_main
 15309 ;; This function uses a non-reentrant model
 15310 ;;
 15311                           
 15312                           	psect	text71
 15313  0054FC                     __ptext71:
 15314                           	opt callstack 0
 15315  0054FC                     _clear_finish:
 15316                           	opt callstack 17
 15317                           
 15318                           ;display.c: 148: clear_mem();
 15319                           
 15320                           ;incstack = 0
 15321  0054FC  ECBD  F021         	call	_clear_mem	;wreg free
 15322                           
 15323                           ;display.c: 149: printf("History Cleared");
 15324  005500  0ECF               	movlw	low STR_36
 15325  005502  0100               	movlb	0	; () banked
 15326  005504  6F8E               	movwf	printf@f& (0+255),b
 15327  005506  0EFD               	movlw	high STR_36
 15328  005508  6F8F               	movwf	(printf@f+1)& (0+255),b
 15329  00550A  EC81  F010         	call	_printf	;wreg free
 15330  00550E  0012               	return		;funcret
 15331  005510                     __end_of_clear_finish:
 15332                           	opt callstack 0
 15333                           
 15334 ;; *************** function _printf *****************
 15335 ;; Defined at:
 15336 ;;		line 472 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 15337 ;; Parameters:    Size  Location     Type
 15338 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 15339 ;;		 -> STR_73(8), STR_72(16), STR_71(13), STR_70(12), 
 15340 ;;		 -> STR_69(9), STR_68(15), STR_67(13), STR_66(12), 
 15341 ;;		 -> STR_65(9), STR_64(15), STR_63(10), STR_62(9), 
 15342 ;;		 -> STR_61(15), STR_60(9), STR_59(14), STR_58(9), 
 15343 ;;		 -> STR_57(11), STR_56(17), STR_55(14), STR_54(9), 
 15344 ;;		 -> STR_53(10), STR_52(12), STR_51(9), STR_50(15), 
 15345 ;;		 -> STR_49(5), STR_48(15), STR_47(3), STR_46(5), 
 15346 ;;		 -> STR_45(10), STR_44(13), STR_43(18), STR_42(3), 
 15347 ;;		 -> STR_41(2), STR_40(3), STR_39(2), STR_38(17), 
 15348 ;;		 -> STR_37(14), STR_36(16), STR_35(11), STR_34(7), 
 15349 ;;		 -> STR_33(11), STR_32(11), STR_31(5), STR_30(3), 
 15350 ;;		 -> STR_29(10), STR_28(17), STR_27(3), STR_26(10), 
 15351 ;;		 -> STR_25(16), STR_24(3), STR_23(10), STR_22(16), 
 15352 ;;		 -> STR_21(9), STR_20(9), STR_19(10), STR_18(16), 
 15353 ;;		 -> STR_17(17), STR_16(13), STR_15(18), STR_14(10), 
 15354 ;;		 -> STR_13(7), STR_12(10), STR_11(7), STR_10(17), 
 15355 ;;		 -> STR_9(13), STR_8(18), STR_7(12), STR_6(13), 
 15356 ;;		 -> STR_5(6), STR_4(10), STR_3(15), STR_2(17), 
 15357 ;;		 -> STR_1(13), 
 15358 ;; Auto vars:     Size  Location     Type
 15359 ;;  tmpval          4    0        struct .
 15360 ;;  cp              3    0        PTR const unsigned char 
 15361 ;;  width           2   32[BANK0 ] int 
 15362 ;;  val             2   29[BANK0 ] unsigned int 
 15363 ;;  ap              2   26[BANK0 ] PTR void [1]
 15364 ;;		 -> ?_printf(2), 
 15365 ;;  len             2    0        unsigned int 
 15366 ;;  c               1   34[BANK0 ] unsigned char 
 15367 ;;  flag            1   31[BANK0 ] unsigned char 
 15368 ;;  prec            1   28[BANK0 ] char 
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  2   14[BANK0 ] int 
 15371 ;; Registers used:
 15372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15378 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15379 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15380 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15381 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15382 ;;Total ram usage:       21 bytes
 15383 ;; Hardware stack levels used:    1
 15384 ;; Hardware stack levels required when called:   12
 15385 ;; This function calls:
 15386 ;;		___lwdiv
 15387 ;;		___lwmod
 15388 ;;		___wmul
 15389 ;;		_isdigit
 15390 ;;		_putch
 15391 ;; This function is called by:
 15392 ;;		_main
 15393 ;;		_completion_return
 15394 ;;		_record
 15395 ;;		_hole_dispense_function
 15396 ;;		_completion_write
 15397 ;;		_ot
 15398 ;;		_Cones
 15399 ;;		_Holes2
 15400 ;;		_Cracks
 15401 ;;		_page5
 15402 ;;		_clear_select
 15403 ;;		_clear_finish
 15404 ;;		_printintarray2
 15405 ;;		_page1
 15406 ;;		_page3
 15407 ;;		_page2
 15408 ;;		_page6
 15409 ;;		_page4
 15410 ;;		_data1
 15411 ;;		_data2
 15412 ;;		_data3
 15413 ;;		_data4
 15414 ;;		_initmoving_disp
 15415 ;; This function uses a non-reentrant model
 15416 ;;
 15417                           
 15418                           	psect	text72
 15419  002102                     __ptext72:
 15420                           	opt callstack 0
 15421  002102                     _printf:
 15422                           	opt callstack 16
 15423                           
 15424                           ;doprnt.c: 474: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          16: signed char prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c
      +                          : 536: unsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c:
      +                           540: unsigned int val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;dop
      +                          rnt.c: 545: *ap = __va_start();
 15425                           
 15426                           ;incstack = 0
 15427  002102  0E90               	movlw	low (?_printf+2)
 15428  002104  0100               	movlb	0	; () banked
 15429  002106  6F9A               	movwf	printf@ap& (0+255),b
 15430  002108  0E00               	movlw	high (?_printf+2)
 15431  00210A  6F9B               	movwf	(printf@ap+1)& (0+255),b
 15432                           
 15433                           ;doprnt.c: 548: while((c = *f++)) {
 15434  00210C  D11A               	goto	u9750
 15435  00210E                     l9838:
 15436                           
 15437                           ; BSR set to: 0
 15438                           ;doprnt.c: 550: if(c != '%')
 15439  00210E  0E25               	movlw	37
 15440  002110  19A2               	xorwf	printf@c& (0+255),w,b
 15441  002112  B4D8               	btfsc	status,2,c
 15442  002114  D004               	goto	l9842
 15443                           
 15444                           ; BSR set to: 0
 15445                           ;doprnt.c: 552: {;doprnt.c: 553: (putch(c) );
 15446  002116  51A2               	movf	printf@c& (0+255),w,b
 15447  002118  ECA2  F02A         	call	_putch
 15448                           
 15449                           ;doprnt.c: 554: continue;
 15450  00211C  D112               	goto	u9750
 15451  00211E                     l9842:
 15452                           
 15453                           ; BSR set to: 0
 15454                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 15455  00211E  0E00               	movlw	0
 15456  002120  6FA1               	movwf	(printf@width+1)& (0+255),b
 15457  002122  0E00               	movlw	0
 15458  002124  6FA0               	movwf	printf@width& (0+255),b
 15459                           
 15460                           ;doprnt.c: 560: flag = 0;
 15461  002126  0E00               	movlw	0
 15462  002128  6F9F               	movwf	printf@flag& (0+255),b
 15463  00212A  D003               	goto	l9848
 15464  00212C                     l9844:
 15465                           
 15466                           ; BSR set to: 0
 15467                           ;doprnt.c: 592: flag |= 0x04;
 15468  00212C  859F               	bsf	printf@flag& (0+255),2,b
 15469                           
 15470                           ;doprnt.c: 593: f++;
 15471  00212E  4B8E               	infsnz	printf@f& (0+255),f,b
 15472  002130  2B8F               	incf	(printf@f+1)& (0+255),f,b
 15473  002132                     l9848:
 15474                           
 15475                           ; BSR set to: 0
 15476  002132  C08E  FFF6         	movff	printf@f,tblptrl
 15477  002136  C08F  FFF7         	movff	printf@f+1,tblptrh
 15478  00213A                     	if	0	;tblptru may be non-zero
 15479  00213A                     	endif
 15480  00213A                     	if	0	;tblptru may be non-zero
 15481  00213A                     	endif
 15482  00213A  0008               	tblrd		*
 15483  00213C  50F5               	movf	tablat,w,c
 15484                           
 15485                           ; Switch size 1, requested type "simple"
 15486                           ; Number of cases is 1, Range of values is 48 to 48
 15487                           ; switch strategies available:
 15488                           ; Name         Instructions Cycles
 15489                           ; simple_byte            4     3 (average)
 15490                           ;	Chosen strategy is simple_byte
 15491  00213E  0A30               	xorlw	48	; case 48
 15492  002140  B4D8               	btfsc	status,2,c
 15493  002142  D7F4               	goto	l9844
 15494                           
 15495                           ; BSR set to: 0
 15496                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 15497  002144  C08E  FFF6         	movff	printf@f,tblptrl
 15498  002148  C08F  FFF7         	movff	printf@f+1,tblptrh
 15499  00214C                     	if	0	;tblptru may be non-zero
 15500  00214C                     	endif
 15501  00214C                     	if	0	;tblptru may be non-zero
 15502  00214C                     	endif
 15503  00214C  0008               	tblrd		*
 15504  00214E  50F5               	movf	tablat,w,c
 15505  002150  ECED  F029         	call	_isdigit
 15506  002154  A0D8               	btfss	status,0,c
 15507  002156  D035               	goto	u9610
 15508                           
 15509                           ;doprnt.c: 610: width = 0;
 15510  002158  0E00               	movlw	0
 15511  00215A  0100               	movlb	0	; () banked
 15512  00215C  6FA1               	movwf	(printf@width+1)& (0+255),b
 15513  00215E  0E00               	movlw	0
 15514  002160  6FA0               	movwf	printf@width& (0+255),b
 15515  002162                     l9854:
 15516                           
 15517                           ;doprnt.c: 612: width *= 10;
 15518  002162  C0A0  F088         	movff	printf@width,___wmul@multiplier
 15519  002166  C0A1  F089         	movff	printf@width+1,___wmul@multiplier+1
 15520  00216A  0E00               	movlw	0
 15521  00216C  0100               	movlb	0	; () banked
 15522  00216E  6F8B               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15523  002170  0E0A               	movlw	10
 15524  002172  6F8A               	movwf	___wmul@multiplicand& (0+255),b
 15525  002174  EC59  F029         	call	___wmul	;wreg free
 15526  002178  C088  F0A0         	movff	?___wmul,printf@width
 15527  00217C  C089  F0A1         	movff	?___wmul+1,printf@width+1
 15528                           
 15529                           ;doprnt.c: 613: width += *f++ - '0';
 15530  002180  0ED0               	movlw	208
 15531  002182  0100               	movlb	0	; () banked
 15532  002184  6F96               	movwf	??_printf& (0+255),b
 15533  002186  0EFF               	movlw	255
 15534  002188  6F97               	movwf	(??_printf+1)& (0+255),b
 15535  00218A  C08E  FFF6         	movff	printf@f,tblptrl
 15536  00218E  C08F  FFF7         	movff	printf@f+1,tblptrh
 15537  002192                     	if	0	;tblptru may be non-zero
 15538  002192                     	endif
 15539  002192                     	if	0	;tblptru may be non-zero
 15540  002192                     	endif
 15541  002192  0008               	tblrd		*
 15542  002194  50F5               	movf	tablat,w,c
 15543  002196  6F98               	movwf	(??_printf+2)& (0+255),b
 15544  002198  6B99               	clrf	(??_printf+3)& (0+255),b
 15545  00219A  5196               	movf	??_printf& (0+255),w,b
 15546  00219C  2798               	addwf	(??_printf+2)& (0+255),f,b
 15547  00219E  5197               	movf	(??_printf+1)& (0+255),w,b
 15548  0021A0  2399               	addwfc	(??_printf+3)& (0+255),f,b
 15549  0021A2  5198               	movf	(??_printf+2)& (0+255),w,b
 15550  0021A4  27A0               	addwf	printf@width& (0+255),f,b
 15551  0021A6  5199               	movf	(??_printf+3)& (0+255),w,b
 15552  0021A8  23A1               	addwfc	(printf@width+1)& (0+255),f,b
 15553                           
 15554                           ; BSR set to: 0
 15555  0021AA  4B8E               	infsnz	printf@f& (0+255),f,b
 15556  0021AC  2B8F               	incf	(printf@f+1)& (0+255),f,b
 15557                           
 15558                           ; BSR set to: 0
 15559                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 15560  0021AE  C08E  FFF6         	movff	printf@f,tblptrl
 15561  0021B2  C08F  FFF7         	movff	printf@f+1,tblptrh
 15562  0021B6                     	if	0	;tblptru may be non-zero
 15563  0021B6                     	endif
 15564  0021B6                     	if	0	;tblptru may be non-zero
 15565  0021B6                     	endif
 15566  0021B6  0008               	tblrd		*
 15567  0021B8  50F5               	movf	tablat,w,c
 15568  0021BA  ECED  F029         	call	_isdigit
 15569  0021BE  B0D8               	btfsc	status,0,c
 15570  0021C0  D7D0               	goto	l9854
 15571  0021C2                     u9610:
 15572  0021C2  C08E  FFF6         	movff	printf@f,tblptrl
 15573  0021C6  C08F  FFF7         	movff	printf@f+1,tblptrh
 15574  0021CA  0100               	movlb	0	; () banked
 15575  0021CC  4B8E               	infsnz	printf@f& (0+255),f,b
 15576  0021CE  2B8F               	incf	(printf@f+1)& (0+255),f,b
 15577  0021D0                     	if	0	;tblptru may be non-zero
 15578  0021D0                     	endif
 15579  0021D0                     	if	0	;tblptru may be non-zero
 15580  0021D0                     	endif
 15581  0021D0  0008               	tblrd		*
 15582  0021D2  CFF5 F0A2          	movff	tablat,printf@c
 15583  0021D6  51A2               	movf	printf@c& (0+255),w,b
 15584                           
 15585                           ; Switch size 1, requested type "simple"
 15586                           ; Number of cases is 3, Range of values is 0 to 105
 15587                           ; switch strategies available:
 15588                           ; Name         Instructions Cycles
 15589                           ; simple_byte           10     6 (average)
 15590                           ;	Chosen strategy is simple_byte
 15591  0021D8  0A00               	xorlw	0	; case 0
 15592  0021DA  B4D8               	btfsc	status,2,c
 15593  0021DC  0012               	return	
 15594  0021DE  0A64               	xorlw	100	; case 100
 15595  0021E0  B4D8               	btfsc	status,2,c
 15596  0021E2  D003               	goto	l9866
 15597  0021E4  0A0D               	xorlw	13	; case 105
 15598  0021E6  A4D8               	btfss	status,2,c
 15599  0021E8  D0AC               	goto	u9750
 15600  0021EA                     l9866:
 15601                           
 15602                           ; BSR set to: 0
 15603                           ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 15604  0021EA  C09A  FFD9         	movff	printf@ap,fsr2l
 15605  0021EE  C09B  FFDA         	movff	printf@ap+1,fsr2h
 15606  0021F2  CFDE F09D          	movff	postinc2,printf@val
 15607  0021F6  CFDD F09E          	movff	postdec2,printf@val+1
 15608                           
 15609                           ; BSR set to: 0
 15610  0021FA  0E02               	movlw	2
 15611  0021FC  279A               	addwf	printf@ap& (0+255),f,b
 15612  0021FE  0E00               	movlw	0
 15613  002200  239B               	addwfc	(printf@ap+1)& (0+255),f,b
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;doprnt.c: 1280: if((int)val < 0) {
 15617  002202  AF9E               	btfss	(printf@val+1)& (0+255),7,b
 15618  002204  D006               	goto	l9876
 15619                           
 15620                           ; BSR set to: 0
 15621                           ;doprnt.c: 1281: flag |= 0x03;
 15622  002206  0E03               	movlw	3
 15623  002208  139F               	iorwf	printf@flag& (0+255),f,b
 15624                           
 15625                           ; BSR set to: 0
 15626                           ;doprnt.c: 1282: val = -val;
 15627  00220A  6D9D               	negf	printf@val& (0+255),b
 15628  00220C  1F9E               	comf	(printf@val+1)& (0+255),f,b
 15629  00220E  B0D8               	btfsc	status,0,c
 15630  002210  2B9E               	incf	(printf@val+1)& (0+255),f,b
 15631  002212                     l9876:
 15632                           
 15633                           ; BSR set to: 0
 15634                           ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 15635  002212  0E01               	movlw	1
 15636  002214  6FA2               	movwf	printf@c& (0+255),b
 15637  002216                     l9882:
 15638                           
 15639                           ; BSR set to: 0
 15640                           ;doprnt.c: 1325: if(val < dpowers[c])
 15641  002216  51A2               	movf	printf@c& (0+255),w,b
 15642  002218  0D02               	mullw	2
 15643  00221A  0E1E               	movlw	low _dpowers
 15644  00221C  24F3               	addwf	prodl,w,c
 15645  00221E  6EF6               	movwf	tblptrl,c
 15646  002220  0EFD               	movlw	high _dpowers
 15647  002222  20F4               	addwfc	prodh,w,c
 15648  002224  6EF7               	movwf	tblptrh,c
 15649  002226                     	if	0	;There are less than 3 active tblptr bytes
 15650  002226                     	endif
 15651  002226  0009               	tblrd		*+
 15652  002228  50F5               	movf	tablat,w,c
 15653  00222A  5D9D               	subwf	printf@val& (0+255),w,b
 15654  00222C  0009               	tblrd		*+
 15655  00222E  50F5               	movf	tablat,w,c
 15656  002230  599E               	subwfb	(printf@val+1)& (0+255),w,b
 15657  002232  A0D8               	btfss	status,0,c
 15658  002234  D005               	goto	u9640
 15659                           
 15660                           ; BSR set to: 0
 15661  002236  2BA2               	incf	printf@c& (0+255),f,b
 15662                           
 15663                           ; BSR set to: 0
 15664  002238  0E05               	movlw	5
 15665  00223A  19A2               	xorwf	printf@c& (0+255),w,b
 15666  00223C  A4D8               	btfss	status,2,c
 15667  00223E  D7EB               	goto	l9882
 15668  002240                     u9640:
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;doprnt.c: 1364: if(width && flag & 0x03)
 15672  002240  51A0               	movf	printf@width& (0+255),w,b
 15673  002242  11A1               	iorwf	(printf@width+1)& (0+255),w,b
 15674  002244  B4D8               	btfsc	status,2,c
 15675  002246  D009               	goto	l9896
 15676                           
 15677                           ; BSR set to: 0
 15678  002248  C09F  F096         	movff	printf@flag,??_printf
 15679  00224C  0E03               	movlw	3
 15680  00224E  1796               	andwf	??_printf& (0+255),f,b
 15681  002250  B4D8               	btfsc	status,2,c
 15682  002252  D003               	goto	l9896
 15683                           
 15684                           ; BSR set to: 0
 15685                           ;doprnt.c: 1365: width--;
 15686  002254  07A0               	decf	printf@width& (0+255),f,b
 15687  002256  A0D8               	btfss	status,0,c
 15688  002258  07A1               	decf	(printf@width+1)& (0+255),f,b
 15689  00225A                     l9896:
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;doprnt.c: 1400: if(width > c)
 15693  00225A  51A2               	movf	printf@c& (0+255),w,b
 15694  00225C  6F96               	movwf	??_printf& (0+255),b
 15695  00225E  6B97               	clrf	(??_printf+1)& (0+255),b
 15696  002260  51A0               	movf	printf@width& (0+255),w,b
 15697  002262  5D96               	subwf	??_printf& (0+255),w,b
 15698  002264  5197               	movf	(??_printf+1)& (0+255),w,b
 15699  002266  0A80               	xorlw	128
 15700  002268  6F98               	movwf	(??_printf+2)& (0+255),b
 15701  00226A  51A1               	movf	(printf@width+1)& (0+255),w,b
 15702  00226C  0A80               	xorlw	128
 15703  00226E  5998               	subwfb	(??_printf+2)& (0+255),w,b
 15704  002270  B0D8               	btfsc	status,0,c
 15705  002272  D005               	goto	l9900
 15706                           
 15707                           ; BSR set to: 0
 15708                           ;doprnt.c: 1401: width -= c;
 15709  002274  51A2               	movf	printf@c& (0+255),w,b
 15710  002276  5FA0               	subwf	printf@width& (0+255),f,b
 15711  002278  0E00               	movlw	0
 15712  00227A  5BA1               	subwfb	(printf@width+1)& (0+255),f,b
 15713  00227C  D004               	goto	l9902
 15714  00227E                     l9900:
 15715                           
 15716                           ; BSR set to: 0
 15717                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 15718  00227E  0E00               	movlw	0
 15719  002280  6FA1               	movwf	(printf@width+1)& (0+255),b
 15720  002282  0E00               	movlw	0
 15721  002284  6FA0               	movwf	printf@width& (0+255),b
 15722  002286                     l9902:
 15723                           
 15724                           ; BSR set to: 0
 15725                           ;doprnt.c: 1406: if(flag & 0x04) {
 15726  002286  A59F               	btfss	printf@flag& (0+255),2,b
 15727  002288  D016               	goto	l9914
 15728                           
 15729                           ; BSR set to: 0
 15730                           ;doprnt.c: 1411: if(flag & 0x03)
 15731  00228A  C09F  F096         	movff	printf@flag,??_printf
 15732  00228E  0E03               	movlw	3
 15733  002290  1796               	andwf	??_printf& (0+255),f,b
 15734  002292  B4D8               	btfsc	status,2,c
 15735  002294  D003               	goto	l9908
 15736                           
 15737                           ; BSR set to: 0
 15738                           ;doprnt.c: 1412: (putch('-') );
 15739  002296  0E2D               	movlw	45
 15740  002298  ECA2  F02A         	call	_putch
 15741  00229C                     l9908:
 15742                           
 15743                           ;doprnt.c: 1434: if(width)
 15744  00229C  0100               	movlb	0	; () banked
 15745  00229E  51A0               	movf	printf@width& (0+255),w,b
 15746  0022A0  11A1               	iorwf	(printf@width+1)& (0+255),w,b
 15747  0022A2  B4D8               	btfsc	status,2,c
 15748  0022A4  D020               	goto	l9924
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;doprnt.c: 1436: (putch('0') );
 15752  0022A6  0E30               	movlw	48
 15753  0022A8  ECA2  F02A         	call	_putch
 15754                           
 15755                           ;doprnt.c: 1437: while(--width);
 15756  0022AC  0100               	movlb	0	; () banked
 15757  0022AE  07A0               	decf	printf@width& (0+255),f,b
 15758  0022B0  A0D8               	btfss	status,0,c
 15759  0022B2  07A1               	decf	(printf@width+1)& (0+255),f,b
 15760  0022B4  D7F4               	goto	L26
 15761  0022B6                     l9914:
 15762                           
 15763                           ; BSR set to: 0
 15764                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 15765  0022B6  51A0               	movf	printf@width& (0+255),w,b
 15766  0022B8  11A1               	iorwf	(printf@width+1)& (0+255),w,b
 15767  0022BA  B4D8               	btfsc	status,2,c
 15768  0022BC  D00B               	goto	u9730
 15769  0022BE                     u9720:
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;doprnt.c: 1449: (putch(' ') );
 15773  0022BE  0E20               	movlw	32
 15774  0022C0  ECA2  F02A         	call	_putch
 15775                           
 15776                           ;doprnt.c: 1450: while(--width);
 15777  0022C4  0100               	movlb	0	; () banked
 15778  0022C6  07A0               	decf	printf@width& (0+255),f,b
 15779  0022C8  A0D8               	btfss	status,0,c
 15780  0022CA  07A1               	decf	(printf@width+1)& (0+255),f,b
 15781  0022CC  51A0               	movf	printf@width& (0+255),w,b
 15782  0022CE  11A1               	iorwf	(printf@width+1)& (0+255),w,b
 15783  0022D0  A4D8               	btfss	status,2,c
 15784  0022D2  D7F5               	goto	u9720
 15785  0022D4                     u9730:
 15786                           
 15787                           ; BSR set to: 0
 15788                           ;doprnt.c: 1457: if(flag & 0x03)
 15789  0022D4  C09F  F096         	movff	printf@flag,??_printf
 15790  0022D8  0E03               	movlw	3
 15791  0022DA  1796               	andwf	??_printf& (0+255),f,b
 15792  0022DC  B4D8               	btfsc	status,2,c
 15793  0022DE  D003               	goto	l9924
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;doprnt.c: 1458: (putch('-') );
 15797  0022E0  0E2D               	movlw	45
 15798  0022E2  ECA2  F02A         	call	_putch
 15799  0022E6                     l9924:
 15800                           
 15801                           ;doprnt.c: 1488: };doprnt.c: 1491: prec = c;
 15802  0022E6  C0A2  F09C         	movff	printf@c,printf@prec
 15803                           
 15804                           ;doprnt.c: 1493: while(prec--) {
 15805  0022EA  D026               	goto	l9930
 15806  0022EC                     l9926:
 15807                           
 15808                           ; BSR set to: 0
 15809                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 15810  0022EC  519C               	movf	printf@prec& (0+255),w,b
 15811  0022EE  0D02               	mullw	2
 15812  0022F0  0E1E               	movlw	low _dpowers
 15813  0022F2  24F3               	addwf	prodl,w,c
 15814  0022F4  6EF6               	movwf	tblptrl,c
 15815  0022F6  0EFD               	movlw	high _dpowers
 15816  0022F8  20F4               	addwfc	prodh,w,c
 15817  0022FA  6EF7               	movwf	tblptrh,c
 15818  0022FC                     	if	0	;There are less than 3 active tblptr bytes
 15819  0022FC                     	endif
 15820  0022FC  0009               	tblrd		*+
 15821  0022FE  CFF5 F082          	movff	tablat,___lwdiv@divisor
 15822  002302  000A               	tblrd		*-
 15823  002304  CFF5 F083          	movff	tablat,___lwdiv@divisor+1
 15824  002308  C09D  F080         	movff	printf@val,___lwdiv@dividend
 15825  00230C  C09E  F081         	movff	printf@val+1,___lwdiv@dividend+1
 15826  002310  EC76  F026         	call	___lwdiv	;wreg free
 15827  002314  C080  F087         	movff	?___lwdiv,___lwmod@dividend
 15828  002318  C081  F088         	movff	?___lwdiv+1,___lwmod@dividend+1
 15829  00231C  0E00               	movlw	0
 15830  00231E  0100               	movlb	0	; () banked
 15831  002320  6F8A               	movwf	(___lwmod@divisor+1)& (0+255),b
 15832  002322  0E0A               	movlw	10
 15833  002324  6F89               	movwf	___lwmod@divisor& (0+255),b
 15834  002326  EC4D  F028         	call	___lwmod	;wreg free
 15835  00232A  0100               	movlb	0	; () banked
 15836  00232C  5187               	movf	?___lwmod& (0+255),w,b
 15837  00232E  0F30               	addlw	48
 15838  002330  6FA2               	movwf	printf@c& (0+255),b
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;doprnt.c: 1542: };doprnt.c: 1543: (putch(c) );
 15842  002332  51A2               	movf	printf@c& (0+255),w,b
 15843  002334  ECA2  F02A         	call	_putch
 15844  002338                     l9930:
 15845  002338  0100               	movlb	0	; () banked
 15846  00233A  079C               	decf	printf@prec& (0+255),f,b
 15847  00233C  299C               	incf	printf@prec& (0+255),w,b
 15848  00233E  A4D8               	btfss	status,2,c
 15849  002340  D7D5               	goto	l9926
 15850  002342                     u9750:
 15851  002342  C08E  FFF6         	movff	printf@f,tblptrl
 15852  002346  C08F  FFF7         	movff	printf@f+1,tblptrh
 15853  00234A  0100               	movlb	0	; () banked
 15854  00234C  4B8E               	infsnz	printf@f& (0+255),f,b
 15855  00234E  2B8F               	incf	(printf@f+1)& (0+255),f,b
 15856  002350                     	if	0	;tblptru may be non-zero
 15857  002350                     	endif
 15858  002350                     	if	0	;tblptru may be non-zero
 15859  002350                     	endif
 15860  002350  0008               	tblrd		*
 15861  002352  CFF5 F0A2          	movff	tablat,printf@c
 15862  002356  51A2               	movf	printf@c& (0+255),w,b
 15863  002358  B4D8               	btfsc	status,2,c
 15864  00235A  0012               	return	
 15865  00235C  D6D8               	goto	l9838
 15866  00235E                     __end_of_printf:
 15867                           	opt callstack 0
 15868                           
 15869 ;; *************** function _putch *****************
 15870 ;; Defined at:
 15871 ;;		line 94 in file "lcd.c"
 15872 ;; Parameters:    Size  Location     Type
 15873 ;;  data            1    wreg     unsigned char 
 15874 ;; Auto vars:     Size  Location     Type
 15875 ;;  data            1    3[BANK0 ] unsigned char 
 15876 ;; Return value:  Size  Location     Type
 15877 ;;                  1    wreg      void 
 15878 ;; Registers used:
 15879 ;;		wreg, status,2, status,0, cstack
 15880 ;; Tracked objects:
 15881 ;;		On entry : 0/0
 15882 ;;		On exit  : 0/0
 15883 ;;		Unchanged: 0/0
 15884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15889 ;;Total ram usage:        1 bytes
 15890 ;; Hardware stack levels used:    1
 15891 ;; Hardware stack levels required when called:   11
 15892 ;; This function calls:
 15893 ;;		_send_byte
 15894 ;; This function is called by:
 15895 ;;		_printf
 15896 ;; This function uses a non-reentrant model
 15897 ;;
 15898                           
 15899                           	psect	text73
 15900  005544                     __ptext73:
 15901                           	opt callstack 0
 15902  005544                     _putch:
 15903                           	opt callstack 16
 15904                           
 15905                           ; BSR set to: 0
 15906                           ;incstack = 0
 15907                           ;putch@data stored from wreg
 15908  005544  0100               	movlb	0	; () banked
 15909  005546  6F83               	movwf	putch@data& (0+255),b
 15910                           
 15911                           ;lcd.c: 95: LATDbits.LATD2 = 1;
 15912  005548  848C               	bsf	3980,2,c	;volatile
 15913                           
 15914                           ;lcd.c: 96: send_byte((unsigned char)data);
 15915  00554A  0100               	movlb	0	; () banked
 15916  00554C  5183               	movf	putch@data& (0+255),w,b
 15917  00554E  EC46  F02A         	call	_send_byte
 15918  005552  0012               	return		;funcret
 15919  005554                     __end_of_putch:
 15920                           	opt callstack 0
 15921                           
 15922 ;; *************** function _send_byte *****************
 15923 ;; Defined at:
 15924 ;;		line 47 in file "lcd.c"
 15925 ;; Parameters:    Size  Location     Type
 15926 ;;  data            1    wreg     unsigned char 
 15927 ;; Auto vars:     Size  Location     Type
 15928 ;;  data            1    2[BANK0 ] unsigned char 
 15929 ;; Return value:  Size  Location     Type
 15930 ;;                  1    wreg      void 
 15931 ;; Registers used:
 15932 ;;		wreg, status,2, status,0, cstack
 15933 ;; Tracked objects:
 15934 ;;		On entry : 0/0
 15935 ;;		On exit  : 0/0
 15936 ;;		Unchanged: 0/0
 15937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15939 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15941 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15942 ;;Total ram usage:        1 bytes
 15943 ;; Hardware stack levels used:    1
 15944 ;; Hardware stack levels required when called:   10
 15945 ;; This function calls:
 15946 ;;		_send_nibble
 15947 ;; This function is called by:
 15948 ;;		_lcdInst
 15949 ;;		_initLCD
 15950 ;;		_putch
 15951 ;; This function uses a non-reentrant model
 15952 ;;
 15953                           
 15954                           	psect	text74
 15955  00548C                     __ptext74:
 15956                           	opt callstack 0
 15957  00548C                     _send_byte:
 15958                           	opt callstack 16
 15959                           
 15960                           ;incstack = 0
 15961                           ;send_byte@data stored from wreg
 15962  00548C  0100               	movlb	0	; () banked
 15963  00548E  6F82               	movwf	send_byte@data& (0+255),b
 15964                           
 15965                           ;lcd.c: 49: send_nibble(data >> 4);
 15966  005490  0100               	movlb	0	; () banked
 15967  005492  3982               	swapf	send_byte@data& (0+255),w,b
 15968  005494  0B0F               	andlw	15
 15969  005496  EC39  F02A         	call	_send_nibble
 15970                           
 15971                           ;lcd.c: 52: send_nibble(data);
 15972  00549A  0100               	movlb	0	; () banked
 15973  00549C  5182               	movf	send_byte@data& (0+255),w,b
 15974  00549E  EC39  F02A         	call	_send_nibble
 15975  0054A2  0012               	return		;funcret
 15976  0054A4                     __end_of_send_byte:
 15977                           	opt callstack 0
 15978                           
 15979 ;; *************** function _send_nibble *****************
 15980 ;; Defined at:
 15981 ;;		line 36 in file "lcd.c"
 15982 ;; Parameters:    Size  Location     Type
 15983 ;;  data            1    wreg     unsigned char 
 15984 ;; Auto vars:     Size  Location     Type
 15985 ;;  data            1    1[BANK0 ] unsigned char 
 15986 ;; Return value:  Size  Location     Type
 15987 ;;                  1    wreg      void 
 15988 ;; Registers used:
 15989 ;;		wreg, status,2, status,0, cstack
 15990 ;; Tracked objects:
 15991 ;;		On entry : 0/0
 15992 ;;		On exit  : 0/0
 15993 ;;		Unchanged: 0/0
 15994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15999 ;;Total ram usage:        1 bytes
 16000 ;; Hardware stack levels used:    1
 16001 ;; Hardware stack levels required when called:    9
 16002 ;; This function calls:
 16003 ;;		_pulse_e
 16004 ;; This function is called by:
 16005 ;;		_send_byte
 16006 ;;		_initLCD
 16007 ;; This function uses a non-reentrant model
 16008 ;;
 16009                           
 16010                           	psect	text75
 16011  005472                     __ptext75:
 16012                           	opt callstack 0
 16013  005472                     _send_nibble:
 16014                           	opt callstack 16
 16015                           
 16016                           ;incstack = 0
 16017                           ;send_nibble@data stored from wreg
 16018  005472  0100               	movlb	0	; () banked
 16019  005474  6F81               	movwf	send_nibble@data& (0+255),b
 16020                           
 16021                           ;lcd.c: 38: LATD = (unsigned char)(LATD & 0x0F);
 16022  005476  508C               	movf	3980,w,c	;volatile
 16023  005478  0B0F               	andlw	15
 16024  00547A  6E8C               	movwf	3980,c	;volatile
 16025                           
 16026                           ;lcd.c: 39: LATD = (unsigned char)((data << 4) | LATD);
 16027  00547C  0100               	movlb	0	; () banked
 16028  00547E  3981               	swapf	send_nibble@data& (0+255),w,b
 16029  005480  0BF0               	andlw	240
 16030  005482  108C               	iorwf	3980,w,c	;volatile
 16031  005484  6E8C               	movwf	3980,c	;volatile
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;lcd.c: 40: pulse_e();
 16035  005486  EC04  F029         	call	_pulse_e	;wreg free
 16036  00548A  0012               	return		;funcret
 16037  00548C                     __end_of_send_nibble:
 16038                           	opt callstack 0
 16039                           
 16040 ;; *************** function _pulse_e *****************
 16041 ;; Defined at:
 16042 ;;		line 20 in file "lcd.c"
 16043 ;; Parameters:    Size  Location     Type
 16044 ;;		None
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;  interruptSta    1    0[BANK0 ] unsigned char 
 16047 ;; Return value:  Size  Location     Type
 16048 ;;                  1    wreg      void 
 16049 ;; Registers used:
 16050 ;;		wreg
 16051 ;; Tracked objects:
 16052 ;;		On entry : 0/0
 16053 ;;		On exit  : 0/0
 16054 ;;		Unchanged: 0/0
 16055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16057 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16059 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16060 ;;Total ram usage:        1 bytes
 16061 ;; Hardware stack levels used:    1
 16062 ;; Hardware stack levels required when called:    8
 16063 ;; This function calls:
 16064 ;;		Nothing
 16065 ;; This function is called by:
 16066 ;;		_send_nibble
 16067 ;; This function uses a non-reentrant model
 16068 ;;
 16069                           
 16070                           	psect	text76
 16071  005208                     __ptext76:
 16072                           	opt callstack 0
 16073  005208                     _pulse_e:
 16074                           	opt callstack 16
 16075                           
 16076                           ;lcd.c: 21: unsigned char interruptState = INTCONbits.GIE;
 16077                           
 16078                           ;incstack = 0
 16079  005208  0E00               	movlw	0
 16080  00520A  BEF2               	btfsc	4082,7,c	;volatile
 16081  00520C  0E01               	movlw	1
 16082  00520E  0100               	movlb	0	; () banked
 16083  005210  6F80               	movwf	pulse_e@interruptState& (0+255),b
 16084                           
 16085                           ; BSR set to: 0
 16086                           ;lcd.c: 22: (INTCONbits.GIE = 0);
 16087  005212  9EF2               	bcf	4082,7,c	;volatile
 16088                           
 16089                           ; BSR set to: 0
 16090                           ;lcd.c: 23: LATDbits.LATD3 = 1;
 16091  005214  868C               	bsf	3980,3,c	;volatile
 16092                           
 16093                           ;lcd.c: 26: _delay((unsigned long)((25)*(10000000/4000000.0)));
 16094  005216  0E14               	movlw	20
 16095  005218                     u13587:
 16096  005218  2EE8               	decfsz	wreg,f,c
 16097  00521A  D7FE               	bra	u13587
 16098  00521C  D000               	nop2	
 16099                           
 16100                           ;lcd.c: 27: LATDbits.LATD3 = 0;
 16101  00521E  968C               	bcf	3980,3,c	;volatile
 16102                           
 16103                           ;lcd.c: 28: _delay((unsigned long)((100)*(10000000/4000000.0)));
 16104  005220  0E53               	movlw	83
 16105  005222                     u13597:
 16106  005222  2EE8               	decfsz	wreg,f,c
 16107  005224  D7FE               	bra	u13597
 16108  005226  F000               	nop	
 16109                           
 16110                           ;lcd.c: 29: INTCONbits.GIE = interruptState;
 16111  005228  0100               	movlb	0	; () banked
 16112  00522A  B180               	btfsc	pulse_e@interruptState& (0+255),0,b
 16113  00522C  D002               	bra	u9455
 16114  00522E  9EF2               	bcf	4082,7,c	;volatile
 16115  005230  D001               	bra	u9456
 16116  005232                     u9455:
 16117  005232  8EF2               	bsf	4082,7,c	;volatile
 16118  005234                     u9456:
 16119  005234  0012               	return		;funcret
 16120  005236                     __end_of_pulse_e:
 16121                           	opt callstack 0
 16122                           
 16123 ;; *************** function _isdigit *****************
 16124 ;; Defined at:
 16125 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 16126 ;; Parameters:    Size  Location     Type
 16127 ;;  c               1    wreg     unsigned char 
 16128 ;; Auto vars:     Size  Location     Type
 16129 ;;  c               1    2[BANK0 ] unsigned char 
 16130 ;; Return value:  Size  Location     Type
 16131 ;;		None               void
 16132 ;; Registers used:
 16133 ;;		wreg, status,2, status,0
 16134 ;; Tracked objects:
 16135 ;;		On entry : 0/0
 16136 ;;		On exit  : 0/0
 16137 ;;		Unchanged: 0/0
 16138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16141 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16142 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16143 ;;Total ram usage:        3 bytes
 16144 ;; Hardware stack levels used:    1
 16145 ;; Hardware stack levels required when called:    8
 16146 ;; This function calls:
 16147 ;;		Nothing
 16148 ;; This function is called by:
 16149 ;;		_printf
 16150 ;; This function uses a non-reentrant model
 16151 ;;
 16152                           
 16153                           	psect	text77
 16154  0053DA                     __ptext77:
 16155                           	opt callstack 0
 16156  0053DA                     _isdigit:
 16157                           	opt callstack 19
 16158                           
 16159                           ;incstack = 0
 16160                           ;isdigit@c stored from wreg
 16161  0053DA  0100               	movlb	0	; () banked
 16162  0053DC  6F82               	movwf	isdigit@c& (0+255),b
 16163  0053DE  0E00               	movlw	0
 16164  0053E0  0100               	movlb	0	; () banked
 16165  0053E2  6F81               	movwf	_isdigit$2496& (0+255),b
 16166                           
 16167                           ; BSR set to: 0
 16168  0053E4  0E3A               	movlw	58
 16169  0053E6  6182               	cpfslt	isdigit@c& (0+255),b
 16170  0053E8  D005               	goto	l9762
 16171                           
 16172                           ; BSR set to: 0
 16173  0053EA  0E2F               	movlw	47
 16174  0053EC  6582               	cpfsgt	isdigit@c& (0+255),b
 16175  0053EE  D002               	goto	l9762
 16176                           
 16177                           ; BSR set to: 0
 16178  0053F0  0E01               	movlw	1
 16179  0053F2  6F81               	movwf	_isdigit$2496& (0+255),b
 16180  0053F4                     l9762:
 16181                           
 16182                           ; BSR set to: 0
 16183  0053F4  C081  F080         	movff	_isdigit$2496,??_isdigit
 16184  0053F8  3180               	rrcf	??_isdigit& (0+255),w,b
 16185                           
 16186                           ; BSR set to: 0
 16187  0053FA  0012               	return		;funcret
 16188  0053FC                     __end_of_isdigit:
 16189                           	opt callstack 0
 16190                           
 16191 ;; *************** function ___wmul *****************
 16192 ;; Defined at:
 16193 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 16194 ;; Parameters:    Size  Location     Type
 16195 ;;  multiplier      2    8[BANK0 ] unsigned int 
 16196 ;;  multiplicand    2   10[BANK0 ] unsigned int 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  product         2   12[BANK0 ] unsigned int 
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  2    8[BANK0 ] unsigned int 
 16201 ;; Registers used:
 16202 ;;		wreg, status,2, status,0, prodl, prodh
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16208 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16211 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16212 ;;Total ram usage:        6 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:    8
 16215 ;; This function calls:
 16216 ;;		Nothing
 16217 ;; This function is called by:
 16218 ;;		_main
 16219 ;;		_normal_updater
 16220 ;;		_completion_return
 16221 ;;		_printf
 16222 ;; This function uses a non-reentrant model
 16223 ;;
 16224                           
 16225                           	psect	text78
 16226  0052B2                     __ptext78:
 16227                           	opt callstack 0
 16228  0052B2                     ___wmul:
 16229                           	opt callstack 19
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;incstack = 0
 16233  0052B2  0100               	movlb	0	; () banked
 16234  0052B4  5188               	movf	___wmul@multiplier& (0+255),w,b
 16235  0052B6  038A               	mulwf	___wmul@multiplicand& (0+255),b
 16236  0052B8  CFF3 F08C          	movff	prodl,___wmul@product
 16237  0052BC  CFF4 F08D          	movff	prodh,___wmul@product+1
 16238  0052C0  5188               	movf	___wmul@multiplier& (0+255),w,b
 16239  0052C2  038B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 16240  0052C4  50F3               	movf	prodl,w,c
 16241  0052C6  278D               	addwf	(___wmul@product+1)& (0+255),f,b
 16242  0052C8  5189               	movf	(___wmul@multiplier+1)& (0+255),w,b
 16243  0052CA  038A               	mulwf	___wmul@multiplicand& (0+255),b
 16244  0052CC  50F3               	movf	prodl,w,c
 16245  0052CE  278D               	addwf	(___wmul@product+1)& (0+255),f,b
 16246                           
 16247                           ; BSR set to: 0
 16248  0052D0  C08C  F088         	movff	___wmul@product,?___wmul
 16249  0052D4  C08D  F089         	movff	___wmul@product+1,?___wmul+1
 16250                           
 16251                           ; BSR set to: 0
 16252  0052D8  0012               	return		;funcret
 16253  0052DA                     __end_of___wmul:
 16254                           	opt callstack 0
 16255                           
 16256 ;; *************** function ___lwmod *****************
 16257 ;; Defined at:
 16258 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;  dividend        2    7[BANK0 ] unsigned int 
 16261 ;;  divisor         2    9[BANK0 ] unsigned int 
 16262 ;; Auto vars:     Size  Location     Type
 16263 ;;  counter         1   11[BANK0 ] unsigned char 
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  2    7[BANK0 ] unsigned int 
 16266 ;; Registers used:
 16267 ;;		wreg, status,2, status,0
 16268 ;; Tracked objects:
 16269 ;;		On entry : 0/0
 16270 ;;		On exit  : 0/0
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16273 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16276 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16277 ;;Total ram usage:        5 bytes
 16278 ;; Hardware stack levels used:    1
 16279 ;; Hardware stack levels required when called:    8
 16280 ;; This function calls:
 16281 ;;		Nothing
 16282 ;; This function is called by:
 16283 ;;		_printf
 16284 ;; This function uses a non-reentrant model
 16285 ;;
 16286                           
 16287                           	psect	text79
 16288  00509A                     __ptext79:
 16289                           	opt callstack 0
 16290  00509A                     ___lwmod:
 16291                           	opt callstack 19
 16292                           
 16293                           ; BSR set to: 0
 16294                           ;incstack = 0
 16295  00509A  0100               	movlb	0	; () banked
 16296  00509C  5189               	movf	___lwmod@divisor& (0+255),w,b
 16297  00509E  118A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 16298  0050A0  B4D8               	btfsc	status,2,c
 16299  0050A2  D018               	goto	l2261
 16300                           
 16301                           ; BSR set to: 0
 16302  0050A4  0E01               	movlw	1
 16303  0050A6  6F8B               	movwf	___lwmod@counter& (0+255),b
 16304  0050A8  D004               	goto	l9822
 16305  0050AA                     l9820:
 16306                           
 16307                           ; BSR set to: 0
 16308  0050AA  90D8               	bcf	status,0,c
 16309  0050AC  3789               	rlcf	___lwmod@divisor& (0+255),f,b
 16310  0050AE  378A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 16311  0050B0  2B8B               	incf	___lwmod@counter& (0+255),f,b
 16312  0050B2                     l9822:
 16313                           
 16314                           ; BSR set to: 0
 16315  0050B2  AF8A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 16316  0050B4  D7FA               	goto	l9820
 16317  0050B6                     u9570:
 16318                           
 16319                           ; BSR set to: 0
 16320  0050B6  5189               	movf	___lwmod@divisor& (0+255),w,b
 16321  0050B8  5D87               	subwf	___lwmod@dividend& (0+255),w,b
 16322  0050BA  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16323  0050BC  5988               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 16324  0050BE  A0D8               	btfss	status,0,c
 16325  0050C0  D004               	goto	l9828
 16326                           
 16327                           ; BSR set to: 0
 16328  0050C2  5189               	movf	___lwmod@divisor& (0+255),w,b
 16329  0050C4  5F87               	subwf	___lwmod@dividend& (0+255),f,b
 16330  0050C6  518A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 16331  0050C8  5B88               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 16332  0050CA                     l9828:
 16333                           
 16334                           ; BSR set to: 0
 16335  0050CA  90D8               	bcf	status,0,c
 16336  0050CC  338A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 16337  0050CE  3389               	rrcf	___lwmod@divisor& (0+255),f,b
 16338                           
 16339                           ; BSR set to: 0
 16340  0050D0  2F8B               	decfsz	___lwmod@counter& (0+255),f,b
 16341  0050D2  D7F1               	goto	u9570
 16342  0050D4                     l2261:
 16343                           
 16344                           ; BSR set to: 0
 16345  0050D4  C087  F087         	movff	___lwmod@dividend,?___lwmod
 16346  0050D8  C088  F088         	movff	___lwmod@dividend+1,?___lwmod+1
 16347                           
 16348                           ; BSR set to: 0
 16349  0050DC  0012               	return		;funcret
 16350  0050DE                     __end_of___lwmod:
 16351                           	opt callstack 0
 16352                           
 16353 ;; *************** function ___lwdiv *****************
 16354 ;; Defined at:
 16355 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;  dividend        2    0[BANK0 ] unsigned int 
 16358 ;;  divisor         2    2[BANK0 ] unsigned int 
 16359 ;; Auto vars:     Size  Location     Type
 16360 ;;  quotient        2    5[BANK0 ] unsigned int 
 16361 ;;  counter         1    4[BANK0 ] unsigned char 
 16362 ;; Return value:  Size  Location     Type
 16363 ;;                  2    0[BANK0 ] unsigned int 
 16364 ;; Registers used:
 16365 ;;		wreg, status,2, status,0
 16366 ;; Tracked objects:
 16367 ;;		On entry : 0/0
 16368 ;;		On exit  : 0/0
 16369 ;;		Unchanged: 0/0
 16370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16371 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16375 ;;Total ram usage:        7 bytes
 16376 ;; Hardware stack levels used:    1
 16377 ;; Hardware stack levels required when called:    8
 16378 ;; This function calls:
 16379 ;;		Nothing
 16380 ;; This function is called by:
 16381 ;;		_printf
 16382 ;; This function uses a non-reentrant model
 16383 ;;
 16384                           
 16385                           	psect	text80
 16386  004CEC                     __ptext80:
 16387                           	opt callstack 0
 16388  004CEC                     ___lwdiv:
 16389                           	opt callstack 19
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;incstack = 0
 16393  004CEC  0E00               	movlw	0
 16394  004CEE  0100               	movlb	0	; () banked
 16395  004CF0  6F86               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16396  004CF2  0E00               	movlw	0
 16397  004CF4  6F85               	movwf	___lwdiv@quotient& (0+255),b
 16398                           
 16399                           ; BSR set to: 0
 16400  004CF6  5182               	movf	___lwdiv@divisor& (0+255),w,b
 16401  004CF8  1183               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16402  004CFA  B4D8               	btfsc	status,2,c
 16403  004CFC  D01C               	goto	l2251
 16404                           
 16405                           ; BSR set to: 0
 16406  004CFE  0E01               	movlw	1
 16407  004D00  6F84               	movwf	___lwdiv@counter& (0+255),b
 16408  004D02  D004               	goto	l9802
 16409  004D04                     l9800:
 16410                           
 16411                           ; BSR set to: 0
 16412  004D04  90D8               	bcf	status,0,c
 16413  004D06  3782               	rlcf	___lwdiv@divisor& (0+255),f,b
 16414  004D08  3783               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16415  004D0A  2B84               	incf	___lwdiv@counter& (0+255),f,b
 16416  004D0C                     l9802:
 16417                           
 16418                           ; BSR set to: 0
 16419  004D0C  AF83               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16420  004D0E  D7FA               	goto	l9800
 16421  004D10                     u9540:
 16422                           
 16423                           ; BSR set to: 0
 16424  004D10  90D8               	bcf	status,0,c
 16425  004D12  3785               	rlcf	___lwdiv@quotient& (0+255),f,b
 16426  004D14  3786               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16427                           
 16428                           ; BSR set to: 0
 16429  004D16  5182               	movf	___lwdiv@divisor& (0+255),w,b
 16430  004D18  5D80               	subwf	___lwdiv@dividend& (0+255),w,b
 16431  004D1A  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16432  004D1C  5981               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16433  004D1E  A0D8               	btfss	status,0,c
 16434  004D20  D005               	goto	l9812
 16435                           
 16436                           ; BSR set to: 0
 16437  004D22  5182               	movf	___lwdiv@divisor& (0+255),w,b
 16438  004D24  5F80               	subwf	___lwdiv@dividend& (0+255),f,b
 16439  004D26  5183               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16440  004D28  5B81               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16441                           
 16442                           ; BSR set to: 0
 16443  004D2A  8185               	bsf	___lwdiv@quotient& (0+255),0,b
 16444  004D2C                     l9812:
 16445                           
 16446                           ; BSR set to: 0
 16447  004D2C  90D8               	bcf	status,0,c
 16448  004D2E  3383               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16449  004D30  3382               	rrcf	___lwdiv@divisor& (0+255),f,b
 16450                           
 16451                           ; BSR set to: 0
 16452  004D32  2F84               	decfsz	___lwdiv@counter& (0+255),f,b
 16453  004D34  D7ED               	goto	u9540
 16454  004D36                     l2251:
 16455                           
 16456                           ; BSR set to: 0
 16457  004D36  C085  F080         	movff	___lwdiv@quotient,?___lwdiv
 16458  004D3A  C086  F081         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16459                           
 16460                           ; BSR set to: 0
 16461  004D3E  0012               	return		;funcret
 16462  004D40                     __end_of___lwdiv:
 16463                           	opt callstack 0
 16464                           
 16465 ;; *************** function _clear_mem *****************
 16466 ;; Defined at:
 16467 ;;		line 12 in file "EEPROM.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;		None
 16472 ;; Return value:  Size  Location     Type
 16473 ;;                  1    wreg      void 
 16474 ;; Registers used:
 16475 ;;		wreg, status,2, status,0, cstack
 16476 ;; Tracked objects:
 16477 ;;		On entry : 0/0
 16478 ;;		On exit  : 0/0
 16479 ;;		Unchanged: 0/0
 16480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16485 ;;Total ram usage:        0 bytes
 16486 ;; Hardware stack levels used:    1
 16487 ;; Hardware stack levels required when called:    9
 16488 ;; This function calls:
 16489 ;;		_read_pointer
 16490 ;; This function is called by:
 16491 ;;		_clear_finish
 16492 ;; This function uses a non-reentrant model
 16493 ;;
 16494                           
 16495                           	psect	text81
 16496  00437A                     __ptext81:
 16497                           	opt callstack 0
 16498  00437A                     _clear_mem:
 16499                           	opt callstack 20
 16500                           
 16501                           ;EEPROM.c: 14: read_pointer();
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;incstack = 0
 16505  00437A  EC6D  F029         	call	_read_pointer	;wreg free
 16506  00437E                     l11402:
 16507                           
 16508                           ;EEPROM.c: 17: EEADRH = addrh;
 16509  00437E  C0E3  FFAA         	movff	_addrh,4010	;volatile
 16510                           
 16511                           ;EEPROM.c: 18: EEADR = addr;
 16512  004382  C0E4  FFA9         	movff	_addr,4009	;volatile
 16513                           
 16514                           ;EEPROM.c: 19: EEDATA = 0;
 16515  004386  0E00               	movlw	0
 16516  004388  6EA8               	movwf	4008,c	;volatile
 16517                           
 16518                           ;EEPROM.c: 20: EECON1bits.EEPGD = 0;
 16519  00438A  9EA6               	bcf	4006,7,c	;volsfr
 16520                           
 16521                           ;EEPROM.c: 21: EECON1bits.CFGS = 0;
 16522  00438C  9CA6               	bcf	4006,6,c	;volsfr
 16523                           
 16524                           ;EEPROM.c: 22: EECON1bits.WREN = 1;
 16525  00438E  84A6               	bsf	4006,2,c	;volsfr
 16526                           
 16527                           ;EEPROM.c: 23: GIE =0;
 16528  004390  9EF2               	bcf	4082,7,c	;volatile
 16529                           
 16530                           ;EEPROM.c: 25: EECON2 = 0x55;
 16531  004392  0E55               	movlw	85
 16532  004394  6EA7               	movwf	4007,c	;volsfr
 16533                           
 16534                           ;EEPROM.c: 26: EECON2 = 0xAA;
 16535  004396  0EAA               	movlw	170
 16536  004398  6EA7               	movwf	4007,c	;volsfr
 16537                           
 16538                           ;EEPROM.c: 28: EECON1bits.WR =1;
 16539  00439A  82A6               	bsf	4006,1,c	;volsfr
 16540  00439C                     l1172:
 16541  00439C  B2A6               	btfsc	4006,1,c	;volsfr
 16542  00439E  D7FE               	goto	l1172
 16543                           
 16544                           ;EEPROM.c: 31: };EEPROM.c: 33: GIE =1;
 16545  0043A0  8EF2               	bsf	4082,7,c	;volatile
 16546                           
 16547                           ;EEPROM.c: 34: EECON1bits.WREN = 0;
 16548  0043A2  94A6               	bcf	4006,2,c	;volsfr
 16549                           
 16550                           ;EEPROM.c: 36: addr = addr-1;
 16551  0043A4  0100               	movlb	0	; () banked
 16552  0043A6  05E4               	decf	_addr& (0+255),w,b
 16553  0043A8  6FE4               	movwf	_addr& (0+255),b
 16554                           
 16555                           ;EEPROM.c: 37: if (addr == 0xFF){
 16556  0043AA  29E4               	incf	_addr& (0+255),w,b
 16557  0043AC  A4D8               	btfss	status,2,c
 16558  0043AE  D002               	goto	l1175
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;EEPROM.c: 38: addrh = addrh -1;
 16562  0043B0  05E3               	decf	_addrh& (0+255),w,b
 16563  0043B2  6FE3               	movwf	_addrh& (0+255),b
 16564  0043B4                     l1175:
 16565                           
 16566                           ; BSR set to: 0
 16567                           ;EEPROM.c: 39: };EEPROM.c: 40: if (addrh == 0xFF){
 16568  0043B4  29E3               	incf	_addrh& (0+255),w,b
 16569  0043B6  A4D8               	btfss	status,2,c
 16570  0043B8  D7E2               	goto	l11402
 16571                           
 16572                           ; BSR set to: 0
 16573                           ;EEPROM.c: 42: };EEPROM.c: 43: };EEPROM.c: 44: EEADRH = 0;
 16574  0043BA  0E00               	movlw	0
 16575  0043BC  6EAA               	movwf	4010,c	;volatile
 16576                           
 16577                           ;EEPROM.c: 45: EEADR = 0;
 16578  0043BE  0E00               	movlw	0
 16579  0043C0  6EA9               	movwf	4009,c	;volatile
 16580                           
 16581                           ;EEPROM.c: 46: EEDATA = 0;
 16582  0043C2  0E00               	movlw	0
 16583  0043C4  6EA8               	movwf	4008,c	;volatile
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;EEPROM.c: 48: EECON1bits.EEPGD = 0;
 16587  0043C6  9EA6               	bcf	4006,7,c	;volsfr
 16588                           
 16589                           ; BSR set to: 0
 16590                           ;EEPROM.c: 49: EECON1bits.CFGS = 0;
 16591  0043C8  9CA6               	bcf	4006,6,c	;volsfr
 16592                           
 16593                           ; BSR set to: 0
 16594                           ;EEPROM.c: 50: EECON1bits.WREN = 1;
 16595  0043CA  84A6               	bsf	4006,2,c	;volsfr
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;EEPROM.c: 51: GIE =0;
 16599  0043CC  9EF2               	bcf	4082,7,c	;volatile
 16600                           
 16601                           ;EEPROM.c: 53: EECON2 = 0x55;
 16602  0043CE  0E55               	movlw	85
 16603  0043D0  6EA7               	movwf	4007,c	;volsfr
 16604                           
 16605                           ;EEPROM.c: 54: EECON2 = 0xAA;
 16606  0043D2  0EAA               	movlw	170
 16607  0043D4  6EA7               	movwf	4007,c	;volsfr
 16608                           
 16609                           ; BSR set to: 0
 16610                           ;EEPROM.c: 56: EECON1bits.WR =1;
 16611  0043D6  82A6               	bsf	4006,1,c	;volsfr
 16612  0043D8                     l1179:
 16613  0043D8  B2A6               	btfsc	4006,1,c	;volsfr
 16614  0043DA  D7FE               	goto	l1179
 16615                           
 16616                           ;EEPROM.c: 59: };EEPROM.c: 60: GIE =1;
 16617  0043DC  8EF2               	bsf	4082,7,c	;volatile
 16618                           
 16619                           ;EEPROM.c: 61: EECON1bits.WREN = 0;
 16620  0043DE  94A6               	bcf	4006,2,c	;volsfr
 16621                           
 16622                           ;EEPROM.c: 63: EEADRH = 0;
 16623  0043E0  0E00               	movlw	0
 16624  0043E2  6EAA               	movwf	4010,c	;volatile
 16625                           
 16626                           ;EEPROM.c: 64: EEADR = 1;
 16627  0043E4  0E01               	movlw	1
 16628  0043E6  6EA9               	movwf	4009,c	;volatile
 16629                           
 16630                           ;EEPROM.c: 65: EEDATA = 2;
 16631  0043E8  0E02               	movlw	2
 16632  0043EA  6EA8               	movwf	4008,c	;volatile
 16633                           
 16634                           ;EEPROM.c: 67: EECON1bits.EEPGD = 0;
 16635  0043EC  9EA6               	bcf	4006,7,c	;volsfr
 16636                           
 16637                           ;EEPROM.c: 68: EECON1bits.CFGS = 0;
 16638  0043EE  9CA6               	bcf	4006,6,c	;volsfr
 16639                           
 16640                           ;EEPROM.c: 69: EECON1bits.WREN = 1;
 16641  0043F0  84A6               	bsf	4006,2,c	;volsfr
 16642                           
 16643                           ;EEPROM.c: 70: GIE =0;
 16644  0043F2  9EF2               	bcf	4082,7,c	;volatile
 16645                           
 16646                           ;EEPROM.c: 72: EECON2 = 0x55;
 16647  0043F4  0E55               	movlw	85
 16648  0043F6  6EA7               	movwf	4007,c	;volsfr
 16649                           
 16650                           ;EEPROM.c: 73: EECON2 = 0xAA;
 16651  0043F8  0EAA               	movlw	170
 16652  0043FA  6EA7               	movwf	4007,c	;volsfr
 16653                           
 16654                           ;EEPROM.c: 75: EECON1bits.WR =1;
 16655  0043FC  82A6               	bsf	4006,1,c	;volsfr
 16656  0043FE                     l1182:
 16657  0043FE  B2A6               	btfsc	4006,1,c	;volsfr
 16658  004400  D7FE               	goto	l1182
 16659                           
 16660                           ;EEPROM.c: 78: };EEPROM.c: 80: GIE =1;
 16661  004402  8EF2               	bsf	4082,7,c	;volatile
 16662                           
 16663                           ;EEPROM.c: 81: EECON1bits.WREN = 0;
 16664  004404  94A6               	bcf	4006,2,c	;volsfr
 16665  004406  0012               	return		;funcret
 16666  004408                     __end_of_clear_mem:
 16667                           	opt callstack 0
 16668                           
 16669 ;; *************** function _read_pointer *****************
 16670 ;; Defined at:
 16671 ;;		line 189 in file "EEPROM.c"
 16672 ;; Parameters:    Size  Location     Type
 16673 ;;		None
 16674 ;; Auto vars:     Size  Location     Type
 16675 ;;		None
 16676 ;; Return value:  Size  Location     Type
 16677 ;;                  1    wreg      void 
 16678 ;; Registers used:
 16679 ;;		wreg, status,2
 16680 ;; Tracked objects:
 16681 ;;		On entry : 0/0
 16682 ;;		On exit  : 0/0
 16683 ;;		Unchanged: 0/0
 16684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16689 ;;Total ram usage:        0 bytes
 16690 ;; Hardware stack levels used:    1
 16691 ;; Hardware stack levels required when called:    8
 16692 ;; This function calls:
 16693 ;;		Nothing
 16694 ;; This function is called by:
 16695 ;;		_clear_mem
 16696 ;;		_completion_write
 16697 ;;		_read_total
 16698 ;;		_data_disp
 16699 ;;		_page5
 16700 ;; This function uses a non-reentrant model
 16701 ;;
 16702                           
 16703                           	psect	text82
 16704  0052DA                     __ptext82:
 16705                           	opt callstack 0
 16706  0052DA                     _read_pointer:
 16707                           	opt callstack 20
 16708                           
 16709                           ;EEPROM.c: 190: EECON1bits.EEPGD = 0;
 16710                           
 16711                           ;incstack = 0
 16712  0052DA  9EA6               	bcf	4006,7,c	;volsfr
 16713                           
 16714                           ;EEPROM.c: 191: EECON1bits.CFGS = 0;
 16715  0052DC  9CA6               	bcf	4006,6,c	;volsfr
 16716                           
 16717                           ;EEPROM.c: 193: EEADRH = 0;
 16718  0052DE  0E00               	movlw	0
 16719  0052E0  6EAA               	movwf	4010,c	;volatile
 16720                           
 16721                           ;EEPROM.c: 194: EEADR = 0;
 16722  0052E2  0E00               	movlw	0
 16723  0052E4  6EA9               	movwf	4009,c	;volatile
 16724                           
 16725                           ;EEPROM.c: 196: EECON1bits.RD = 1;
 16726  0052E6  80A6               	bsf	4006,0,c	;volsfr
 16727                           
 16728                           ;EEPROM.c: 197: addrh = EEDATA;
 16729  0052E8  CFA8 F0E3          	movff	4008,_addrh	;volatile
 16730                           
 16731                           ;EEPROM.c: 199: EECON1bits.EEPGD = 0;
 16732  0052EC  9EA6               	bcf	4006,7,c	;volsfr
 16733                           
 16734                           ;EEPROM.c: 200: EECON1bits.CFGS = 0;
 16735  0052EE  9CA6               	bcf	4006,6,c	;volsfr
 16736                           
 16737                           ;EEPROM.c: 202: EEADRH = 0;
 16738  0052F0  0E00               	movlw	0
 16739  0052F2  6EAA               	movwf	4010,c	;volatile
 16740                           
 16741                           ;EEPROM.c: 203: EEADR = 1;
 16742  0052F4  0E01               	movlw	1
 16743  0052F6  6EA9               	movwf	4009,c	;volatile
 16744                           
 16745                           ;EEPROM.c: 205: EECON1bits.RD = 1;
 16746  0052F8  80A6               	bsf	4006,0,c	;volsfr
 16747                           
 16748                           ;EEPROM.c: 206: addr = EEDATA;
 16749  0052FA  CFA8 F0E4          	movff	4008,_addr	;volatile
 16750  0052FE  0012               	return		;funcret
 16751  005300                     __end_of_read_pointer:
 16752                           	opt callstack 0
 16753                           
 16754 ;; *************** function ___llmod *****************
 16755 ;; Defined at:
 16756 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;  dividend        4    0[BANK0 ] unsigned long 
 16759 ;;  divisor         4    4[BANK0 ] unsigned long 
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;  counter         1    8[BANK0 ] unsigned char 
 16762 ;; Return value:  Size  Location     Type
 16763 ;;                  4    0[BANK0 ] unsigned long 
 16764 ;; Registers used:
 16765 ;;		wreg, status,2, status,0
 16766 ;; Tracked objects:
 16767 ;;		On entry : 0/0
 16768 ;;		On exit  : 0/0
 16769 ;;		Unchanged: 0/0
 16770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16771 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16774 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16775 ;;Total ram usage:        9 bytes
 16776 ;; Hardware stack levels used:    1
 16777 ;; Hardware stack levels required when called:    8
 16778 ;; This function calls:
 16779 ;;		Nothing
 16780 ;; This function is called by:
 16781 ;;		_main
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text83
 16786  004A48                     __ptext83:
 16787                           	opt callstack 0
 16788  004A48                     ___llmod:
 16789                           	opt callstack 22
 16790                           
 16791                           ;incstack = 0
 16792  004A48  0100               	movlb	0	; () banked
 16793  004A4A  5184               	movf	___llmod@divisor& (0+255),w,b
 16794  004A4C  1185               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 16795  004A4E  1186               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 16796  004A50  1187               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 16797  004A52  B4D8               	btfsc	status,2,c
 16798  004A54  D024               	goto	l2180
 16799                           
 16800                           ; BSR set to: 0
 16801  004A56  0E01               	movlw	1
 16802  004A58  6F88               	movwf	___llmod@counter& (0+255),b
 16803  004A5A  D006               	goto	l12176
 16804  004A5C                     l12174:
 16805                           
 16806                           ; BSR set to: 0
 16807  004A5C  90D8               	bcf	status,0,c
 16808  004A5E  3784               	rlcf	___llmod@divisor& (0+255),f,b
 16809  004A60  3785               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 16810  004A62  3786               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16811  004A64  3787               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16812  004A66  2B88               	incf	___llmod@counter& (0+255),f,b
 16813  004A68                     l12176:
 16814                           
 16815                           ; BSR set to: 0
 16816  004A68  AF87               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16817  004A6A  D7F8               	goto	l12174
 16818  004A6C                     u12330:
 16819                           
 16820                           ; BSR set to: 0
 16821  004A6C  5184               	movf	___llmod@divisor& (0+255),w,b
 16822  004A6E  5D80               	subwf	___llmod@dividend& (0+255),w,b
 16823  004A70  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 16824  004A72  5981               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16825  004A74  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 16826  004A76  5982               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16827  004A78  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 16828  004A7A  5983               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16829  004A7C  A0D8               	btfss	status,0,c
 16830  004A7E  D008               	goto	l12182
 16831                           
 16832                           ; BSR set to: 0
 16833  004A80  5184               	movf	___llmod@divisor& (0+255),w,b
 16834  004A82  5F80               	subwf	___llmod@dividend& (0+255),f,b
 16835  004A84  5185               	movf	(___llmod@divisor+1)& (0+255),w,b
 16836  004A86  5B81               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16837  004A88  5186               	movf	(___llmod@divisor+2)& (0+255),w,b
 16838  004A8A  5B82               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16839  004A8C  5187               	movf	(___llmod@divisor+3)& (0+255),w,b
 16840  004A8E  5B83               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16841  004A90                     l12182:
 16842                           
 16843                           ; BSR set to: 0
 16844  004A90  90D8               	bcf	status,0,c
 16845  004A92  3387               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16846  004A94  3386               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16847  004A96  3385               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16848  004A98  3384               	rrcf	___llmod@divisor& (0+255),f,b
 16849                           
 16850                           ; BSR set to: 0
 16851  004A9A  2F88               	decfsz	___llmod@counter& (0+255),f,b
 16852  004A9C  D7E7               	goto	u12330
 16853  004A9E                     l2180:
 16854                           
 16855                           ; BSR set to: 0
 16856  004A9E  C080  F080         	movff	___llmod@dividend,?___llmod
 16857  004AA2  C081  F081         	movff	___llmod@dividend+1,?___llmod+1
 16858  004AA6  C082  F082         	movff	___llmod@dividend+2,?___llmod+2
 16859  004AAA  C083  F083         	movff	___llmod@dividend+3,?___llmod+3
 16860                           
 16861                           ; BSR set to: 0
 16862  004AAE  0012               	return		;funcret
 16863  004AB0                     __end_of___llmod:
 16864                           	opt callstack 0
 16865                           
 16866 ;; *************** function _interruptHandler *****************
 16867 ;; Defined at:
 16868 ;;		line 12 in file "interrupt handler.c"
 16869 ;; Parameters:    Size  Location     Type
 16870 ;;		None
 16871 ;; Auto vars:     Size  Location     Type
 16872 ;;  b0              2   47[COMRAM] int 
 16873 ;;  command         1   50[COMRAM] unsigned char 
 16874 ;;  keypress        1   49[COMRAM] unsigned char 
 16875 ;; Return value:  Size  Location     Type
 16876 ;;                  1    wreg      void 
 16877 ;; Registers used:
 16878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16879 ;; Tracked objects:
 16880 ;;		On entry : 0/0
 16881 ;;		On exit  : 0/0
 16882 ;;		Unchanged: 0/0
 16883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16885 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16886 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16887 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16888 ;;Total ram usage:       17 bytes
 16889 ;; Hardware stack levels used:    1
 16890 ;; Hardware stack levels required when called:    7
 16891 ;; This function calls:
 16892 ;;		_initialize_func
 16893 ;;		i2___fladd
 16894 ;;		i2___fldiv
 16895 ;;		i2___wmul
 16896 ;;		i2_lcdInst
 16897 ;;		i2_printf
 16898 ;; This function is called by:
 16899 ;;		Interrupt level 2
 16900 ;; This function uses a non-reentrant model
 16901 ;;
 16902                           
 16903                           	psect	intcode
 16904  000008                     __pintcode:
 16905                           	opt callstack 0
 16906  000008                     _interruptHandler:
 16907                           	opt callstack 15
 16908                           
 16909                           ; BSR set to: 0
 16910                           ;incstack = 0
 16911  000008  8257               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 16912  00000A  ED37  F002         	call	int_func,f	;refresh shadow registers
 16913                           
 16914                           	psect	intcode_body
 16915  00046E                     __pintcode_body:
 16916                           	opt callstack 15
 16917  00046E                     int_func:
 16918                           	opt callstack 15
 16919  00046E  0006               	pop		; remove dummy address from shadow register refresh
 16920  000470  CFD9 F028          	movff	fsr2l,??_interruptHandler+5
 16921  000474  CFDA F029          	movff	fsr2h,??_interruptHandler+6
 16922  000478  CFF3 F02A          	movff	prodl,??_interruptHandler+7
 16923  00047C  CFF4 F02B          	movff	prodh,??_interruptHandler+8
 16924  000480  CFF6 F02C          	movff	tblptrl,??_interruptHandler+9
 16925  000484  CFF7 F02D          	movff	tblptrh,??_interruptHandler+10
 16926  000488  CFF8 F02E          	movff	tblptru,??_interruptHandler+11
 16927  00048C  CFF5 F02F          	movff	tablat,??_interruptHandler+12
 16928                           
 16929                           ;interrupt handler.c: 14: if(INT1IF){
 16930  000490  A0F0               	btfss	4080,0,c	;volatile
 16931  000492  D16A               	goto	i2l1372
 16932                           
 16933                           ;interrupt handler.c: 17: INT1IF = 0;
 16934  000494  90F0               	bcf	4080,0,c	;volatile
 16935                           
 16936                           ;interrupt handler.c: 18: char keypress = (PORTB & 0xF0) >> 4;
 16937  000496  3881               	swapf	3969,w,c	;volatile
 16938  000498  0B0F               	andlw	15
 16939  00049A  0B0F               	andlw	15
 16940  00049C  6E32               	movwf	interruptHandler@keypress,c
 16941                           
 16942                           ;interrupt handler.c: 19: char command = keys[keypress];
 16943  00049E  0E0D               	movlw	low _keys
 16944  0004A0  2432               	addwf	interruptHandler@keypress,w,c
 16945  0004A2  6EF6               	movwf	tblptrl,c
 16946  0004A4  6AF7               	clrf	tblptrh,c
 16947  0004A6  0EFD               	movlw	high _keys
 16948  0004A8  22F7               	addwfc	tblptrh,f,c
 16949  0004AA                     	if	0	;There are less than 3 active tblptr bytes
 16950  0004AA                     	endif
 16951  0004AA  0008               	tblrd		*
 16952  0004AC  CFF5 F033          	movff	tablat,interruptHandler@command
 16953                           
 16954                           ;interrupt handler.c: 22: if((command == '1') ||(command == '2')||(command == '3')||(com
      +                          mand =='4') ){
 16955  0004B0  0E31               	movlw	49
 16956  0004B2  1833               	xorwf	interruptHandler@command,w,c
 16957  0004B4  B4D8               	btfsc	status,2,c
 16958  0004B6  D00C               	goto	i2u911_40
 16959  0004B8  0E32               	movlw	50
 16960  0004BA  1833               	xorwf	interruptHandler@command,w,c
 16961  0004BC  B4D8               	btfsc	status,2,c
 16962  0004BE  D008               	goto	i2u911_40
 16963  0004C0  0E33               	movlw	51
 16964  0004C2  1833               	xorwf	interruptHandler@command,w,c
 16965  0004C4  B4D8               	btfsc	status,2,c
 16966  0004C6  D004               	goto	i2u911_40
 16967  0004C8  0E34               	movlw	52
 16968  0004CA  1833               	xorwf	interruptHandler@command,w,c
 16969  0004CC  A4D8               	btfss	status,2,c
 16970  0004CE  D080               	goto	i2l9596
 16971  0004D0                     i2u911_40:
 16972                           
 16973                           ;interrupt handler.c: 24: if (reg == 0){
 16974  0004D0  0100               	movlb	0	; () banked
 16975  0004D2  51D0               	movf	_reg& (0+255),w,b
 16976  0004D4  11D1               	iorwf	(_reg+1)& (0+255),w,b
 16977  0004D6  A4D8               	btfss	status,2,c
 16978  0004D8  D05A               	goto	i2l9586
 16979                           
 16980                           ; BSR set to: 0
 16981                           ;interrupt handler.c: 25: if ((command - 48) > total_op){
 16982  0004DA  0ED0               	movlw	208
 16983  0004DC  6E23               	movwf	??_interruptHandler& (0+255),c
 16984  0004DE  0EFF               	movlw	255
 16985  0004E0  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 16986  0004E2  5033               	movf	interruptHandler@command,w,c
 16987  0004E4  6E25               	movwf	(??_interruptHandler+2)& (0+255),c
 16988  0004E6  6A26               	clrf	(??_interruptHandler+3)& (0+255),c
 16989  0004E8  5023               	movf	??_interruptHandler,w,c
 16990  0004EA  2625               	addwf	??_interruptHandler+2,f,c
 16991  0004EC  5024               	movf	??_interruptHandler+1,w,c
 16992  0004EE  2226               	addwfc	??_interruptHandler+3,f,c
 16993  0004F0  5025               	movf	??_interruptHandler+2,w,c
 16994  0004F2  5C44               	subwf	_total_op,w,c
 16995  0004F4  5045               	movf	_total_op+1,w,c
 16996  0004F6  0A80               	xorlw	128
 16997  0004F8  6E27               	movwf	(??_interruptHandler+4)& (0+255),c
 16998  0004FA  5026               	movf	??_interruptHandler+3,w,c
 16999  0004FC  0A80               	xorlw	128
 17000  0004FE  5827               	subwfb	(??_interruptHandler+4)& (0+255),w,c
 17001  000500  B0D8               	btfsc	status,0,c
 17002  000502  D02F               	goto	i2l9582
 17003                           
 17004                           ; BSR set to: 0
 17005                           ;interrupt handler.c: 26: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
 17006  000504  0E01               	movlw	1
 17007  000506  ECB7  F02A         	call	i2_lcdInst
 17008  00050A  0E11               	movlw	17
 17009  00050C  6E23               	movwf	??_interruptHandler& (0+255),c
 17010  00050E  0E3A               	movlw	58
 17011  000510                     i2u1360_47:
 17012  000510  2EE8               	decfsz	wreg,f,c
 17013  000512  D7FE               	bra	i2u1360_47
 17014  000514  2E23               	decfsz	??_interruptHandler& (0+255),f,c
 17015  000516  D7FC               	bra	i2u1360_47
 17016  000518  D000               	nop2	
 17017                           
 17018                           ;interrupt handler.c: 27: printf("Oops. I don't get");
 17019  00051A  0E58               	movlw	low STR_8
 17020  00051C  6E0D               	movwf	i2printf@f,c
 17021  00051E  0EFD               	movlw	high STR_8
 17022  000520  6E0E               	movwf	i2printf@f+1,c
 17023  000522  ECAF  F011         	call	i2_printf	;wreg free
 17024  000526  0EC0               	movlw	192
 17025  000528  ECB7  F02A         	call	i2_lcdInst
 17026                           
 17027                           ;interrupt handler.c: 29: printf("it... Please");
 17028  00052C  0EAD               	movlw	low STR_9
 17029  00052E  6E0D               	movwf	i2printf@f,c
 17030  000530  0EFE               	movlw	high STR_9
 17031  000532  6E0E               	movwf	i2printf@f+1,c
 17032  000534  ECAF  F011         	call	i2_printf	;wreg free
 17033  000538  0E90               	movlw	144
 17034  00053A  ECB7  F02A         	call	i2_lcdInst
 17035                           
 17036                           ;interrupt handler.c: 31: printf("Review the Menu.");
 17037  00053E  0E9D               	movlw	low STR_10
 17038  000540  6E0D               	movwf	i2printf@f,c
 17039  000542  0EFD               	movlw	high STR_10
 17040  000544  6E0E               	movwf	i2printf@f+1,c
 17041  000546  ECAF  F011         	call	i2_printf	;wreg free
 17042  00054A                     i2l9580:
 17043                           
 17044                           ;interrupt handler.c: 32: _delay((unsigned long)((500)*(10000000/4000.0)));
 17045  00054A  0E07               	movlw	7
 17046  00054C  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17047  00054E  0E58               	movlw	88
 17048  000550  6E23               	movwf	??_interruptHandler& (0+255),c
 17049  000552  0E5A               	movlw	90
 17050  000554                     i2u1361_47:
 17051  000554  2EE8               	decfsz	wreg,f,c
 17052  000556  D7FE               	bra	i2u1361_47
 17053  000558  2E23               	decfsz	??_interruptHandler& (0+255),f,c
 17054  00055A  D7FC               	bra	i2u1361_47
 17055  00055C  2E24               	decfsz	(??_interruptHandler+1)& (0+255),f,c
 17056  00055E  D7FA               	bra	i2u1361_47
 17057                           
 17058                           ;interrupt handler.c: 33: }
 17059  000560  D147               	goto	i2l1408
 17060  000562                     i2l9582:
 17061                           
 17062                           ; BSR set to: 0
 17063                           ;interrupt handler.c: 34: else{;interrupt handler.c: 35: reg = (command - 48)*10;
 17064  000562  0ED0               	movlw	208
 17065  000564  2433               	addwf	interruptHandler@command,w,c
 17066  000566  6E01               	movwf	i2___wmul@multiplier,c
 17067  000568  6A02               	clrf	i2___wmul@multiplier+1,c
 17068  00056A  0EFF               	movlw	255
 17069  00056C  2202               	addwfc	i2___wmul@multiplier+1,f,c
 17070  00056E  0E00               	movlw	0
 17071  000570  6E04               	movwf	i2___wmul@multiplicand+1,c
 17072  000572  0E0A               	movlw	10
 17073  000574  6E03               	movwf	i2___wmul@multiplicand,c
 17074  000576  EC80  F029         	call	i2___wmul	;wreg free
 17075  00057A  C001  F0D0         	movff	?i2___wmul,_reg
 17076  00057E  C002  F0D1         	movff	?i2___wmul+1,_reg+1
 17077                           
 17078                           ;interrupt handler.c: 36: display_repeat = 0;}
 17079  000582  0E00               	movlw	0
 17080  000584  0100               	movlb	0	; () banked
 17081  000586  6FCF               	movwf	(_display_repeat+1)& (0+255),b
 17082  000588  0E00               	movlw	0
 17083  00058A  6FCE               	movwf	_display_repeat& (0+255),b
 17084  00058C  D131               	goto	i2l1408
 17085  00058E                     i2l9586:
 17086                           
 17087                           ; BSR set to: 0
 17088                           ;interrupt handler.c: 38: else if ((reg == 10)||(reg == 20)||(reg == 30)||(reg == 40)){
 17089  00058E  0E0A               	movlw	10
 17090  000590  19D0               	xorwf	_reg& (0+255),w,b
 17091  000592  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17092  000594  B4D8               	btfsc	status,2,c
 17093  000596  D00F               	goto	i2u917_40
 17094                           
 17095                           ; BSR set to: 0
 17096  000598  0E14               	movlw	20
 17097  00059A  19D0               	xorwf	_reg& (0+255),w,b
 17098  00059C  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17099  00059E  B4D8               	btfsc	status,2,c
 17100  0005A0  D00A               	goto	i2u917_40
 17101                           
 17102                           ; BSR set to: 0
 17103  0005A2  0E1E               	movlw	30
 17104  0005A4  19D0               	xorwf	_reg& (0+255),w,b
 17105  0005A6  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17106  0005A8  B4D8               	btfsc	status,2,c
 17107  0005AA  D005               	goto	i2u917_40
 17108                           
 17109                           ; BSR set to: 0
 17110  0005AC  0E28               	movlw	40
 17111  0005AE  19D0               	xorwf	_reg& (0+255),w,b
 17112  0005B0  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17113  0005B2  A4D8               	btfss	status,2,c
 17114  0005B4  D11D               	goto	i2l1408
 17115  0005B6                     i2u917_40:
 17116                           
 17117                           ; BSR set to: 0
 17118                           ;interrupt handler.c: 39: reg = reg + command - 48;
 17119  0005B6  5033               	movf	interruptHandler@command,w,c
 17120  0005B8  25D0               	addwf	_reg& (0+255),w,b
 17121  0005BA  6E23               	movwf	??_interruptHandler& (0+255),c
 17122  0005BC  0E00               	movlw	0
 17123  0005BE  21D1               	addwfc	(_reg+1)& (0+255),w,b
 17124  0005C0  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17125  0005C2  0ED0               	movlw	208
 17126  0005C4  2423               	addwf	??_interruptHandler,w,c
 17127  0005C6  6FD0               	movwf	_reg& (0+255),b
 17128  0005C8  0EFF               	movlw	255
 17129  0005CA  2024               	addwfc	??_interruptHandler+1,w,c
 17130  0005CC  6FD1               	movwf	(_reg+1)& (0+255),b
 17131  0005CE  D110               	goto	i2l1408
 17132  0005D0                     i2l9596:
 17133                           
 17134                           ;interrupt handler.c: 42: else if (command == 48){
 17135  0005D0  0E30               	movlw	48
 17136  0005D2  1833               	xorwf	interruptHandler@command,w,c
 17137  0005D4  A4D8               	btfss	status,2,c
 17138  0005D6  D009               	goto	i2l9602
 17139                           
 17140                           ;interrupt handler.c: 44: if (reg == 0){
 17141  0005D8  0100               	movlb	0	; () banked
 17142  0005DA  51D0               	movf	_reg& (0+255),w,b
 17143  0005DC  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17144  0005DE  A4D8               	btfss	status,2,c
 17145  0005E0  D107               	goto	i2l1408
 17146                           
 17147                           ; BSR set to: 0
 17148                           ;interrupt handler.c: 45: reg =50;
 17149  0005E2  0E00               	movlw	0
 17150  0005E4  6FD1               	movwf	(_reg+1)& (0+255),b
 17151  0005E6  0E32               	movlw	50
 17152  0005E8  D099               	goto	L20
 17153  0005EA                     i2l9602:
 17154                           
 17155                           ;interrupt handler.c: 48: else if (command == 'C'){
 17156  0005EA  0E43               	movlw	67
 17157  0005EC  1833               	xorwf	interruptHandler@command,w,c
 17158  0005EE  A4D8               	btfss	status,2,c
 17159  0005F0  D00F               	goto	i2l9608
 17160                           
 17161                           ;interrupt handler.c: 50: if(reg == 50){
 17162  0005F2  0E32               	movlw	50
 17163  0005F4  0100               	movlb	0	; () banked
 17164  0005F6  19D0               	xorwf	_reg& (0+255),w,b
 17165  0005F8  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17166  0005FA  A4D8               	btfss	status,2,c
 17167  0005FC  D0F9               	goto	i2l1408
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;interrupt handler.c: 51: reg = 51;
 17171  0005FE  0E00               	movlw	0
 17172  000600  6FD1               	movwf	(_reg+1)& (0+255),b
 17173  000602  0E33               	movlw	51
 17174  000604  6FD0               	movwf	_reg& (0+255),b
 17175                           
 17176                           ;interrupt handler.c: 52: clear_waiter = 3;
 17177  000606  0E00               	movlw	0
 17178  000608  6FFD               	movwf	(_clear_waiter+1)& (0+255),b
 17179  00060A  0E03               	movlw	3
 17180  00060C  6FFC               	movwf	_clear_waiter& (0+255),b
 17181  00060E  D0F0               	goto	i2l1408
 17182  000610                     i2l9608:
 17183                           
 17184                           ;interrupt handler.c: 55: else if(command =='A'){
 17185  000610  0E41               	movlw	65
 17186  000612  1833               	xorwf	interruptHandler@command,w,c
 17187  000614  A4D8               	btfss	status,2,c
 17188  000616  D003               	goto	i2l9612
 17189                           
 17190                           ;interrupt handler.c: 57: initialize_func();
 17191  000618  ECC9  F019         	call	_initialize_func	;wreg free
 17192                           
 17193                           ;interrupt handler.c: 58: }
 17194  00061C  D0E9               	goto	i2l1408
 17195  00061E                     i2l9612:
 17196                           
 17197                           ;interrupt handler.c: 59: else if(command == 'D'){
 17198  00061E  0E44               	movlw	68
 17199  000620  1833               	xorwf	interruptHandler@command,w,c
 17200  000622  A4D8               	btfss	status,2,c
 17201  000624  D00B               	goto	i2l9620
 17202                           
 17203                           ;interrupt handler.c: 60: key = !key;
 17204  000626  0100               	movlb	0	; () banked
 17205  000628  51E5               	movf	_key& (0+255),w,b
 17206  00062A  A4D8               	btfss	status,2,c
 17207  00062C  D002               	goto	i2u924_40
 17208  00062E  0E01               	movlw	1
 17209  000630  D001               	goto	i2u925_40
 17210  000632                     i2u924_40:
 17211  000632  0E00               	movlw	0
 17212  000634                     i2u925_40:
 17213  000634  6FE5               	movwf	_key& (0+255),b
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;interrupt handler.c: 61: LATDbits.LATD0 = 0;
 17217  000636  908C               	bcf	3980,0,c	;volatile
 17218                           
 17219                           ; BSR set to: 0
 17220                           ;interrupt handler.c: 62: LATDbits.LATD1 = 0;
 17221  000638  928C               	bcf	3980,1,c	;volatile
 17222                           
 17223                           ;interrupt handler.c: 63: }
 17224  00063A  D0DA               	goto	i2l1408
 17225  00063C                     i2l9620:
 17226                           
 17227                           ;interrupt handler.c: 64: else if (command == 'B'){
 17228  00063C  0E42               	movlw	66
 17229  00063E  1833               	xorwf	interruptHandler@command,w,c
 17230  000640  A4D8               	btfss	status,2,c
 17231  000642  D063               	goto	i2l9648
 17232                           
 17233                           ;interrupt handler.c: 65: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0))
      +                          );};
 17234  000644  0E01               	movlw	1
 17235  000646  ECB7  F02A         	call	i2_lcdInst
 17236  00064A  0E11               	movlw	17
 17237  00064C  6E23               	movwf	??_interruptHandler& (0+255),c
 17238  00064E  0E3A               	movlw	58
 17239  000650                     i2u1362_47:
 17240  000650  2EE8               	decfsz	wreg,f,c
 17241  000652  D7FE               	bra	i2u1362_47
 17242  000654  2E23               	decfsz	??_interruptHandler& (0+255),f,c
 17243  000656  D7FC               	bra	i2u1362_47
 17244  000658  D000               	nop2	
 17245                           
 17246                           ;interrupt handler.c: 66: planB +=1;
 17247  00065A  0100               	movlb	0	; () banked
 17248  00065C  4BCC               	infsnz	_planB& (0+255),f,b
 17249  00065E  2BCD               	incf	(_planB+1)& (0+255),f,b
 17250                           
 17251                           ; BSR set to: 0
 17252                           ;interrupt handler.c: 67: planB = planB%4;
 17253  000660  0E03               	movlw	3
 17254  000662  15CC               	andwf	_planB& (0+255),w,b
 17255  000664  6FCC               	movwf	_planB& (0+255),b
 17256  000666  6BCD               	clrf	(_planB+1)& (0+255),b
 17257                           
 17258                           ; BSR set to: 0
 17259                           ;interrupt handler.c: 68: if (planB%4 == 1){
 17260  000668  0E03               	movlw	3
 17261  00066A  15CC               	andwf	_planB& (0+255),w,b
 17262  00066C  6E23               	movwf	??_interruptHandler& (0+255),c
 17263  00066E  0E00               	movlw	0
 17264  000670  15CD               	andwf	(_planB+1)& (0+255),w,b
 17265  000672  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17266  000674  0423               	decf	??_interruptHandler,w,c
 17267  000676  1024               	iorwf	??_interruptHandler+1,w,c
 17268  000678  A4D8               	btfss	status,2,c
 17269  00067A  D007               	goto	i2l9634
 17270                           
 17271                           ; BSR set to: 0
 17272                           ;interrupt handler.c: 69: printf("planB?");
 17273  00067C  0EE5               	movlw	low STR_11
 17274  00067E  6E0D               	movwf	i2printf@f,c
 17275  000680  0EFF               	movlw	high STR_11
 17276  000682  6E0E               	movwf	i2printf@f+1,c
 17277  000684  ECAF  F011         	call	i2_printf	;wreg free
 17278                           
 17279                           ;interrupt handler.c: 70: }
 17280  000688  D034               	goto	i2l1398
 17281  00068A                     i2l9634:
 17282                           
 17283                           ; BSR set to: 0
 17284                           ;interrupt handler.c: 71: else if (planB%4 == 2){
 17285  00068A  0E03               	movlw	3
 17286  00068C  15CC               	andwf	_planB& (0+255),w,b
 17287  00068E  6E23               	movwf	??_interruptHandler& (0+255),c
 17288  000690  0E00               	movlw	0
 17289  000692  15CD               	andwf	(_planB+1)& (0+255),w,b
 17290  000694  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17291  000696  0E02               	movlw	2
 17292  000698  1823               	xorwf	??_interruptHandler,w,c
 17293  00069A  1024               	iorwf	??_interruptHandler+1,w,c
 17294  00069C  A4D8               	btfss	status,2,c
 17295  00069E  D007               	goto	i2l9638
 17296                           
 17297                           ; BSR set to: 0
 17298                           ;interrupt handler.c: 72: printf("planB set");
 17299  0006A0  0E6A               	movlw	low STR_12
 17300  0006A2  6E0D               	movwf	i2printf@f,c
 17301  0006A4  0EFF               	movlw	high STR_12
 17302  0006A6  6E0E               	movwf	i2printf@f+1,c
 17303  0006A8  ECAF  F011         	call	i2_printf	;wreg free
 17304                           
 17305                           ;interrupt handler.c: 73: }
 17306  0006AC  D022               	goto	i2l1398
 17307  0006AE                     i2l9638:
 17308                           
 17309                           ; BSR set to: 0
 17310                           ;interrupt handler.c: 74: else if (planB%4 == 3){
 17311  0006AE  0E03               	movlw	3
 17312  0006B0  15CC               	andwf	_planB& (0+255),w,b
 17313  0006B2  6E23               	movwf	??_interruptHandler& (0+255),c
 17314  0006B4  0E00               	movlw	0
 17315  0006B6  15CD               	andwf	(_planB+1)& (0+255),w,b
 17316  0006B8  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17317  0006BA  0E03               	movlw	3
 17318  0006BC  1823               	xorwf	??_interruptHandler,w,c
 17319  0006BE  1024               	iorwf	??_interruptHandler+1,w,c
 17320  0006C0  A4D8               	btfss	status,2,c
 17321  0006C2  D007               	goto	i2l9642
 17322                           
 17323                           ; BSR set to: 0
 17324                           ;interrupt handler.c: 75: printf("planA?");
 17325  0006C4  0EDE               	movlw	low STR_13
 17326  0006C6  6E0D               	movwf	i2printf@f,c
 17327  0006C8  0EFF               	movlw	high STR_13
 17328  0006CA  6E0E               	movwf	i2printf@f+1,c
 17329  0006CC  ECAF  F011         	call	i2_printf	;wreg free
 17330                           
 17331                           ;interrupt handler.c: 76: }
 17332  0006D0  D010               	goto	i2l1398
 17333  0006D2                     i2l9642:
 17334                           
 17335                           ; BSR set to: 0
 17336                           ;interrupt handler.c: 77: else if (planB%4 == 0){
 17337  0006D2  0E03               	movlw	3
 17338  0006D4  15CC               	andwf	_planB& (0+255),w,b
 17339  0006D6  6E23               	movwf	??_interruptHandler& (0+255),c
 17340  0006D8  0E00               	movlw	0
 17341  0006DA  15CD               	andwf	(_planB+1)& (0+255),w,b
 17342  0006DC  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17343  0006DE  5023               	movf	??_interruptHandler,w,c
 17344  0006E0  1024               	iorwf	??_interruptHandler+1,w,c
 17345  0006E2  A4D8               	btfss	status,2,c
 17346  0006E4  D006               	goto	i2l1398
 17347                           
 17348                           ; BSR set to: 0
 17349                           ;interrupt handler.c: 78: printf("planA set");
 17350  0006E6  0E60               	movlw	low STR_14
 17351  0006E8  6E0D               	movwf	i2printf@f,c
 17352  0006EA  0EFF               	movlw	high STR_14
 17353  0006EC  6E0E               	movwf	i2printf@f+1,c
 17354  0006EE  ECAF  F011         	call	i2_printf	;wreg free
 17355  0006F2                     i2l1398:
 17356                           
 17357                           ;interrupt handler.c: 79: };interrupt handler.c: 80: _delay((unsigned long)((800)*(10000
      +                          000/4000.0)));
 17358                           
 17359                           ; BSR set to: 0
 17360  0006F2  0E0B               	movlw	11
 17361  0006F4  6E24               	movwf	(??_interruptHandler+1)& (0+255),c
 17362  0006F6  0E26               	movlw	38
 17363  0006F8  6E23               	movwf	??_interruptHandler& (0+255),c
 17364  0006FA  0E5E               	movlw	94
 17365  0006FC                     i2u1363_47:
 17366  0006FC  2EE8               	decfsz	wreg,f,c
 17367  0006FE  D7FE               	bra	i2u1363_47
 17368  000700  2E23               	decfsz	??_interruptHandler& (0+255),f,c
 17369  000702  D7FC               	bra	i2u1363_47
 17370  000704  2E24               	decfsz	(??_interruptHandler+1)& (0+255),f,c
 17371  000706  D7FA               	bra	i2u1363_47
 17372                           
 17373                           ;interrupt handler.c: 81: }
 17374  000708  D073               	goto	i2l1408
 17375  00070A                     i2l9648:
 17376                           
 17377                           ;interrupt handler.c: 83: else{;interrupt handler.c: 85: if (reg == 50){
 17378  00070A  0E32               	movlw	50
 17379  00070C  0100               	movlb	0	; () banked
 17380  00070E  19D0               	xorwf	_reg& (0+255),w,b
 17381  000710  11D1               	iorwf	(_reg+1)& (0+255),w,b
 17382  000712  A4D8               	btfss	status,2,c
 17383  000714  D005               	goto	i2l9652
 17384                           
 17385                           ; BSR set to: 0
 17386                           ;interrupt handler.c: 86: reg = 0;
 17387  000716  0E00               	movlw	0
 17388  000718  6FD1               	movwf	(_reg+1)& (0+255),b
 17389  00071A  0E00               	movlw	0
 17390  00071C                     L20:
 17391  00071C  6FD0               	movwf	_reg& (0+255),b
 17392                           
 17393                           ;interrupt handler.c: 87: }
 17394  00071E  D068               	goto	i2l1408
 17395  000720                     i2l9652:
 17396                           
 17397                           ; BSR set to: 0
 17398                           ;interrupt handler.c: 88: else{;interrupt handler.c: 89: { lcdInst(0x01); _delay((unsign
      +                          ed long)((5)*(10000000/4000.0)));};
 17399  000720  0E01               	movlw	1
 17400  000722  ECB7  F02A         	call	i2_lcdInst
 17401  000726  0E11               	movlw	17
 17402  000728  6E23               	movwf	??_interruptHandler& (0+255),c
 17403  00072A  0E3A               	movlw	58
 17404  00072C                     i2u1364_47:
 17405  00072C  2EE8               	decfsz	wreg,f,c
 17406  00072E  D7FE               	bra	i2u1364_47
 17407  000730  2E23               	decfsz	??_interruptHandler& (0+255),f,c
 17408  000732  D7FC               	bra	i2u1364_47
 17409  000734  D000               	nop2	
 17410                           
 17411                           ;interrupt handler.c: 90: printf("Oops. I don't get");
 17412  000736  0E58               	movlw	low STR_8
 17413  000738  6E0D               	movwf	i2printf@f,c
 17414  00073A  0EFD               	movlw	high STR_8
 17415  00073C  6E0E               	movwf	i2printf@f+1,c
 17416  00073E  ECAF  F011         	call	i2_printf	;wreg free
 17417  000742  0EC0               	movlw	192
 17418  000744  ECB7  F02A         	call	i2_lcdInst
 17419                           
 17420                           ;interrupt handler.c: 92: printf("it... Please");
 17421  000748  0EAD               	movlw	low STR_9
 17422  00074A  6E0D               	movwf	i2printf@f,c
 17423  00074C  0EFE               	movlw	high STR_9
 17424  00074E  6E0E               	movwf	i2printf@f+1,c
 17425  000750  ECAF  F011         	call	i2_printf	;wreg free
 17426  000754  0E90               	movlw	144
 17427  000756  ECB7  F02A         	call	i2_lcdInst
 17428                           
 17429                           ;interrupt handler.c: 94: printf("Review the Menu.");
 17430  00075A  0E9D               	movlw	low STR_10
 17431  00075C  6E0D               	movwf	i2printf@f,c
 17432  00075E  0EFD               	movlw	high STR_10
 17433  000760  6E0E               	movwf	i2printf@f+1,c
 17434  000762  ECAF  F011         	call	i2_printf	;wreg free
 17435  000766  D6F1               	goto	i2l9580
 17436  000768                     i2l1372:
 17437                           
 17438                           ;interrupt handler.c: 100: else if(INT0IF){
 17439  000768  A2F2               	btfss	4082,1,c	;volatile
 17440  00076A  D042               	goto	i2l1408
 17441                           
 17442                           ;interrupt handler.c: 101: int b0 = PORTBbits.RB0;
 17443  00076C  A081               	btfss	3969,0,c	;volatile
 17444  00076E  D003               	goto	i2u933_40
 17445  000770  6A23               	clrf	??_interruptHandler& (0+255),c
 17446  000772  2A23               	incf	??_interruptHandler& (0+255),f,c
 17447  000774  D001               	goto	i2u933_48
 17448  000776                     i2u933_40:
 17449  000776  6A23               	clrf	??_interruptHandler& (0+255),c
 17450  000778                     i2u933_48:
 17451  000778  5023               	movf	??_interruptHandler,w,c
 17452  00077A  6E30               	movwf	interruptHandler@b0,c
 17453  00077C  6A31               	clrf	interruptHandler@b0+1,c
 17454                           
 17455                           ;interrupt handler.c: 102: if (b0==1){
 17456  00077E  0430               	decf	interruptHandler@b0,w,c
 17457  000780  1031               	iorwf	interruptHandler@b0+1,w,c
 17458  000782  A4D8               	btfss	status,2,c
 17459  000784  D034               	goto	i2l9674
 17460                           
 17461                           ;interrupt handler.c: 103: rotary_counter +=1;
 17462  000786  C040  F001         	movff	_rotary_counter,i2___fladd@b
 17463  00078A  C041  F002         	movff	_rotary_counter+1,i2___fladd@b+1
 17464  00078E  C042  F003         	movff	_rotary_counter+2,i2___fladd@b+2
 17465  000792  C043  F004         	movff	_rotary_counter+3,i2___fladd@b+3
 17466  000796  0E00               	movlw	0
 17467  000798  6E05               	movwf	i2___fladd@a,c
 17468  00079A  0E00               	movlw	0
 17469  00079C  6E06               	movwf	i2___fladd@a+1,c
 17470  00079E  0E80               	movlw	128
 17471  0007A0  6E07               	movwf	i2___fladd@a+2,c
 17472  0007A2  0E3F               	movlw	63
 17473  0007A4  6E08               	movwf	i2___fladd@a+3,c
 17474  0007A6  EC72  F00C         	call	i2___fladd	;wreg free
 17475  0007AA  C001  F040         	movff	?i2___fladd,_rotary_counter
 17476  0007AE  C002  F041         	movff	?i2___fladd+1,_rotary_counter+1
 17477  0007B2  C003  F042         	movff	?i2___fladd+2,_rotary_counter+2
 17478  0007B6  C004  F043         	movff	?i2___fladd+3,_rotary_counter+3
 17479                           
 17480                           ;interrupt handler.c: 104: turns_counter = rotary_counter / 334;
 17481  0007BA  C040  F001         	movff	_rotary_counter,i2___fldiv@b
 17482  0007BE  C041  F002         	movff	_rotary_counter+1,i2___fldiv@b+1
 17483  0007C2  C042  F003         	movff	_rotary_counter+2,i2___fldiv@b+2
 17484  0007C6  C043  F004         	movff	_rotary_counter+3,i2___fldiv@b+3
 17485  0007CA  0E00               	movlw	0
 17486  0007CC  6E05               	movwf	i2___fldiv@a,c
 17487  0007CE  0E00               	movlw	0
 17488  0007D0  6E06               	movwf	i2___fldiv@a+1,c
 17489  0007D2  0EA7               	movlw	167
 17490  0007D4  6E07               	movwf	i2___fldiv@a+2,c
 17491  0007D6  0E43               	movlw	67
 17492  0007D8  6E08               	movwf	i2___fldiv@a+3,c
 17493  0007DA  EC3D  F00F         	call	i2___fldiv	;wreg free
 17494  0007DE  C001  F0C8         	movff	?i2___fldiv,_turns_counter
 17495  0007E2  C002  F0C9         	movff	?i2___fldiv+1,_turns_counter+1
 17496  0007E6  C003  F0CA         	movff	?i2___fldiv+2,_turns_counter+2
 17497  0007EA  C004  F0CB         	movff	?i2___fldiv+3,_turns_counter+3
 17498  0007EE                     i2l9674:
 17499                           
 17500                           ;interrupt handler.c: 105: };interrupt handler.c: 106: INT0IF= 0;
 17501  0007EE  92F2               	bcf	4082,1,c	;volatile
 17502  0007F0                     i2l1408:
 17503  0007F0  C02F  FFF5         	movff	??_interruptHandler+12,tablat
 17504  0007F4  C02E  FFF8         	movff	??_interruptHandler+11,tblptru
 17505  0007F8  C02D  FFF7         	movff	??_interruptHandler+10,tblptrh
 17506  0007FC  C02C  FFF6         	movff	??_interruptHandler+9,tblptrl
 17507  000800  C02B  FFF4         	movff	??_interruptHandler+8,prodh
 17508  000804  C02A  FFF3         	movff	??_interruptHandler+7,prodl
 17509  000808  C029  FFDA         	movff	??_interruptHandler+6,fsr2h
 17510  00080C  C028  FFD9         	movff	??_interruptHandler+5,fsr2l
 17511  000810  9257               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17512  000812  0011               	retfie		f
 17513  000814                     __end_of_interruptHandler:
 17514                           	opt callstack 0
 17515                           
 17516 ;; *************** function i2___fldiv *****************
 17517 ;; Defined at:
 17518 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
 17519 ;; Parameters:    Size  Location     Type
 17520 ;;  b               4    0[COMRAM] void 
 17521 ;;  a               4    4[COMRAM] void 
 17522 ;; Auto vars:     Size  Location     Type
 17523 ;;  __fldiv         4   19[COMRAM] unsigned long 
 17524 ;;  __fldiv         4   12[COMRAM] unsigned long 
 17525 ;;  __fldiv         2   17[COMRAM] int 
 17526 ;;  __fldiv         1   24[COMRAM] unsigned char 
 17527 ;;  __fldiv         1   23[COMRAM] unsigned char 
 17528 ;;  __fldiv         1   16[COMRAM] unsigned char 
 17529 ;; Return value:  Size  Location     Type
 17530 ;;                  4    0[COMRAM] unsigned char 
 17531 ;; Registers used:
 17532 ;;		wreg, status,2, status,0
 17533 ;; Tracked objects:
 17534 ;;		On entry : 0/0
 17535 ;;		On exit  : 0/0
 17536 ;;		Unchanged: 0/0
 17537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17538 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17539 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17540 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17541 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17542 ;;Total ram usage:       25 bytes
 17543 ;; Hardware stack levels used:    1
 17544 ;; This function calls:
 17545 ;;		Nothing
 17546 ;; This function is called by:
 17547 ;;		_interruptHandler
 17548 ;; This function uses a non-reentrant model
 17549 ;;
 17550                           
 17551                           	psect	text85
 17552  001E7A                     __ptext85:
 17553                           	opt callstack 0
 17554  001E7A                     i2___fldiv:
 17555                           	opt callstack 21
 17556                           
 17557                           ;incstack = 0
 17558  001E7A  5004               	movf	i2___fldiv@b+3,w,c
 17559  001E7C  0B80               	andlw	128
 17560  001E7E  6E11               	movwf	i2___fldiv@sign,c
 17561  001E80  5004               	movf	i2___fldiv@b+3,w,c
 17562  001E82  2404               	addwf	i2___fldiv@b+3,w,c
 17563  001E84  6E18               	movwf	i2___fldiv@bexp,c
 17564  001E86  BE03               	btfsc	i2___fldiv@b+2,7,c
 17565  001E88  8018               	bsf	i2___fldiv@bexp,0,c
 17566  001E8A  5018               	movf	i2___fldiv@bexp,w,c
 17567  001E8C  B4D8               	btfsc	status,2,c
 17568  001E8E  D00D               	goto	i2l9240
 17569  001E90  2818               	incf	i2___fldiv@bexp,w,c
 17570  001E92  A4D8               	btfss	status,2,c
 17571  001E94  D008               	goto	i2l9236
 17572  001E96  0E00               	movlw	0
 17573  001E98  6E01               	movwf	i2___fldiv@b,c
 17574  001E9A  0E00               	movlw	0
 17575  001E9C  6E02               	movwf	i2___fldiv@b+1,c
 17576  001E9E  0E00               	movlw	0
 17577  001EA0  6E03               	movwf	i2___fldiv@b+2,c
 17578  001EA2  0E00               	movlw	0
 17579  001EA4  6E04               	movwf	i2___fldiv@b+3,c
 17580  001EA6                     i2l9236:
 17581  001EA6  8E03               	bsf	i2___fldiv@b+2,7,c
 17582  001EA8  D006               	goto	L21
 17583  001EAA                     i2l9240:
 17584  001EAA  0E00               	movlw	0
 17585  001EAC  6E01               	movwf	i2___fldiv@b,c
 17586  001EAE  0E00               	movlw	0
 17587  001EB0  6E02               	movwf	i2___fldiv@b+1,c
 17588  001EB2  0E00               	movlw	0
 17589  001EB4  6E03               	movwf	i2___fldiv@b+2,c
 17590  001EB6                     L21:
 17591  001EB6  0E00               	movlw	0
 17592  001EB8  6E04               	movwf	i2___fldiv@b+3,c
 17593  001EBA  5008               	movf	i2___fldiv@a+3,w,c
 17594  001EBC  0B80               	andlw	128
 17595  001EBE  1A11               	xorwf	i2___fldiv@sign,f,c
 17596  001EC0  5008               	movf	i2___fldiv@a+3,w,c
 17597  001EC2  2408               	addwf	i2___fldiv@a+3,w,c
 17598  001EC4  6E19               	movwf	i2___fldiv@aexp,c
 17599  001EC6  BE07               	btfsc	i2___fldiv@a+2,7,c
 17600  001EC8  8019               	bsf	i2___fldiv@aexp,0,c
 17601  001ECA  5019               	movf	i2___fldiv@aexp,w,c
 17602  001ECC  B4D8               	btfsc	status,2,c
 17603  001ECE  D00D               	goto	i2l9260
 17604  001ED0  2819               	incf	i2___fldiv@aexp,w,c
 17605  001ED2  A4D8               	btfss	status,2,c
 17606  001ED4  D008               	goto	i2l9256
 17607  001ED6  0E00               	movlw	0
 17608  001ED8  6E05               	movwf	i2___fldiv@a,c
 17609  001EDA  0E00               	movlw	0
 17610  001EDC  6E06               	movwf	i2___fldiv@a+1,c
 17611  001EDE  0E00               	movlw	0
 17612  001EE0  6E07               	movwf	i2___fldiv@a+2,c
 17613  001EE2  0E00               	movlw	0
 17614  001EE4  6E08               	movwf	i2___fldiv@a+3,c
 17615  001EE6                     i2l9256:
 17616  001EE6  8E07               	bsf	i2___fldiv@a+2,7,c
 17617  001EE8  D006               	goto	L22
 17618  001EEA                     i2l9260:
 17619  001EEA  0E00               	movlw	0
 17620  001EEC  6E05               	movwf	i2___fldiv@a,c
 17621  001EEE  0E00               	movlw	0
 17622  001EF0  6E06               	movwf	i2___fldiv@a+1,c
 17623  001EF2  0E00               	movlw	0
 17624  001EF4  6E07               	movwf	i2___fldiv@a+2,c
 17625  001EF6                     L22:
 17626  001EF6  0E00               	movlw	0
 17627  001EF8  6E08               	movwf	i2___fldiv@a+3,c
 17628  001EFA  5005               	movf	i2___fldiv@a,w,c
 17629  001EFC  1006               	iorwf	i2___fldiv@a+1,w,c
 17630  001EFE  1007               	iorwf	i2___fldiv@a+2,w,c
 17631  001F00  1008               	iorwf	i2___fldiv@a+3,w,c
 17632  001F02  A4D8               	btfss	status,2,c
 17633  001F04  D017               	goto	i2l9274
 17634  001F06  0E00               	movlw	0
 17635  001F08  6E01               	movwf	i2___fldiv@b,c
 17636  001F0A  0E00               	movlw	0
 17637  001F0C  6E02               	movwf	i2___fldiv@b+1,c
 17638  001F0E  0E00               	movlw	0
 17639  001F10  6E03               	movwf	i2___fldiv@b+2,c
 17640  001F12  0E00               	movlw	0
 17641  001F14  6E04               	movwf	i2___fldiv@b+3,c
 17642  001F16  0E80               	movlw	128
 17643  001F18  1203               	iorwf	i2___fldiv@b+2,f,c
 17644  001F1A  0E7F               	movlw	127
 17645  001F1C  1204               	iorwf	i2___fldiv@b+3,f,c
 17646  001F1E                     i2l9268:
 17647  001F1E  5011               	movf	i2___fldiv@sign,w,c
 17648  001F20  1204               	iorwf	i2___fldiv@b+3,f,c
 17649  001F22  C001  F001         	movff	i2___fldiv@b,?i2___fldiv
 17650  001F26  C002  F002         	movff	i2___fldiv@b+1,?i2___fldiv+1
 17651  001F2A  C003  F003         	movff	i2___fldiv@b+2,?i2___fldiv+2
 17652  001F2E  C004  F004         	movff	i2___fldiv@b+3,?i2___fldiv+3
 17653  001F32  0012               	return	
 17654  001F34                     i2l9274:
 17655  001F34  5018               	movf	i2___fldiv@bexp,w,c
 17656  001F36  A4D8               	btfss	status,2,c
 17657  001F38  D009               	goto	i2l9282
 17658  001F3A  0E00               	movlw	0
 17659  001F3C  6E01               	movwf	?i2___fldiv,c
 17660  001F3E  0E00               	movlw	0
 17661  001F40  6E02               	movwf	?i2___fldiv+1,c
 17662  001F42  0E00               	movlw	0
 17663  001F44  6E03               	movwf	?i2___fldiv+2,c
 17664  001F46  0E00               	movlw	0
 17665  001F48  6E04               	movwf	?i2___fldiv+3,c
 17666  001F4A  0012               	return	
 17667  001F4C                     i2l9282:
 17668  001F4C  5019               	movf	i2___fldiv@aexp,w,c
 17669  001F4E  C018  F009         	movff	i2___fldiv@bexp,??i2___fldiv
 17670  001F52  6A0A               	clrf	(??i2___fldiv+1)& (0+255),c
 17671  001F54  5E09               	subwf	??i2___fldiv,f,c
 17672  001F56  0E00               	movlw	0
 17673  001F58  5A0A               	subwfb	??i2___fldiv+1,f,c
 17674  001F5A  0E7F               	movlw	127
 17675  001F5C  2409               	addwf	??i2___fldiv,w,c
 17676  001F5E  6E12               	movwf	i2___fldiv@new_exp,c
 17677  001F60  0E00               	movlw	0
 17678  001F62  200A               	addwfc	??i2___fldiv+1,w,c
 17679  001F64  6E13               	movwf	i2___fldiv@new_exp+1,c
 17680  001F66  C001  F00D         	movff	i2___fldiv@b,i2___fldiv@rem
 17681  001F6A  C002  F00E         	movff	i2___fldiv@b+1,i2___fldiv@rem+1
 17682  001F6E  C003  F00F         	movff	i2___fldiv@b+2,i2___fldiv@rem+2
 17683  001F72  C004  F010         	movff	i2___fldiv@b+3,i2___fldiv@rem+3
 17684  001F76  0E00               	movlw	0
 17685  001F78  6E01               	movwf	i2___fldiv@b,c
 17686  001F7A  0E00               	movlw	0
 17687  001F7C  6E02               	movwf	i2___fldiv@b+1,c
 17688  001F7E  0E00               	movlw	0
 17689  001F80  6E03               	movwf	i2___fldiv@b+2,c
 17690  001F82  0E00               	movlw	0
 17691  001F84  6E04               	movwf	i2___fldiv@b+3,c
 17692  001F86  0E00               	movlw	0
 17693  001F88  6E14               	movwf	i2___fldiv@grs,c
 17694  001F8A  0E00               	movlw	0
 17695  001F8C  6E15               	movwf	i2___fldiv@grs+1,c
 17696  001F8E  0E00               	movlw	0
 17697  001F90  6E16               	movwf	i2___fldiv@grs+2,c
 17698  001F92  0E00               	movlw	0
 17699  001F94  6E17               	movwf	i2___fldiv@grs+3,c
 17700  001F96  0E00               	movlw	0
 17701  001F98  6E19               	movwf	i2___fldiv@aexp,c
 17702  001F9A  D028               	goto	i2l2344
 17703  001F9C                     i2l9292:
 17704  001F9C  5019               	movf	i2___fldiv@aexp,w,c
 17705  001F9E  B4D8               	btfsc	status,2,c
 17706  001FA0  D011               	goto	i2l9300
 17707  001FA2  90D8               	bcf	status,0,c
 17708  001FA4  360D               	rlcf	i2___fldiv@rem,f,c
 17709  001FA6  360E               	rlcf	i2___fldiv@rem+1,f,c
 17710  001FA8  360F               	rlcf	i2___fldiv@rem+2,f,c
 17711  001FAA  3610               	rlcf	i2___fldiv@rem+3,f,c
 17712  001FAC  90D8               	bcf	status,0,c
 17713  001FAE  3601               	rlcf	i2___fldiv@b,f,c
 17714  001FB0  3602               	rlcf	i2___fldiv@b+1,f,c
 17715  001FB2  3603               	rlcf	i2___fldiv@b+2,f,c
 17716  001FB4  3604               	rlcf	i2___fldiv@b+3,f,c
 17717  001FB6  BE17               	btfsc	i2___fldiv@grs+3,7,c
 17718  001FB8  8001               	bsf	i2___fldiv@b,0,c
 17719  001FBA  90D8               	bcf	status,0,c
 17720  001FBC  3614               	rlcf	i2___fldiv@grs,f,c
 17721  001FBE  3615               	rlcf	i2___fldiv@grs+1,f,c
 17722  001FC0  3616               	rlcf	i2___fldiv@grs+2,f,c
 17723  001FC2  3617               	rlcf	i2___fldiv@grs+3,f,c
 17724  001FC4                     i2l9300:
 17725  001FC4  5005               	movf	i2___fldiv@a,w,c
 17726  001FC6  5C0D               	subwf	i2___fldiv@rem,w,c
 17727  001FC8  5006               	movf	i2___fldiv@a+1,w,c
 17728  001FCA  580E               	subwfb	i2___fldiv@rem+1,w,c
 17729  001FCC  5007               	movf	i2___fldiv@a+2,w,c
 17730  001FCE  580F               	subwfb	i2___fldiv@rem+2,w,c
 17731  001FD0  5008               	movf	i2___fldiv@a+3,w,c
 17732  001FD2  5810               	subwfb	i2___fldiv@rem+3,w,c
 17733  001FD4  A0D8               	btfss	status,0,c
 17734  001FD6  D009               	goto	i2l9306
 17735  001FD8  8C17               	bsf	i2___fldiv@grs+3,6,c
 17736  001FDA  5005               	movf	i2___fldiv@a,w,c
 17737  001FDC  5E0D               	subwf	i2___fldiv@rem,f,c
 17738  001FDE  5006               	movf	i2___fldiv@a+1,w,c
 17739  001FE0  5A0E               	subwfb	i2___fldiv@rem+1,f,c
 17740  001FE2  5007               	movf	i2___fldiv@a+2,w,c
 17741  001FE4  5A0F               	subwfb	i2___fldiv@rem+2,f,c
 17742  001FE6  5008               	movf	i2___fldiv@a+3,w,c
 17743  001FE8  5A10               	subwfb	i2___fldiv@rem+3,f,c
 17744  001FEA                     i2l9306:
 17745  001FEA  2A19               	incf	i2___fldiv@aexp,f,c
 17746  001FEC                     i2l2344:
 17747  001FEC  0E19               	movlw	25
 17748  001FEE  6419               	cpfsgt	i2___fldiv@aexp,c
 17749  001FF0  D7D5               	goto	i2l9292
 17750  001FF2  500D               	movf	i2___fldiv@rem,w,c
 17751  001FF4  100E               	iorwf	i2___fldiv@rem+1,w,c
 17752  001FF6  100F               	iorwf	i2___fldiv@rem+2,w,c
 17753  001FF8  1010               	iorwf	i2___fldiv@rem+3,w,c
 17754  001FFA  B4D8               	btfsc	status,2,c
 17755  001FFC  D011               	goto	i2l9318
 17756  001FFE  8014               	bsf	i2___fldiv@grs,0,c
 17757  002000  D00F               	goto	i2l9318
 17758  002002                     i2l9312:
 17759  002002  90D8               	bcf	status,0,c
 17760  002004  3601               	rlcf	i2___fldiv@b,f,c
 17761  002006  3602               	rlcf	i2___fldiv@b+1,f,c
 17762  002008  3603               	rlcf	i2___fldiv@b+2,f,c
 17763  00200A  3604               	rlcf	i2___fldiv@b+3,f,c
 17764  00200C  BE17               	btfsc	i2___fldiv@grs+3,7,c
 17765  00200E  8001               	bsf	i2___fldiv@b,0,c
 17766  002010  90D8               	bcf	status,0,c
 17767  002012  3614               	rlcf	i2___fldiv@grs,f,c
 17768  002014  3615               	rlcf	i2___fldiv@grs+1,f,c
 17769  002016  3616               	rlcf	i2___fldiv@grs+2,f,c
 17770  002018  3617               	rlcf	i2___fldiv@grs+3,f,c
 17771  00201A  0612               	decf	i2___fldiv@new_exp,f,c
 17772  00201C  A0D8               	btfss	status,0,c
 17773  00201E  0613               	decf	i2___fldiv@new_exp+1,f,c
 17774  002020                     i2l9318:
 17775  002020  AE03               	btfss	i2___fldiv@b+2,7,c
 17776  002022  D7EF               	goto	i2l9312
 17777  002024  0E00               	movlw	0
 17778  002026  6E19               	movwf	i2___fldiv@aexp,c
 17779  002028  AE17               	btfss	i2___fldiv@grs+3,7,c
 17780  00202A  D017               	goto	i2l2355
 17781  00202C  0EFF               	movlw	255
 17782  00202E  1414               	andwf	i2___fldiv@grs,w,c
 17783  002030  6E09               	movwf	??i2___fldiv& (0+255),c
 17784  002032  0EFF               	movlw	255
 17785  002034  1415               	andwf	i2___fldiv@grs+1,w,c
 17786  002036  6E0A               	movwf	(??i2___fldiv+1)& (0+255),c
 17787  002038  0EFF               	movlw	255
 17788  00203A  1416               	andwf	i2___fldiv@grs+2,w,c
 17789  00203C  6E0B               	movwf	(??i2___fldiv+2)& (0+255),c
 17790  00203E  0E7F               	movlw	127
 17791  002040  1417               	andwf	i2___fldiv@grs+3,w,c
 17792  002042  6E0C               	movwf	(??i2___fldiv+3)& (0+255),c
 17793  002044  5009               	movf	??i2___fldiv,w,c
 17794  002046  100A               	iorwf	??i2___fldiv+1,w,c
 17795  002048  100B               	iorwf	??i2___fldiv+2,w,c
 17796  00204A  100C               	iorwf	??i2___fldiv+3,w,c
 17797  00204C  B4D8               	btfsc	status,2,c
 17798  00204E  D003               	goto	i2l2356
 17799  002050                     i2u866_40:
 17800  002050  0E01               	movlw	1
 17801  002052  6E19               	movwf	i2___fldiv@aexp,c
 17802  002054  D002               	goto	i2l2355
 17803  002056                     i2l2356:
 17804  002056  B001               	btfsc	i2___fldiv@b,0,c
 17805  002058  D7FB               	goto	i2u866_40
 17806  00205A                     i2l2355:
 17807  00205A  5019               	movf	i2___fldiv@aexp,w,c
 17808  00205C  B4D8               	btfsc	status,2,c
 17809  00205E  D01F               	goto	i2l9338
 17810  002060  0E01               	movlw	1
 17811  002062  2601               	addwf	i2___fldiv@b,f,c
 17812  002064  0E00               	movlw	0
 17813  002066  2202               	addwfc	i2___fldiv@b+1,f,c
 17814  002068  2203               	addwfc	i2___fldiv@b+2,f,c
 17815  00206A  2204               	addwfc	i2___fldiv@b+3,f,c
 17816  00206C  A004               	btfss	i2___fldiv@b+3,0,c
 17817  00206E  D017               	goto	i2l9338
 17818  002070  C001  F009         	movff	i2___fldiv@b,??i2___fldiv
 17819  002074  C002  F00A         	movff	i2___fldiv@b+1,??i2___fldiv+1
 17820  002078  C003  F00B         	movff	i2___fldiv@b+2,??i2___fldiv+2
 17821  00207C  C004  F00C         	movff	i2___fldiv@b+3,??i2___fldiv+3
 17822  002080  340C               	rlcf	??i2___fldiv+3,w,c
 17823  002082  320C               	rrcf	??i2___fldiv+3,f,c
 17824  002084  320B               	rrcf	??i2___fldiv+2,f,c
 17825  002086  320A               	rrcf	??i2___fldiv+1,f,c
 17826  002088  3209               	rrcf	??i2___fldiv,f,c
 17827  00208A  C009  F001         	movff	??i2___fldiv,i2___fldiv@b
 17828  00208E  C00A  F002         	movff	??i2___fldiv+1,i2___fldiv@b+1
 17829  002092  C00B  F003         	movff	??i2___fldiv+2,i2___fldiv@b+2
 17830  002096  C00C  F004         	movff	??i2___fldiv+3,i2___fldiv@b+3
 17831  00209A  4A12               	infsnz	i2___fldiv@new_exp,f,c
 17832  00209C  2A13               	incf	i2___fldiv@new_exp+1,f,c
 17833  00209E                     i2l9338:
 17834  00209E  BE13               	btfsc	i2___fldiv@new_exp+1,7,c
 17835  0020A0  D010               	goto	i2l9342
 17836  0020A2  5013               	movf	i2___fldiv@new_exp+1,w,c
 17837  0020A4  E103               	bnz	i2u870_40
 17838  0020A6  2812               	incf	i2___fldiv@new_exp,w,c
 17839  0020A8  A0D8               	btfss	status,0,c
 17840  0020AA  D00B               	goto	i2l9342
 17841  0020AC                     i2u870_40:
 17842  0020AC  0E00               	movlw	0
 17843  0020AE  6E13               	movwf	i2___fldiv@new_exp+1,c
 17844  0020B0  6812               	setf	i2___fldiv@new_exp,c
 17845  0020B2  0E00               	movlw	0
 17846  0020B4  6E01               	movwf	i2___fldiv@b,c
 17847  0020B6  0E00               	movlw	0
 17848  0020B8  6E02               	movwf	i2___fldiv@b+1,c
 17849  0020BA  0E00               	movlw	0
 17850  0020BC  6E03               	movwf	i2___fldiv@b+2,c
 17851  0020BE  0E00               	movlw	0
 17852  0020C0  6E04               	movwf	i2___fldiv@b+3,c
 17853  0020C2                     i2l9342:
 17854  0020C2  BE13               	btfsc	i2___fldiv@new_exp+1,7,c
 17855  0020C4  D005               	goto	i2u871_40
 17856  0020C6  5013               	movf	i2___fldiv@new_exp+1,w,c
 17857  0020C8  E111               	bnz	i2l9346
 17858  0020CA  0412               	decf	i2___fldiv@new_exp,w,c
 17859  0020CC  B0D8               	btfsc	status,0,c
 17860  0020CE  D00E               	goto	i2l9346
 17861  0020D0                     i2u871_40:
 17862  0020D0  0E00               	movlw	0
 17863  0020D2  6E13               	movwf	i2___fldiv@new_exp+1,c
 17864  0020D4  0E00               	movlw	0
 17865  0020D6  6E12               	movwf	i2___fldiv@new_exp,c
 17866  0020D8  0E00               	movlw	0
 17867  0020DA  6E01               	movwf	i2___fldiv@b,c
 17868  0020DC  0E00               	movlw	0
 17869  0020DE  6E02               	movwf	i2___fldiv@b+1,c
 17870  0020E0  0E00               	movlw	0
 17871  0020E2  6E03               	movwf	i2___fldiv@b+2,c
 17872  0020E4  0E00               	movlw	0
 17873  0020E6  6E04               	movwf	i2___fldiv@b+3,c
 17874  0020E8  0E00               	movlw	0
 17875  0020EA  6E11               	movwf	i2___fldiv@sign,c
 17876  0020EC                     i2l9346:
 17877  0020EC  C012  F018         	movff	i2___fldiv@new_exp,i2___fldiv@bexp
 17878  0020F0  A018               	btfss	i2___fldiv@bexp,0,c
 17879  0020F2  D002               	goto	i2l9352
 17880  0020F4  8E03               	bsf	i2___fldiv@b+2,7,c
 17881  0020F6  D001               	goto	i2l9354
 17882  0020F8                     i2l9352:
 17883  0020F8  9E03               	bcf	i2___fldiv@b+2,7,c
 17884  0020FA                     i2l9354:
 17885  0020FA  90D8               	bcf	status,0,c
 17886  0020FC  3018               	rrcf	i2___fldiv@bexp,w,c
 17887  0020FE  6E04               	movwf	i2___fldiv@b+3,c
 17888  002100  D70E               	goto	i2l9268
 17889  002102                     __end_ofi2___fldiv:
 17890                           	opt callstack 0
 17891                           
 17892 ;; *************** function i2___fladd *****************
 17893 ;; Defined at:
 17894 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
 17895 ;; Parameters:    Size  Location     Type
 17896 ;;  b               4    0[COMRAM] unsigned char 
 17897 ;;  a               4    4[COMRAM] unsigned char 
 17898 ;; Auto vars:     Size  Location     Type
 17899 ;;  __fladd         1   15[COMRAM] unsigned char 
 17900 ;;  __fladd         1   14[COMRAM] unsigned char 
 17901 ;;  __fladd         1   13[COMRAM] unsigned char 
 17902 ;;  __fladd         1   12[COMRAM] unsigned char 
 17903 ;; Return value:  Size  Location     Type
 17904 ;;                  4    0[COMRAM] unsigned char 
 17905 ;; Registers used:
 17906 ;;		wreg, status,2, status,0
 17907 ;; Tracked objects:
 17908 ;;		On entry : 0/0
 17909 ;;		On exit  : 0/0
 17910 ;;		Unchanged: 0/0
 17911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17912 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17913 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17914 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17915 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17916 ;;Total ram usage:       16 bytes
 17917 ;; Hardware stack levels used:    1
 17918 ;; This function calls:
 17919 ;;		Nothing
 17920 ;; This function is called by:
 17921 ;;		_interruptHandler
 17922 ;; This function uses a non-reentrant model
 17923 ;;
 17924                           
 17925                           	psect	text86
 17926  0018E4                     __ptext86:
 17927                           	opt callstack 0
 17928  0018E4                     i2___fladd:
 17929                           	opt callstack 21
 17930                           
 17931                           ;incstack = 0
 17932  0018E4  5004               	movf	i2___fladd@b+3,w,c
 17933  0018E6  0B80               	andlw	128
 17934  0018E8  6E0D               	movwf	i2___fladd@signs,c
 17935  0018EA  5004               	movf	i2___fladd@b+3,w,c
 17936  0018EC  2404               	addwf	i2___fladd@b+3,w,c
 17937  0018EE  6E0F               	movwf	i2___fladd@bexp,c
 17938  0018F0  BE03               	btfsc	i2___fladd@b+2,7,c
 17939  0018F2  800F               	bsf	i2___fladd@bexp,0,c
 17940  0018F4  500F               	movf	i2___fladd@bexp,w,c
 17941  0018F6  B4D8               	btfsc	status,2,c
 17942  0018F8  D00D               	goto	i2l9038
 17943  0018FA  280F               	incf	i2___fladd@bexp,w,c
 17944  0018FC  A4D8               	btfss	status,2,c
 17945  0018FE  D008               	goto	i2l9034
 17946  001900  0E00               	movlw	0
 17947  001902  6E01               	movwf	i2___fladd@b,c
 17948  001904  0E00               	movlw	0
 17949  001906  6E02               	movwf	i2___fladd@b+1,c
 17950  001908  0E00               	movlw	0
 17951  00190A  6E03               	movwf	i2___fladd@b+2,c
 17952  00190C  0E00               	movlw	0
 17953  00190E  6E04               	movwf	i2___fladd@b+3,c
 17954  001910                     i2l9034:
 17955  001910  8E03               	bsf	i2___fladd@b+2,7,c
 17956  001912  D006               	goto	L23
 17957  001914                     i2l9038:
 17958  001914  0E00               	movlw	0
 17959  001916  6E01               	movwf	i2___fladd@b,c
 17960  001918  0E00               	movlw	0
 17961  00191A  6E02               	movwf	i2___fladd@b+1,c
 17962  00191C  0E00               	movlw	0
 17963  00191E  6E03               	movwf	i2___fladd@b+2,c
 17964  001920                     L23:
 17965  001920  0E00               	movlw	0
 17966  001922  6E04               	movwf	i2___fladd@b+3,c
 17967  001924  5008               	movf	i2___fladd@a+3,w,c
 17968  001926  0B80               	andlw	128
 17969  001928  6E0E               	movwf	i2___fladd@aexp,c
 17970  00192A  500D               	movf	i2___fladd@signs,w,c
 17971  00192C  180E               	xorwf	i2___fladd@aexp,w,c
 17972  00192E  A4D8               	btfss	status,2,c
 17973  001930  8C0D               	bsf	i2___fladd@signs,6,c
 17974  001932  5008               	movf	i2___fladd@a+3,w,c
 17975  001934  2408               	addwf	i2___fladd@a+3,w,c
 17976  001936  6E0E               	movwf	i2___fladd@aexp,c
 17977  001938  BE07               	btfsc	i2___fladd@a+2,7,c
 17978  00193A  800E               	bsf	i2___fladd@aexp,0,c
 17979  00193C  500E               	movf	i2___fladd@aexp,w,c
 17980  00193E  B4D8               	btfsc	status,2,c
 17981  001940  D00D               	goto	i2l9062
 17982  001942  280E               	incf	i2___fladd@aexp,w,c
 17983  001944  A4D8               	btfss	status,2,c
 17984  001946  D008               	goto	i2l9058
 17985  001948  0E00               	movlw	0
 17986  00194A  6E05               	movwf	i2___fladd@a,c
 17987  00194C  0E00               	movlw	0
 17988  00194E  6E06               	movwf	i2___fladd@a+1,c
 17989  001950  0E00               	movlw	0
 17990  001952  6E07               	movwf	i2___fladd@a+2,c
 17991  001954  0E00               	movlw	0
 17992  001956  6E08               	movwf	i2___fladd@a+3,c
 17993  001958                     i2l9058:
 17994  001958  8E07               	bsf	i2___fladd@a+2,7,c
 17995  00195A  D006               	goto	L24
 17996  00195C                     i2l9062:
 17997  00195C  0E00               	movlw	0
 17998  00195E  6E05               	movwf	i2___fladd@a,c
 17999  001960  0E00               	movlw	0
 18000  001962  6E06               	movwf	i2___fladd@a+1,c
 18001  001964  0E00               	movlw	0
 18002  001966  6E07               	movwf	i2___fladd@a+2,c
 18003  001968                     L24:
 18004  001968  0E00               	movlw	0
 18005  00196A  6E08               	movwf	i2___fladd@a+3,c
 18006  00196C  500F               	movf	i2___fladd@bexp,w,c
 18007  00196E  5C0E               	subwf	i2___fladd@aexp,w,c
 18008  001970  B0D8               	btfsc	status,0,c
 18009  001972  D022               	goto	i2l9100
 18010  001974  AC0D               	btfss	i2___fladd@signs,6,c
 18011  001976  D002               	goto	i2l9070
 18012  001978  0E80               	movlw	128
 18013  00197A  1A0D               	xorwf	i2___fladd@signs,f,c
 18014  00197C                     i2l9070:
 18015  00197C  C00F  F010         	movff	i2___fladd@bexp,i2___fladd@grs
 18016  001980  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 18017  001984  C010  F00E         	movff	i2___fladd@grs,i2___fladd@aexp
 18018  001988  C001  F010         	movff	i2___fladd@b,i2___fladd@grs
 18019  00198C  C005  F001         	movff	i2___fladd@a,i2___fladd@b
 18020  001990  C010  F005         	movff	i2___fladd@grs,i2___fladd@a
 18021  001994  C002  F010         	movff	i2___fladd@b+1,i2___fladd@grs
 18022  001998  C006  F002         	movff	i2___fladd@a+1,i2___fladd@b+1
 18023  00199C  C010  F006         	movff	i2___fladd@grs,i2___fladd@a+1
 18024  0019A0  C003  F010         	movff	i2___fladd@b+2,i2___fladd@grs
 18025  0019A4  C007  F003         	movff	i2___fladd@a+2,i2___fladd@b+2
 18026  0019A8  C010  F007         	movff	i2___fladd@grs,i2___fladd@a+2
 18027  0019AC  C004  F010         	movff	i2___fladd@b+3,i2___fladd@grs
 18028  0019B0  C008  F004         	movff	i2___fladd@a+3,i2___fladd@b+3
 18029  0019B4  C010  F008         	movff	i2___fladd@grs,i2___fladd@a+3
 18030  0019B8                     i2l9100:
 18031  0019B8  0E00               	movlw	0
 18032  0019BA  6E10               	movwf	i2___fladd@grs,c
 18033  0019BC  500F               	movf	i2___fladd@bexp,w,c
 18034  0019BE  C00E  F009         	movff	i2___fladd@aexp,??i2___fladd
 18035  0019C2  6A0A               	clrf	(??i2___fladd+1)& (0+255),c
 18036  0019C4  5E09               	subwf	??i2___fladd,f,c
 18037  0019C6  0E00               	movlw	0
 18038  0019C8  5A0A               	subwfb	??i2___fladd+1,f,c
 18039  0019CA  BE0A               	btfsc	??i2___fladd+1,7,c
 18040  0019CC  D02C               	goto	i2l2289
 18041  0019CE  500A               	movf	??i2___fladd+1,w,c
 18042  0019D0  E104               	bnz	i2u820_40
 18043  0019D2  0E1A               	movlw	26
 18044  0019D4  5C09               	subwf	??i2___fladd,w,c
 18045  0019D6  A0D8               	btfss	status,0,c
 18046  0019D8  D026               	goto	i2l2289
 18047  0019DA                     i2u820_40:
 18048  0019DA  5001               	movf	i2___fladd@b,w,c
 18049  0019DC  1002               	iorwf	i2___fladd@b+1,w,c
 18050  0019DE  1003               	iorwf	i2___fladd@b+2,w,c
 18051  0019E0  1004               	iorwf	i2___fladd@b+3,w,c
 18052  0019E2  B4D8               	btfsc	status,2,c
 18053  0019E4  D002               	goto	i2u821_40
 18054  0019E6  0E01               	movlw	1
 18055  0019E8  D001               	goto	i2u822_40
 18056  0019EA                     i2u821_40:
 18057  0019EA  0E00               	movlw	0
 18058  0019EC                     i2u822_40:
 18059  0019EC  6E10               	movwf	i2___fladd@grs,c
 18060  0019EE  0E00               	movlw	0
 18061  0019F0  6E01               	movwf	i2___fladd@b,c
 18062  0019F2  0E00               	movlw	0
 18063  0019F4  6E02               	movwf	i2___fladd@b+1,c
 18064  0019F6  0E00               	movlw	0
 18065  0019F8  6E03               	movwf	i2___fladd@b+2,c
 18066  0019FA  0E00               	movlw	0
 18067  0019FC  6E04               	movwf	i2___fladd@b+3,c
 18068  0019FE  C00E  F00F         	movff	i2___fladd@aexp,i2___fladd@bexp
 18069  001A02  D015               	goto	i2u825_40
 18070  001A04                     i2l2290:
 18071  001A04  A010               	btfss	i2___fladd@grs,0,c
 18072  001A06  D005               	goto	i2l9112
 18073  001A08  90D8               	bcf	status,0,c
 18074  001A0A  3010               	rrcf	i2___fladd@grs,w,c
 18075  001A0C  0901               	iorlw	1
 18076  001A0E  6E10               	movwf	i2___fladd@grs,c
 18077  001A10  D002               	goto	i2l9114
 18078  001A12                     i2l9112:
 18079  001A12  90D8               	bcf	status,0,c
 18080  001A14  3210               	rrcf	i2___fladd@grs,f,c
 18081  001A16                     i2l9114:
 18082  001A16  B001               	btfsc	i2___fladd@b,0,c
 18083  001A18  8E10               	bsf	i2___fladd@grs,7,c
 18084  001A1A  3404               	rlcf	i2___fladd@b+3,w,c
 18085  001A1C  3204               	rrcf	i2___fladd@b+3,f,c
 18086  001A1E  3203               	rrcf	i2___fladd@b+2,f,c
 18087  001A20  3202               	rrcf	i2___fladd@b+1,f,c
 18088  001A22  3201               	rrcf	i2___fladd@b,f,c
 18089  001A24  2A0F               	incf	i2___fladd@bexp,f,c
 18090  001A26                     i2l2289:
 18091  001A26  500E               	movf	i2___fladd@aexp,w,c
 18092  001A28  5C0F               	subwf	i2___fladd@bexp,w,c
 18093  001A2A  A0D8               	btfss	status,0,c
 18094  001A2C  D7EB               	goto	i2l2290
 18095  001A2E                     i2u825_40:
 18096  001A2E  BC0D               	btfsc	i2___fladd@signs,6,c
 18097  001A30  D028               	goto	i2l9146
 18098  001A32  500F               	movf	i2___fladd@bexp,w,c
 18099  001A34  A4D8               	btfss	status,2,c
 18100  001A36  D009               	goto	i2l9128
 18101  001A38  0E00               	movlw	0
 18102  001A3A  6E01               	movwf	?i2___fladd,c
 18103  001A3C  0E00               	movlw	0
 18104  001A3E  6E02               	movwf	?i2___fladd+1,c
 18105  001A40  0E00               	movlw	0
 18106  001A42  6E03               	movwf	?i2___fladd+2,c
 18107  001A44  0E00               	movlw	0
 18108  001A46  6E04               	movwf	?i2___fladd+3,c
 18109  001A48  0012               	return	
 18110  001A4A                     i2l9128:
 18111  001A4A  5005               	movf	i2___fladd@a,w,c
 18112  001A4C  2601               	addwf	i2___fladd@b,f,c
 18113  001A4E  5006               	movf	i2___fladd@a+1,w,c
 18114  001A50  2202               	addwfc	i2___fladd@b+1,f,c
 18115  001A52  5007               	movf	i2___fladd@a+2,w,c
 18116  001A54  2203               	addwfc	i2___fladd@b+2,f,c
 18117  001A56  5008               	movf	i2___fladd@a+3,w,c
 18118  001A58  2204               	addwfc	i2___fladd@b+3,f,c
 18119  001A5A  A004               	btfss	i2___fladd@b+3,0,c
 18120  001A5C  D071               	goto	i2u838_40
 18121  001A5E  A010               	btfss	i2___fladd@grs,0,c
 18122  001A60  D005               	goto	i2l9136
 18123  001A62  90D8               	bcf	status,0,c
 18124  001A64  3010               	rrcf	i2___fladd@grs,w,c
 18125  001A66  0901               	iorlw	1
 18126  001A68  6E10               	movwf	i2___fladd@grs,c
 18127  001A6A  D002               	goto	i2l9138
 18128  001A6C                     i2l9136:
 18129  001A6C  90D8               	bcf	status,0,c
 18130  001A6E  3210               	rrcf	i2___fladd@grs,f,c
 18131  001A70                     i2l9138:
 18132  001A70  B001               	btfsc	i2___fladd@b,0,c
 18133  001A72  8E10               	bsf	i2___fladd@grs,7,c
 18134  001A74  3404               	rlcf	i2___fladd@b+3,w,c
 18135  001A76  3204               	rrcf	i2___fladd@b+3,f,c
 18136  001A78  3203               	rrcf	i2___fladd@b+2,f,c
 18137  001A7A  3202               	rrcf	i2___fladd@b+1,f,c
 18138  001A7C  3201               	rrcf	i2___fladd@b,f,c
 18139  001A7E  2A0F               	incf	i2___fladd@bexp,f,c
 18140  001A80  D05F               	goto	i2u838_40
 18141  001A82                     i2l9146:
 18142  001A82  5005               	movf	i2___fladd@a,w,c
 18143  001A84  5C01               	subwf	i2___fladd@b,w,c
 18144  001A86  5006               	movf	i2___fladd@a+1,w,c
 18145  001A88  5802               	subwfb	i2___fladd@b+1,w,c
 18146  001A8A  5007               	movf	i2___fladd@a+2,w,c
 18147  001A8C  5803               	subwfb	i2___fladd@b+2,w,c
 18148  001A8E  5004               	movf	i2___fladd@b+3,w,c
 18149  001A90  0A80               	xorlw	128
 18150  001A92  6E09               	movwf	??i2___fladd& (0+255),c
 18151  001A94  5008               	movf	i2___fladd@a+3,w,c
 18152  001A96  0A80               	xorlw	128
 18153  001A98  5809               	subwfb	??i2___fladd& (0+255),w,c
 18154  001A9A  B0D8               	btfsc	status,0,c
 18155  001A9C  D025               	goto	i2l9156
 18156  001A9E  5001               	movf	i2___fladd@b,w,c
 18157  001AA0  5C05               	subwf	i2___fladd@a,w,c
 18158  001AA2  6E09               	movwf	??i2___fladd& (0+255),c
 18159  001AA4  5002               	movf	i2___fladd@b+1,w,c
 18160  001AA6  5806               	subwfb	i2___fladd@a+1,w,c
 18161  001AA8  6E0A               	movwf	(??i2___fladd+1)& (0+255),c
 18162  001AAA  5003               	movf	i2___fladd@b+2,w,c
 18163  001AAC  5807               	subwfb	i2___fladd@a+2,w,c
 18164  001AAE  6E0B               	movwf	(??i2___fladd+2)& (0+255),c
 18165  001AB0  5004               	movf	i2___fladd@b+3,w,c
 18166  001AB2  5808               	subwfb	i2___fladd@a+3,w,c
 18167  001AB4  6E0C               	movwf	(??i2___fladd+3)& (0+255),c
 18168  001AB6  0EFF               	movlw	255
 18169  001AB8  2409               	addwf	??i2___fladd,w,c
 18170  001ABA  6E01               	movwf	i2___fladd@b,c
 18171  001ABC  0EFF               	movlw	255
 18172  001ABE  200A               	addwfc	??i2___fladd+1,w,c
 18173  001AC0  6E02               	movwf	i2___fladd@b+1,c
 18174  001AC2  0EFF               	movlw	255
 18175  001AC4  200B               	addwfc	??i2___fladd+2,w,c
 18176  001AC6  6E03               	movwf	i2___fladd@b+2,c
 18177  001AC8  0EFF               	movlw	255
 18178  001ACA  200C               	addwfc	??i2___fladd+3,w,c
 18179  001ACC  6E04               	movwf	i2___fladd@b+3,c
 18180  001ACE  0E80               	movlw	128
 18181  001AD0  1A0D               	xorwf	i2___fladd@signs,f,c
 18182  001AD2  6C10               	negf	i2___fladd@grs,c
 18183  001AD4  5010               	movf	i2___fladd@grs,w,c
 18184  001AD6  A4D8               	btfss	status,2,c
 18185  001AD8  D00F               	goto	i2l2305
 18186  001ADA  0E01               	movlw	1
 18187  001ADC  2601               	addwf	i2___fladd@b,f,c
 18188  001ADE  0E00               	movlw	0
 18189  001AE0  2202               	addwfc	i2___fladd@b+1,f,c
 18190  001AE2  2203               	addwfc	i2___fladd@b+2,f,c
 18191  001AE4  2204               	addwfc	i2___fladd@b+3,f,c
 18192  001AE6  D008               	goto	i2l2305
 18193  001AE8                     i2l9156:
 18194  001AE8  5005               	movf	i2___fladd@a,w,c
 18195  001AEA  5E01               	subwf	i2___fladd@b,f,c
 18196  001AEC  5006               	movf	i2___fladd@a+1,w,c
 18197  001AEE  5A02               	subwfb	i2___fladd@b+1,f,c
 18198  001AF0  5007               	movf	i2___fladd@a+2,w,c
 18199  001AF2  5A03               	subwfb	i2___fladd@b+2,f,c
 18200  001AF4  5008               	movf	i2___fladd@a+3,w,c
 18201  001AF6  5A04               	subwfb	i2___fladd@b+3,f,c
 18202  001AF8                     i2l2305:
 18203  001AF8  5001               	movf	i2___fladd@b,w,c
 18204  001AFA  1002               	iorwf	i2___fladd@b+1,w,c
 18205  001AFC  1003               	iorwf	i2___fladd@b+2,w,c
 18206  001AFE  1004               	iorwf	i2___fladd@b+3,w,c
 18207  001B00  A4D8               	btfss	status,2,c
 18208  001B02  D01C               	goto	i2l9180
 18209  001B04  5010               	movf	i2___fladd@grs,w,c
 18210  001B06  A4D8               	btfss	status,2,c
 18211  001B08  D019               	goto	i2l9180
 18212  001B0A  0E00               	movlw	0
 18213  001B0C  6E01               	movwf	?i2___fladd,c
 18214  001B0E  0E00               	movlw	0
 18215  001B10  6E02               	movwf	?i2___fladd+1,c
 18216  001B12  0E00               	movlw	0
 18217  001B14  6E03               	movwf	?i2___fladd+2,c
 18218  001B16  0E00               	movlw	0
 18219  001B18  6E04               	movwf	?i2___fladd+3,c
 18220  001B1A  0012               	return	
 18221  001B1C                     i2l9164:
 18222  001B1C  90D8               	bcf	status,0,c
 18223  001B1E  3601               	rlcf	i2___fladd@b,f,c
 18224  001B20  3602               	rlcf	i2___fladd@b+1,f,c
 18225  001B22  3603               	rlcf	i2___fladd@b+2,f,c
 18226  001B24  3604               	rlcf	i2___fladd@b+3,f,c
 18227  001B26  BE10               	btfsc	i2___fladd@grs,7,c
 18228  001B28  8001               	bsf	i2___fladd@b,0,c
 18229  001B2A  A010               	btfss	i2___fladd@grs,0,c
 18230  001B2C  D002               	goto	i2l9174
 18231  001B2E  80D8               	bsf	status,0,c
 18232  001B30  D001               	goto	L25
 18233  001B32                     i2l9174:
 18234  001B32  90D8               	bcf	status,0,c
 18235  001B34                     L25:
 18236  001B34  3610               	rlcf	i2___fladd@grs,f,c
 18237  001B36  500F               	movf	i2___fladd@bexp,w,c
 18238  001B38  A4D8               	btfss	status,2,c
 18239  001B3A  060F               	decf	i2___fladd@bexp,f,c
 18240  001B3C                     i2l9180:
 18241  001B3C  AE03               	btfss	i2___fladd@b+2,7,c
 18242  001B3E  D7EE               	goto	i2l9164
 18243  001B40                     i2u838_40:
 18244  001B40  0E00               	movlw	0
 18245  001B42  6E0E               	movwf	i2___fladd@aexp,c
 18246  001B44  AE10               	btfss	i2___fladd@grs,7,c
 18247  001B46  D00B               	goto	i2l2314
 18248  001B48  C010  F009         	movff	i2___fladd@grs,??i2___fladd
 18249  001B4C  0E7F               	movlw	127
 18250  001B4E  1609               	andwf	??i2___fladd,f,c
 18251  001B50  B4D8               	btfsc	status,2,c
 18252  001B52  D003               	goto	i2l2315
 18253  001B54                     i2u840_40:
 18254  001B54  0E01               	movlw	1
 18255  001B56  6E0E               	movwf	i2___fladd@aexp,c
 18256  001B58  D002               	goto	i2l2314
 18257  001B5A                     i2l2315:
 18258  001B5A  B001               	btfsc	i2___fladd@b,0,c
 18259  001B5C  D7FB               	goto	i2u840_40
 18260  001B5E                     i2l2314:
 18261  001B5E  500E               	movf	i2___fladd@aexp,w,c
 18262  001B60  B4D8               	btfsc	status,2,c
 18263  001B62  D020               	goto	i2l9200
 18264  001B64  0E01               	movlw	1
 18265  001B66  2601               	addwf	i2___fladd@b,f,c
 18266  001B68  0E00               	movlw	0
 18267  001B6A  2202               	addwfc	i2___fladd@b+1,f,c
 18268  001B6C  2203               	addwfc	i2___fladd@b+2,f,c
 18269  001B6E  2204               	addwfc	i2___fladd@b+3,f,c
 18270  001B70  A004               	btfss	i2___fladd@b+3,0,c
 18271  001B72  D018               	goto	i2l9200
 18272  001B74  C001  F009         	movff	i2___fladd@b,??i2___fladd
 18273  001B78  C002  F00A         	movff	i2___fladd@b+1,??i2___fladd+1
 18274  001B7C  C003  F00B         	movff	i2___fladd@b+2,??i2___fladd+2
 18275  001B80  C004  F00C         	movff	i2___fladd@b+3,??i2___fladd+3
 18276  001B84  340C               	rlcf	??i2___fladd+3,w,c
 18277  001B86  320C               	rrcf	??i2___fladd+3,f,c
 18278  001B88  320B               	rrcf	??i2___fladd+2,f,c
 18279  001B8A  320A               	rrcf	??i2___fladd+1,f,c
 18280  001B8C  3209               	rrcf	??i2___fladd,f,c
 18281  001B8E  C009  F001         	movff	??i2___fladd,i2___fladd@b
 18282  001B92  C00A  F002         	movff	??i2___fladd+1,i2___fladd@b+1
 18283  001B96  C00B  F003         	movff	??i2___fladd+2,i2___fladd@b+2
 18284  001B9A  C00C  F004         	movff	??i2___fladd+3,i2___fladd@b+3
 18285  001B9E  280F               	incf	i2___fladd@bexp,w,c
 18286  001BA0  A4D8               	btfss	status,2,c
 18287  001BA2  2A0F               	incf	i2___fladd@bexp,f,c
 18288  001BA4                     i2l9200:
 18289  001BA4  280F               	incf	i2___fladd@bexp,w,c
 18290  001BA6  B4D8               	btfsc	status,2,c
 18291  001BA8  D003               	goto	i2u846_40
 18292  001BAA  500F               	movf	i2___fladd@bexp,w,c
 18293  001BAC  A4D8               	btfss	status,2,c
 18294  001BAE  D00D               	goto	i2l9208
 18295  001BB0                     i2u846_40:
 18296  001BB0  0E00               	movlw	0
 18297  001BB2  6E01               	movwf	i2___fladd@b,c
 18298  001BB4  0E00               	movlw	0
 18299  001BB6  6E02               	movwf	i2___fladd@b+1,c
 18300  001BB8  0E00               	movlw	0
 18301  001BBA  6E03               	movwf	i2___fladd@b+2,c
 18302  001BBC  0E00               	movlw	0
 18303  001BBE  6E04               	movwf	i2___fladd@b+3,c
 18304  001BC0  500F               	movf	i2___fladd@bexp,w,c
 18305  001BC2  A4D8               	btfss	status,2,c
 18306  001BC4  D002               	goto	i2l9208
 18307  001BC6  0E00               	movlw	0
 18308  001BC8  6E0D               	movwf	i2___fladd@signs,c
 18309  001BCA                     i2l9208:
 18310  001BCA  A00F               	btfss	i2___fladd@bexp,0,c
 18311  001BCC  D002               	goto	i2l9212
 18312  001BCE  8E03               	bsf	i2___fladd@b+2,7,c
 18313  001BD0  D001               	goto	i2l9214
 18314  001BD2                     i2l9212:
 18315  001BD2  9E03               	bcf	i2___fladd@b+2,7,c
 18316  001BD4                     i2l9214:
 18317  001BD4  90D8               	bcf	status,0,c
 18318  001BD6  300F               	rrcf	i2___fladd@bexp,w,c
 18319  001BD8  6E04               	movwf	i2___fladd@b+3,c
 18320  001BDA  BE0D               	btfsc	i2___fladd@signs,7,c
 18321  001BDC  8E04               	bsf	i2___fladd@b+3,7,c
 18322  001BDE  C001  F001         	movff	i2___fladd@b,?i2___fladd
 18323  001BE2  C002  F002         	movff	i2___fladd@b+1,?i2___fladd+1
 18324  001BE6  C003  F003         	movff	i2___fladd@b+2,?i2___fladd+2
 18325  001BEA  C004  F004         	movff	i2___fladd@b+3,?i2___fladd+3
 18326  001BEE  0012               	return		;funcret
 18327  001BF0                     __end_ofi2___fladd:
 18328                           	opt callstack 0
 18329                           
 18330 ;; *************** function _initialize_func *****************
 18331 ;; Defined at:
 18332 ;;		line 230 in file "main.c"
 18333 ;; Parameters:    Size  Location     Type
 18334 ;;		None
 18335 ;; Auto vars:     Size  Location     Type
 18336 ;;  g               2   32[COMRAM] unsigned int 
 18337 ;; Return value:  Size  Location     Type
 18338 ;;                  1    wreg      void 
 18339 ;; Registers used:
 18340 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18341 ;; Tracked objects:
 18342 ;;		On entry : 0/0
 18343 ;;		On exit  : 0/0
 18344 ;;		Unchanged: 0/0
 18345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18349 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18350 ;;Total ram usage:        4 bytes
 18351 ;; Hardware stack levels used:    1
 18352 ;; Hardware stack levels required when called:    6
 18353 ;; This function calls:
 18354 ;;		i2___wmul
 18355 ;;		i2_initmoving_disp
 18356 ;;		i2_normal_updater
 18357 ;;		i2_readRTC
 18358 ;; This function is called by:
 18359 ;;		_interruptHandler
 18360 ;; This function uses a non-reentrant model
 18361 ;;
 18362                           
 18363                           	psect	text87
 18364  003392                     __ptext87:
 18365                           	opt callstack 0
 18366  003392                     _initialize_func:
 18367                           	opt callstack 15
 18368                           
 18369                           ;main.c: 232: readRTC();
 18370                           
 18371                           ;incstack = 0
 18372  003392  EC28  F021         	call	i2_readRTC	;wreg free
 18373                           
 18374                           ;main.c: 233: start_sec = time[2]*3600 + time[1]* 60 + time[0];
 18375  003396  C0F2  F001         	movff	_time+2,i2___wmul@multiplier
 18376  00339A  6A02               	clrf	i2___wmul@multiplier+1,c
 18377  00339C  0E0E               	movlw	14
 18378  00339E  6E04               	movwf	i2___wmul@multiplicand+1,c
 18379  0033A0  0E10               	movlw	16
 18380  0033A2  6E03               	movwf	i2___wmul@multiplicand,c
 18381  0033A4  EC80  F029         	call	i2___wmul	;wreg free
 18382  0033A8  0100               	movlb	0	; () banked
 18383  0033AA  51F1               	movf	(_time+1)& (0+255),w,b
 18384  0033AC  0D3C               	mullw	60
 18385  0033AE  CFF3 F01F          	movff	prodl,??_initialize_func
 18386  0033B2  CFF4 F020          	movff	prodh,??_initialize_func+1
 18387  0033B6  5001               	movf	?i2___wmul,w,c
 18388  0033B8  261F               	addwf	??_initialize_func,f,c
 18389  0033BA  5002               	movf	?i2___wmul+1,w,c
 18390  0033BC  2220               	addwfc	??_initialize_func+1,f,c
 18391  0033BE  51F0               	movf	_time& (0+255),w,b
 18392  0033C0  261F               	addwf	??_initialize_func,f,c
 18393  0033C2  0E00               	movlw	0
 18394  0033C4  2220               	addwfc	??_initialize_func+1,f,c
 18395  0033C6  C01F  F0C0         	movff	??_initialize_func,_start_sec
 18396  0033CA  C020  F0C1         	movff	??_initialize_func+1,_start_sec+1
 18397  0033CE  0E00               	movlw	0
 18398  0033D0  BFC1               	btfsc	(_start_sec+1)& (0+255),7,b
 18399  0033D2  0EFF               	movlw	-1
 18400  0033D4  6FC2               	movwf	(_start_sec+2)& (0+255),b
 18401  0033D6  6FC3               	movwf	(_start_sec+3)& (0+255),b
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;main.c: 234: start_time[1] = time[2];
 18405  0033D8  C0F2  F056         	movff	_time+2,_start_time+1
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;main.c: 235: start_time[0] = time[1];
 18409  0033DC  C0F1  F055         	movff	_time+1,_start_time
 18410                           
 18411                           ; BSR set to: 0
 18412                           ;main.c: 236: operation_sec = 0;
 18413  0033E0  0E00               	movlw	0
 18414  0033E2  6FB8               	movwf	_operation_sec& (0+255),b
 18415  0033E4  0E00               	movlw	0
 18416  0033E6  6FB9               	movwf	(_operation_sec+1)& (0+255),b
 18417  0033E8  0E00               	movlw	0
 18418  0033EA  6FBA               	movwf	(_operation_sec+2)& (0+255),b
 18419  0033EC  0E00               	movlw	0
 18420  0033EE  6FBB               	movwf	(_operation_sec+3)& (0+255),b
 18421                           
 18422                           ; BSR set to: 0
 18423                           ;main.c: 237: rotary_accum = 0;
 18424  0033F0  0E00               	movlw	0
 18425  0033F2  6E3C               	movwf	_rotary_accum,c
 18426  0033F4  0E00               	movlw	0
 18427  0033F6  6E3D               	movwf	_rotary_accum+1,c
 18428  0033F8  0E00               	movlw	0
 18429  0033FA  6E3E               	movwf	_rotary_accum+2,c
 18430  0033FC  0E00               	movlw	0
 18431  0033FE  6E3F               	movwf	_rotary_accum+3,c
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;main.c: 238: accum_straight_distance=0;
 18435  003400  0E00               	movlw	0
 18436  003402  6FC4               	movwf	_accum_straight_distance& (0+255),b
 18437  003404  0E00               	movlw	0
 18438  003406  6FC5               	movwf	(_accum_straight_distance+1)& (0+255),b
 18439  003408  0E00               	movlw	0
 18440  00340A  6FC6               	movwf	(_accum_straight_distance+2)& (0+255),b
 18441  00340C  0E00               	movlw	0
 18442  00340E  6FC7               	movwf	(_accum_straight_distance+3)& (0+255),b
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;main.c: 239: turns_counter=0;
 18446  003410  0E00               	movlw	0
 18447  003412  6FC8               	movwf	_turns_counter& (0+255),b
 18448  003414  0E00               	movlw	0
 18449  003416  6FC9               	movwf	(_turns_counter+1)& (0+255),b
 18450  003418  0E00               	movlw	0
 18451  00341A  6FCA               	movwf	(_turns_counter+2)& (0+255),b
 18452  00341C  0E00               	movlw	0
 18453  00341E  6FCB               	movwf	(_turns_counter+3)& (0+255),b
 18454                           
 18455                           ; BSR set to: 0
 18456                           ;main.c: 240: rotary_counter=0;
 18457  003420  0E00               	movlw	0
 18458  003422  6E40               	movwf	_rotary_counter,c
 18459  003424  0E00               	movlw	0
 18460  003426  6E41               	movwf	_rotary_counter+1,c
 18461  003428  0E00               	movlw	0
 18462  00342A  6E42               	movwf	_rotary_counter+2,c
 18463  00342C  0E00               	movlw	0
 18464  00342E  6E43               	movwf	_rotary_counter+3,c
 18465                           
 18466                           ; BSR set to: 0
 18467                           ;main.c: 242: cones_deployed=0;
 18468  003430  0E00               	movlw	0
 18469  003432  6FD7               	movwf	(_cones_deployed+1)& (0+255),b
 18470  003434  0E00               	movlw	0
 18471  003436  6FD6               	movwf	_cones_deployed& (0+255),b
 18472                           
 18473                           ; BSR set to: 0
 18474                           ;main.c: 243: hole_counter = 0;
 18475  003438  0E00               	movlw	0
 18476  00343A  6E49               	movwf	_hole_counter+1,c
 18477  00343C  0E00               	movlw	0
 18478  00343E  6E48               	movwf	_hole_counter,c
 18479                           
 18480                           ; BSR set to: 0
 18481                           ;main.c: 244: crack_counter =0;
 18482  003440  0E00               	movlw	0
 18483  003442  6E47               	movwf	_crack_counter+1,c
 18484  003444  0E00               	movlw	0
 18485  003446  6E46               	movwf	_crack_counter,c
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;main.c: 246: last_sensed = 0;
 18489  003448  0E00               	movlw	0
 18490  00344A  6FDB               	movwf	(_last_sensed+1)& (0+255),b
 18491  00344C  0E00               	movlw	0
 18492  00344E  6FDA               	movwf	_last_sensed& (0+255),b
 18493                           
 18494                           ; BSR set to: 0
 18495                           ;main.c: 247: no_cone = 0;
 18496  003450  0E00               	movlw	0
 18497  003452  6FE6               	movwf	_no_cone& (0+255),b
 18498                           
 18499                           ; BSR set to: 0
 18500                           ;main.c: 248: drop_index = 0;
 18501  003454  0E00               	movlw	0
 18502  003456  6FD9               	movwf	(_drop_index+1)& (0+255),b
 18503  003458  0E00               	movlw	0
 18504  00345A  6FD8               	movwf	_drop_index& (0+255),b
 18505                           
 18506                           ; BSR set to: 0
 18507                           ;main.c: 249: add_index = 0;
 18508  00345C  0E00               	movlw	0
 18509  00345E  6E4B               	movwf	_add_index+1,c
 18510  003460  0E00               	movlw	0
 18511  003462  6E4A               	movwf	_add_index,c
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;main.c: 250: reg = 0;
 18515  003464  0E00               	movlw	0
 18516  003466  6FD1               	movwf	(_reg+1)& (0+255),b
 18517  003468  0E00               	movlw	0
 18518  00346A  6FD0               	movwf	_reg& (0+255),b
 18519                           
 18520                           ; BSR set to: 0
 18521                           ;main.c: 251: ddp = 0;
 18522  00346C  0E00               	movlw	0
 18523  00346E  6FD3               	movwf	(_ddp+1)& (0+255),b
 18524  003470  0E00               	movlw	0
 18525  003472  6FD2               	movwf	_ddp& (0+255),b
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;main.c: 252: last_dropped = 0;
 18529  003474  0E00               	movlw	0
 18530  003476  6FE7               	movwf	_last_dropped& (0+255),b
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;main.c: 253: last_problem_bool[0] = 0;
 18534  003478  0E00               	movlw	0
 18535  00347A  6E34               	movwf	_last_problem_bool,c
 18536  00347C  0E00               	movlw	0
 18537  00347E  6E35               	movwf	_last_problem_bool+1,c
 18538  003480  0E00               	movlw	0
 18539  003482  6E36               	movwf	_last_problem_bool+2,c
 18540  003484  0E00               	movlw	0
 18541  003486  6E37               	movwf	_last_problem_bool+3,c
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;main.c: 254: last_problem_bool[1] = 0;
 18545  003488  0E00               	movlw	0
 18546  00348A  6E38               	movwf	_last_problem_bool+4,c
 18547  00348C  0E00               	movlw	0
 18548  00348E  6E39               	movwf	_last_problem_bool+5,c
 18549  003490  0E00               	movlw	0
 18550  003492  6E3A               	movwf	_last_problem_bool+6,c
 18551  003494  0E00               	movlw	0
 18552  003496  6E3B               	movwf	_last_problem_bool+7,c
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;main.c: 256: for (unsigned int g = 0;g<12;g++){
 18556  003498  0E00               	movlw	0
 18557  00349A  6E22               	movwf	initialize_func@g+1,c
 18558  00349C  0E00               	movlw	0
 18559  00349E  6E21               	movwf	initialize_func@g,c
 18560  0034A0                     i2l8994:
 18561                           
 18562                           ;main.c: 257: array_holes_distance[g]= 0;
 18563  0034A0  90D8               	bcf	status,0,c
 18564  0034A2  3421               	rlcf	initialize_func@g,w,c
 18565  0034A4  6ED9               	movwf	fsr2l,c
 18566  0034A6  3422               	rlcf	initialize_func@g+1,w,c
 18567  0034A8  6EDA               	movwf	fsr2h,c
 18568  0034AA  0E48               	movlw	low _array_holes_distance
 18569  0034AC  26D9               	addwf	fsr2l,f,c
 18570  0034AE  0E01               	movlw	high _array_holes_distance
 18571  0034B0  22DA               	addwfc	fsr2h,f,c
 18572  0034B2  0E00               	movlw	0
 18573  0034B4  6EDE               	movwf	postinc2,c
 18574  0034B6  0E00               	movlw	0
 18575  0034B8  6EDD               	movwf	postdec2,c
 18576                           
 18577                           ;main.c: 258: array_cracks_distance[g]=0;
 18578  0034BA  90D8               	bcf	status,0,c
 18579  0034BC  3421               	rlcf	initialize_func@g,w,c
 18580  0034BE  6ED9               	movwf	fsr2l,c
 18581  0034C0  3422               	rlcf	initialize_func@g+1,w,c
 18582  0034C2  6EDA               	movwf	fsr2h,c
 18583  0034C4  0E30               	movlw	low _array_cracks_distance
 18584  0034C6  26D9               	addwf	fsr2l,f,c
 18585  0034C8  0E01               	movlw	high _array_cracks_distance
 18586  0034CA  22DA               	addwfc	fsr2h,f,c
 18587  0034CC  0E00               	movlw	0
 18588  0034CE  6EDE               	movwf	postinc2,c
 18589  0034D0  0E00               	movlw	0
 18590  0034D2  6EDD               	movwf	postdec2,c
 18591                           
 18592                           ;main.c: 259: drop_identity[g]=0;
 18593  0034D4  90D8               	bcf	status,0,c
 18594  0034D6  3421               	rlcf	initialize_func@g,w,c
 18595  0034D8  6ED9               	movwf	fsr2l,c
 18596  0034DA  3422               	rlcf	initialize_func@g+1,w,c
 18597  0034DC  6EDA               	movwf	fsr2h,c
 18598  0034DE  0E60               	movlw	low _drop_identity
 18599  0034E0  26D9               	addwf	fsr2l,f,c
 18600  0034E2  0E01               	movlw	high _drop_identity
 18601  0034E4  22DA               	addwfc	fsr2h,f,c
 18602  0034E6  0E00               	movlw	0
 18603  0034E8  6EDE               	movwf	postinc2,c
 18604  0034EA  0E00               	movlw	0
 18605  0034EC  6EDD               	movwf	postdec2,c
 18606                           
 18607                           ;main.c: 260: drop_position[g]=0;
 18608  0034EE  0E00               	movlw	low _drop_position
 18609  0034F0  6E1F               	movwf	??_initialize_func& (0+255),c
 18610  0034F2  0E01               	movlw	high _drop_position
 18611  0034F4  6E20               	movwf	(??_initialize_func+1)& (0+255),c
 18612  0034F6  90D8               	bcf	status,0,c
 18613  0034F8  3421               	rlcf	initialize_func@g,w,c
 18614  0034FA  6ED9               	movwf	fsr2l,c
 18615  0034FC  3422               	rlcf	initialize_func@g+1,w,c
 18616  0034FE  6EDA               	movwf	fsr2h,c
 18617  003500  90D8               	bcf	status,0,c
 18618  003502  36D9               	rlcf	fsr2l,f,c
 18619  003504  36DA               	rlcf	fsr2h,f,c
 18620  003506  501F               	movf	??_initialize_func,w,c
 18621  003508  26D9               	addwf	fsr2l,f,c
 18622  00350A  5020               	movf	??_initialize_func+1,w,c
 18623  00350C  22DA               	addwfc	fsr2h,f,c
 18624  00350E  0E00               	movlw	0
 18625  003510  6EDE               	movwf	postinc2,c
 18626  003512  0E00               	movlw	0
 18627  003514  6EDE               	movwf	postinc2,c
 18628  003516  0E00               	movlw	0
 18629  003518  6EDE               	movwf	postinc2,c
 18630  00351A  0E00               	movlw	0
 18631  00351C  6EDD               	movwf	postdec2,c
 18632  00351E  4A21               	infsnz	initialize_func@g,f,c
 18633  003520  2A22               	incf	initialize_func@g+1,f,c
 18634  003522  5022               	movf	initialize_func@g+1,w,c
 18635  003524  E104               	bnz	i2u807_40
 18636  003526  0E0C               	movlw	12
 18637  003528  5C21               	subwf	initialize_func@g,w,c
 18638  00352A  A0D8               	btfss	status,0,c
 18639  00352C  D7B9               	goto	i2l8994
 18640  00352E                     i2u807_40:
 18641                           
 18642                           ;main.c: 261: };main.c: 263: INT0IE = 1;
 18643  00352E  88F2               	bsf	4082,4,c	;volatile
 18644                           
 18645                           ;main.c: 264: INTEDG0 = 1;
 18646  003530  8CF1               	bsf	4081,6,c	;volatile
 18647                           
 18648                           ;main.c: 265: (INTCONbits.GIE = 1);
 18649  003532  8EF2               	bsf	4082,7,c	;volatile
 18650                           
 18651                           ;main.c: 267: initmoving_disp();
 18652  003534  ECDB  F029         	call	i2_initmoving_disp	;wreg free
 18653                           
 18654                           ;main.c: 268: normal_updater();
 18655  003538  EC5B  F01D         	call	i2_normal_updater	;wreg free
 18656                           
 18657                           ;main.c: 269: completion_bool = 0;
 18658  00353C  0E00               	movlw	0
 18659  00353E  0100               	movlb	0	; () banked
 18660  003540  6FFE               	movwf	_completion_bool& (0+255),b
 18661                           
 18662                           ; BSR set to: 0
 18663  003542  0012               	return		;funcret
 18664  003544                     __end_of_initialize_func:
 18665                           	opt callstack 0
 18666                           
 18667 ;; *************** function i2_normal_updater *****************
 18668 ;; Defined at:
 18669 ;;		line 148 in file "main.c"
 18670 ;; Parameters:    Size  Location     Type
 18671 ;;		None
 18672 ;; Auto vars:     Size  Location     Type
 18673 ;;		None
 18674 ;; Return value:  Size  Location     Type
 18675 ;;                  1    wreg      void 
 18676 ;; Registers used:
 18677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18678 ;; Tracked objects:
 18679 ;;		On entry : 0/0
 18680 ;;		On exit  : 0/0
 18681 ;;		Unchanged: 0/0
 18682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18684 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18686 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18687 ;;Total ram usage:        6 bytes
 18688 ;; Hardware stack levels used:    1
 18689 ;; Hardware stack levels required when called:    3
 18690 ;; This function calls:
 18691 ;;		i2___aldiv
 18692 ;;		i2___almod
 18693 ;;		i2___wmul
 18694 ;;		i2_readRTC
 18695 ;; This function is called by:
 18696 ;;		_initialize_func
 18697 ;; This function uses a non-reentrant model
 18698 ;;
 18699                           
 18700                           	psect	text88
 18701  003AB6                     __ptext88:
 18702                           	opt callstack 0
 18703  003AB6                     i2_normal_updater:
 18704                           	opt callstack 17
 18705                           
 18706                           ;main.c: 149: readRTC();
 18707                           
 18708                           ; BSR set to: 0
 18709                           ;incstack = 0
 18710  003AB6  EC28  F021         	call	i2_readRTC	;wreg free
 18711                           
 18712                           ;main.c: 150: end_sec = time[2]*3600+time[1]* 60 + time[0];
 18713  003ABA  C0F2  F001         	movff	_time+2,i2___wmul@multiplier
 18714  003ABE  6A02               	clrf	i2___wmul@multiplier+1,c
 18715  003AC0  0E0E               	movlw	14
 18716  003AC2  6E04               	movwf	i2___wmul@multiplicand+1,c
 18717  003AC4  0E10               	movlw	16
 18718  003AC6  6E03               	movwf	i2___wmul@multiplicand,c
 18719  003AC8  EC80  F029         	call	i2___wmul	;wreg free
 18720  003ACC  0100               	movlb	0	; () banked
 18721  003ACE  51F1               	movf	(_time+1)& (0+255),w,b
 18722  003AD0  0D3C               	mullw	60
 18723  003AD2  CFF3 F019          	movff	prodl,??i2_normal_updater
 18724  003AD6  CFF4 F01A          	movff	prodh,??i2_normal_updater+1
 18725  003ADA  5001               	movf	?i2___wmul,w,c
 18726  003ADC  2619               	addwf	??i2_normal_updater,f,c
 18727  003ADE  5002               	movf	?i2___wmul+1,w,c
 18728  003AE0  221A               	addwfc	??i2_normal_updater+1,f,c
 18729  003AE2  51F0               	movf	_time& (0+255),w,b
 18730  003AE4  2619               	addwf	??i2_normal_updater,f,c
 18731  003AE6  0E00               	movlw	0
 18732  003AE8  221A               	addwfc	??i2_normal_updater+1,f,c
 18733  003AEA  C019  F0BC         	movff	??i2_normal_updater,_end_sec
 18734  003AEE  C01A  F0BD         	movff	??i2_normal_updater+1,_end_sec+1
 18735  003AF2  0E00               	movlw	0
 18736  003AF4  BFBD               	btfsc	(_end_sec+1)& (0+255),7,b
 18737  003AF6  0EFF               	movlw	-1
 18738  003AF8  6FBE               	movwf	(_end_sec+2)& (0+255),b
 18739  003AFA  6FBF               	movwf	(_end_sec+3)& (0+255),b
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;main.c: 151: operation_sec = end_sec - start_sec;
 18743  003AFC  51C0               	movf	_start_sec& (0+255),w,b
 18744  003AFE  5DBC               	subwf	_end_sec& (0+255),w,b
 18745  003B00  6FB8               	movwf	_operation_sec& (0+255),b
 18746  003B02  51C1               	movf	(_start_sec+1)& (0+255),w,b
 18747  003B04  59BD               	subwfb	(_end_sec+1)& (0+255),w,b
 18748  003B06  6FB9               	movwf	(_operation_sec+1)& (0+255),b
 18749  003B08  51C2               	movf	(_start_sec+2)& (0+255),w,b
 18750  003B0A  59BE               	subwfb	(_end_sec+2)& (0+255),w,b
 18751  003B0C  6FBA               	movwf	(_operation_sec+2)& (0+255),b
 18752  003B0E  51C3               	movf	(_start_sec+3)& (0+255),w,b
 18753  003B10  59BF               	subwfb	(_end_sec+3)& (0+255),w,b
 18754  003B12  6FBB               	movwf	(_operation_sec+3)& (0+255),b
 18755                           
 18756                           ; BSR set to: 0
 18757                           ;main.c: 152: operation_time[2] = operation_sec/3600;
 18758  003B14  C0B8  F00B         	movff	_operation_sec,i2___aldiv@dividend
 18759  003B18  C0B9  F00C         	movff	_operation_sec+1,i2___aldiv@dividend+1
 18760  003B1C  C0BA  F00D         	movff	_operation_sec+2,i2___aldiv@dividend+2
 18761  003B20  C0BB  F00E         	movff	_operation_sec+3,i2___aldiv@dividend+3
 18762  003B24  0E10               	movlw	16
 18763  003B26  6E0F               	movwf	i2___aldiv@divisor,c
 18764  003B28  0E0E               	movlw	14
 18765  003B2A  6E10               	movwf	i2___aldiv@divisor+1,c
 18766  003B2C  0E00               	movlw	0
 18767  003B2E  6E11               	movwf	i2___aldiv@divisor+2,c
 18768  003B30  0E00               	movlw	0
 18769  003B32  6E12               	movwf	i2___aldiv@divisor+3,c
 18770  003B34  ECC6  F01E         	call	i2___aldiv	;wreg free
 18771  003B38  500B               	movf	?i2___aldiv,w,c
 18772  003B3A  0100               	movlb	0	; () banked
 18773  003B3C  6FF9               	movwf	(_operation_time+2)& (0+255),b
 18774                           
 18775                           ; BSR set to: 0
 18776                           ;main.c: 153: operation_time[1] = (operation_sec%3600)/60;
 18777  003B3E  0E10               	movlw	16
 18778  003B40  6E05               	movwf	i2___almod@divisor,c
 18779  003B42  0E0E               	movlw	14
 18780  003B44  6E06               	movwf	i2___almod@divisor+1,c
 18781  003B46  0E00               	movlw	0
 18782  003B48  6E07               	movwf	i2___almod@divisor+2,c
 18783  003B4A  0E00               	movlw	0
 18784  003B4C  6E08               	movwf	i2___almod@divisor+3,c
 18785  003B4E  C0B8  F001         	movff	_operation_sec,i2___almod@dividend
 18786  003B52  C0B9  F002         	movff	_operation_sec+1,i2___almod@dividend+1
 18787  003B56  C0BA  F003         	movff	_operation_sec+2,i2___almod@dividend+2
 18788  003B5A  C0BB  F004         	movff	_operation_sec+3,i2___almod@dividend+3
 18789  003B5E  ECE1  F01F         	call	i2___almod	;wreg free
 18790  003B62  C001  F00B         	movff	?i2___almod,i2___aldiv@dividend
 18791  003B66  C002  F00C         	movff	?i2___almod+1,i2___aldiv@dividend+1
 18792  003B6A  C003  F00D         	movff	?i2___almod+2,i2___aldiv@dividend+2
 18793  003B6E  C004  F00E         	movff	?i2___almod+3,i2___aldiv@dividend+3
 18794  003B72  0E3C               	movlw	60
 18795  003B74  6E0F               	movwf	i2___aldiv@divisor,c
 18796  003B76  0E00               	movlw	0
 18797  003B78  6E10               	movwf	i2___aldiv@divisor+1,c
 18798  003B7A  0E00               	movlw	0
 18799  003B7C  6E11               	movwf	i2___aldiv@divisor+2,c
 18800  003B7E  0E00               	movlw	0
 18801  003B80  6E12               	movwf	i2___aldiv@divisor+3,c
 18802  003B82  ECC6  F01E         	call	i2___aldiv	;wreg free
 18803  003B86  500B               	movf	?i2___aldiv,w,c
 18804  003B88  0100               	movlb	0	; () banked
 18805  003B8A  6FF8               	movwf	(_operation_time+1)& (0+255),b
 18806                           
 18807                           ; BSR set to: 0
 18808                           ;main.c: 154: operation_time[0] = (operation_sec%3600)%60;
 18809  003B8C  0E10               	movlw	16
 18810  003B8E  6E05               	movwf	i2___almod@divisor,c
 18811  003B90  0E0E               	movlw	14
 18812  003B92  6E06               	movwf	i2___almod@divisor+1,c
 18813  003B94  0E00               	movlw	0
 18814  003B96  6E07               	movwf	i2___almod@divisor+2,c
 18815  003B98  0E00               	movlw	0
 18816  003B9A  6E08               	movwf	i2___almod@divisor+3,c
 18817  003B9C  C0B8  F001         	movff	_operation_sec,i2___almod@dividend
 18818  003BA0  C0B9  F002         	movff	_operation_sec+1,i2___almod@dividend+1
 18819  003BA4  C0BA  F003         	movff	_operation_sec+2,i2___almod@dividend+2
 18820  003BA8  C0BB  F004         	movff	_operation_sec+3,i2___almod@dividend+3
 18821  003BAC  ECE1  F01F         	call	i2___almod	;wreg free
 18822  003BB0  C001  F01B         	movff	?i2___almod,i2_normal_updater$2898
 18823  003BB4  C002  F01C         	movff	?i2___almod+1,i2_normal_updater$2898+1
 18824  003BB8  C003  F01D         	movff	?i2___almod+2,i2_normal_updater$2898+2
 18825  003BBC  C004  F01E         	movff	?i2___almod+3,i2_normal_updater$2898+3
 18826                           
 18827                           ;main.c: 154: operation_time[0] = (operation_sec%3600)%60;
 18828  003BC0  C01B  F001         	movff	i2_normal_updater$2898,i2___almod@dividend
 18829  003BC4  C01C  F002         	movff	i2_normal_updater$2898+1,i2___almod@dividend+1
 18830  003BC8  C01D  F003         	movff	i2_normal_updater$2898+2,i2___almod@dividend+2
 18831  003BCC  C01E  F004         	movff	i2_normal_updater$2898+3,i2___almod@dividend+3
 18832  003BD0  0E3C               	movlw	60
 18833  003BD2  6E05               	movwf	i2___almod@divisor,c
 18834  003BD4  0E00               	movlw	0
 18835  003BD6  6E06               	movwf	i2___almod@divisor+1,c
 18836  003BD8  0E00               	movlw	0
 18837  003BDA  6E07               	movwf	i2___almod@divisor+2,c
 18838  003BDC  0E00               	movlw	0
 18839  003BDE  6E08               	movwf	i2___almod@divisor+3,c
 18840  003BE0  ECE1  F01F         	call	i2___almod	;wreg free
 18841  003BE4  5001               	movf	?i2___almod,w,c
 18842  003BE6  0100               	movlb	0	; () banked
 18843  003BE8  6FF7               	movwf	_operation_time& (0+255),b
 18844                           
 18845                           ; BSR set to: 0
 18846  003BEA  0012               	return		;funcret
 18847  003BEC                     __end_ofi2_normal_updater:
 18848                           	opt callstack 0
 18849                           
 18850 ;; *************** function i2_readRTC *****************
 18851 ;; Defined at:
 18852 ;;		line 13 in file "RTC.c"
 18853 ;; Parameters:    Size  Location     Type
 18854 ;;		None
 18855 ;; Auto vars:     Size  Location     Type
 18856 ;;  readRTC         1   23[COMRAM] unsigned char 
 18857 ;;  readRTC         1   22[COMRAM] unsigned char 
 18858 ;; Return value:  Size  Location     Type
 18859 ;;                  1    wreg      void 
 18860 ;; Registers used:
 18861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18862 ;; Tracked objects:
 18863 ;;		On entry : 0/0
 18864 ;;		On exit  : 0/0
 18865 ;;		Unchanged: 0/0
 18866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18870 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18871 ;;Total ram usage:        3 bytes
 18872 ;; Hardware stack levels used:    1
 18873 ;; Hardware stack levels required when called:    2
 18874 ;; This function calls:
 18875 ;;		i2_I2C_Master_Init
 18876 ;;		i2_I2C_Master_Read
 18877 ;;		i2_I2C_Master_Start
 18878 ;;		i2_I2C_Master_Stop
 18879 ;;		i2_I2C_Master_Write
 18880 ;; This function is called by:
 18881 ;;		_initialize_func
 18882 ;;		i2_normal_updater
 18883 ;; This function uses a non-reentrant model
 18884 ;;
 18885                           
 18886                           	psect	text89
 18887  004250                     __ptext89:
 18888                           	opt callstack 0
 18889  004250                     i2_readRTC:
 18890                           	opt callstack 18
 18891                           
 18892                           ;RTC.c: 14: I2C_Master_Init(100000);
 18893                           
 18894                           ; BSR set to: 0
 18895                           ;incstack = 0
 18896  004250  0EA0               	movlw	160
 18897  004252  6E0E               	movwf	i2I2C_Master_Init@clockFreq,c
 18898  004254  0E86               	movlw	134
 18899  004256  6E0F               	movwf	i2I2C_Master_Init@clockFreq+1,c
 18900  004258  0E01               	movlw	1
 18901  00425A  6E10               	movwf	i2I2C_Master_Init@clockFreq+2,c
 18902  00425C  0E00               	movlw	0
 18903  00425E  6E11               	movwf	i2I2C_Master_Init@clockFreq+3,c
 18904  004260  EC48  F026         	call	i2_I2C_Master_Init	;wreg free
 18905                           
 18906                           ;RTC.c: 16: I2C_Master_Start();
 18907  004264  ECD9  F02A         	call	i2_I2C_Master_Start	;wreg free
 18908                           
 18909                           ;RTC.c: 17: I2C_Master_Write(0b11010000);
 18910  004268  0E00               	movlw	0
 18911  00426A  6E03               	movwf	i2I2C_Master_Write@byteToWrite+1,c
 18912  00426C  0ED0               	movlw	208
 18913  00426E  6E02               	movwf	i2I2C_Master_Write@byteToWrite,c
 18914  004270  ECC8  F02A         	call	i2_I2C_Master_Write	;wreg free
 18915                           
 18916                           ;RTC.c: 18: I2C_Master_Write(0x00);
 18917  004274  0E00               	movlw	0
 18918  004276  6E03               	movwf	i2I2C_Master_Write@byteToWrite+1,c
 18919  004278  0E00               	movlw	0
 18920  00427A  6E02               	movwf	i2I2C_Master_Write@byteToWrite,c
 18921  00427C  ECC8  F02A         	call	i2_I2C_Master_Write	;wreg free
 18922                           
 18923                           ;RTC.c: 19: I2C_Master_Stop();
 18924  004280  ECD5  F02A         	call	i2_I2C_Master_Stop	;wreg free
 18925                           
 18926                           ;RTC.c: 22: I2C_Master_Start();
 18927  004284  ECD9  F02A         	call	i2_I2C_Master_Start	;wreg free
 18928                           
 18929                           ;RTC.c: 23: I2C_Master_Write(0b11010001);
 18930  004288  0E00               	movlw	0
 18931  00428A  6E03               	movwf	i2I2C_Master_Write@byteToWrite+1,c
 18932  00428C  0ED1               	movlw	209
 18933  00428E  6E02               	movwf	i2I2C_Master_Write@byteToWrite,c
 18934  004290  ECC8  F02A         	call	i2_I2C_Master_Write	;wreg free
 18935                           
 18936                           ;RTC.c: 24: for(unsigned char i = 0; i < 6; i++){
 18937  004294  0E00               	movlw	0
 18938  004296  6E17               	movwf	i2readRTC@i,c
 18939  004298                     i2l7530:
 18940                           
 18941                           ;RTC.c: 25: t_data = I2C_Master_Read(0);
 18942  004298  0E00               	movlw	0
 18943  00429A  ECC9  F029         	call	i2_I2C_Master_Read
 18944  00429E  6E18               	movwf	i2readRTC@t_data,c
 18945                           
 18946                           ;RTC.c: 26: time[i] = (t_data>>4)*10+(t_data&0x0F);
 18947  0042A0  0EF0               	movlw	low _time
 18948  0042A2  2417               	addwf	i2readRTC@i,w,c
 18949  0042A4  6ED9               	movwf	fsr2l,c
 18950  0042A6  6ADA               	clrf	fsr2h,c
 18951  0042A8  0E00               	movlw	high _time
 18952  0042AA  22DA               	addwfc	fsr2h,f,c
 18953  0042AC  C018  F016         	movff	i2readRTC@t_data,??i2_readRTC
 18954  0042B0  0E0F               	movlw	15
 18955  0042B2  1616               	andwf	??i2_readRTC,f,c
 18956  0042B4  3818               	swapf	i2readRTC@t_data,w,c
 18957  0042B6  0B0F               	andlw	15
 18958  0042B8  0D0A               	mullw	10
 18959  0042BA  50F3               	movf	prodl,w,c
 18960  0042BC  2416               	addwf	??i2_readRTC,w,c
 18961  0042BE  6EDF               	movwf	indf2,c
 18962  0042C0  2A17               	incf	i2readRTC@i,f,c
 18963  0042C2  0E05               	movlw	5
 18964  0042C4  6417               	cpfsgt	i2readRTC@i,c
 18965  0042C6  D7E8               	goto	i2l7530
 18966                           
 18967                           ;RTC.c: 27: };RTC.c: 28: t_data = I2C_Master_Read(1);
 18968  0042C8  0E01               	movlw	1
 18969  0042CA  ECC9  F029         	call	i2_I2C_Master_Read
 18970  0042CE  6E18               	movwf	i2readRTC@t_data,c
 18971                           
 18972                           ;RTC.c: 29: time[6] = (t_data>>4)*10+(t_data&0x0F);
 18973  0042D0  C018  F016         	movff	i2readRTC@t_data,??i2_readRTC
 18974  0042D4  0E0F               	movlw	15
 18975  0042D6  1616               	andwf	??i2_readRTC,f,c
 18976  0042D8  3818               	swapf	i2readRTC@t_data,w,c
 18977  0042DA  0B0F               	andlw	15
 18978  0042DC  0D0A               	mullw	10
 18979  0042DE  50F3               	movf	prodl,w,c
 18980  0042E0  2416               	addwf	??i2_readRTC,w,c
 18981  0042E2  0100               	movlb	0	; () banked
 18982  0042E4  6FF6               	movwf	(_time+6)& (0+255),b
 18983                           
 18984                           ; BSR set to: 0
 18985                           ;RTC.c: 30: I2C_Master_Stop();
 18986  0042E6  ECD5  F02A         	call	i2_I2C_Master_Stop	;wreg free
 18987  0042EA  0012               	return		;funcret
 18988  0042EC                     __end_ofi2_readRTC:
 18989                           	opt callstack 0
 18990                           
 18991 ;; *************** function i2_I2C_Master_Write *****************
 18992 ;; Defined at:
 18993 ;;		line 70 in file "I2C.c"
 18994 ;; Parameters:    Size  Location     Type
 18995 ;;  byteToWrite     2    1[COMRAM] unsigned int 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;		None
 18998 ;; Return value:  Size  Location     Type
 18999 ;;                  1    wreg      void 
 19000 ;; Registers used:
 19001 ;;		wreg, status,2, status,0, cstack
 19002 ;; Tracked objects:
 19003 ;;		On entry : 0/0
 19004 ;;		On exit  : 0/0
 19005 ;;		Unchanged: 0/0
 19006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19011 ;;Total ram usage:        2 bytes
 19012 ;; Hardware stack levels used:    1
 19013 ;; Hardware stack levels required when called:    1
 19014 ;; This function calls:
 19015 ;;		i2_I2C_Master_Wait
 19016 ;; This function is called by:
 19017 ;;		i2_readRTC
 19018 ;; This function uses a non-reentrant model
 19019 ;;
 19020                           
 19021                           	psect	text90
 19022  005590                     __ptext90:
 19023                           	opt callstack 0
 19024  005590                     i2_I2C_Master_Write:
 19025                           	opt callstack 18
 19026                           
 19027                           ;I2C.c: 71: I2C_Master_Wait();
 19028                           
 19029                           ;incstack = 0
 19030  005590  EC88  F02A         	call	i2_I2C_Master_Wait	;wreg free
 19031                           
 19032                           ;I2C.c: 74: SSPBUF = byteToWrite;
 19033  005594  C002  FFC9         	movff	i2I2C_Master_Write@byteToWrite,4041	;volatile
 19034  005598  0012               	return		;funcret
 19035  00559A                     __end_ofi2_I2C_Master_Write:
 19036                           	opt callstack 0
 19037                           
 19038 ;; *************** function i2_I2C_Master_Stop *****************
 19039 ;; Defined at:
 19040 ;;		line 65 in file "I2C.c"
 19041 ;; Parameters:    Size  Location     Type
 19042 ;;		None
 19043 ;; Auto vars:     Size  Location     Type
 19044 ;;		None
 19045 ;; Return value:  Size  Location     Type
 19046 ;;                  1    wreg      void 
 19047 ;; Registers used:
 19048 ;;		wreg, status,2, status,0, cstack
 19049 ;; Tracked objects:
 19050 ;;		On entry : 0/0
 19051 ;;		On exit  : 0/0
 19052 ;;		Unchanged: 0/0
 19053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19058 ;;Total ram usage:        0 bytes
 19059 ;; Hardware stack levels used:    1
 19060 ;; Hardware stack levels required when called:    1
 19061 ;; This function calls:
 19062 ;;		i2_I2C_Master_Wait
 19063 ;; This function is called by:
 19064 ;;		i2_readRTC
 19065 ;; This function uses a non-reentrant model
 19066 ;;
 19067                           
 19068                           	psect	text91
 19069  0055AA                     __ptext91:
 19070                           	opt callstack 0
 19071  0055AA                     i2_I2C_Master_Stop:
 19072                           	opt callstack 18
 19073                           
 19074                           ;I2C.c: 66: I2C_Master_Wait();
 19075                           
 19076                           ;incstack = 0
 19077  0055AA  EC88  F02A         	call	i2_I2C_Master_Wait	;wreg free
 19078                           
 19079                           ;I2C.c: 67: SSPCON2bits.PEN = 1;
 19080  0055AE  84C5               	bsf	4037,2,c	;volatile
 19081  0055B0  0012               	return		;funcret
 19082  0055B2                     __end_ofi2_I2C_Master_Stop:
 19083                           	opt callstack 0
 19084                           
 19085 ;; *************** function i2_I2C_Master_Start *****************
 19086 ;; Defined at:
 19087 ;;		line 55 in file "I2C.c"
 19088 ;; Parameters:    Size  Location     Type
 19089 ;;		None
 19090 ;; Auto vars:     Size  Location     Type
 19091 ;;		None
 19092 ;; Return value:  Size  Location     Type
 19093 ;;                  1    wreg      void 
 19094 ;; Registers used:
 19095 ;;		wreg, status,2, status,0, cstack
 19096 ;; Tracked objects:
 19097 ;;		On entry : 0/0
 19098 ;;		On exit  : 0/0
 19099 ;;		Unchanged: 0/0
 19100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19105 ;;Total ram usage:        0 bytes
 19106 ;; Hardware stack levels used:    1
 19107 ;; Hardware stack levels required when called:    1
 19108 ;; This function calls:
 19109 ;;		i2_I2C_Master_Wait
 19110 ;; This function is called by:
 19111 ;;		i2_readRTC
 19112 ;; This function uses a non-reentrant model
 19113 ;;
 19114                           
 19115                           	psect	text92
 19116  0055B2                     __ptext92:
 19117                           	opt callstack 0
 19118  0055B2                     i2_I2C_Master_Start:
 19119                           	opt callstack 18
 19120                           
 19121                           ;I2C.c: 56: I2C_Master_Wait();
 19122                           
 19123                           ;incstack = 0
 19124  0055B2  EC88  F02A         	call	i2_I2C_Master_Wait	;wreg free
 19125                           
 19126                           ;I2C.c: 57: SSPCON2bits.SEN = 1;
 19127  0055B6  80C5               	bsf	4037,0,c	;volatile
 19128  0055B8  0012               	return		;funcret
 19129  0055BA                     __end_ofi2_I2C_Master_Start:
 19130                           	opt callstack 0
 19131                           
 19132 ;; *************** function i2_I2C_Master_Read *****************
 19133 ;; Defined at:
 19134 ;;		line 77 in file "I2C.c"
 19135 ;; Parameters:    Size  Location     Type
 19136 ;;  ackBit          1    wreg     unsigned char 
 19137 ;; Auto vars:     Size  Location     Type
 19138 ;;  ackBit          1    1[COMRAM] unsigned char 
 19139 ;;  I2C_Master_R    1    2[COMRAM] unsigned char 
 19140 ;; Return value:  Size  Location     Type
 19141 ;;                  1    wreg      unsigned char 
 19142 ;; Registers used:
 19143 ;;		wreg, status,2, status,0, cstack
 19144 ;; Tracked objects:
 19145 ;;		On entry : 0/0
 19146 ;;		On exit  : 0/0
 19147 ;;		Unchanged: 0/0
 19148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19153 ;;Total ram usage:        2 bytes
 19154 ;; Hardware stack levels used:    1
 19155 ;; Hardware stack levels required when called:    1
 19156 ;; This function calls:
 19157 ;;		i2_I2C_Master_Wait
 19158 ;; This function is called by:
 19159 ;;		i2_readRTC
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           	psect	text93
 19164  005392                     __ptext93:
 19165                           	opt callstack 0
 19166  005392                     i2_I2C_Master_Read:
 19167                           	opt callstack 18
 19168                           
 19169                           ;incstack = 0
 19170                           ;i2I2C_Master_Read@ackBit stored from wreg
 19171  005392  6E02               	movwf	i2I2C_Master_Read@ackBit,c
 19172                           
 19173                           ;I2C.c: 78: I2C_Master_Wait();
 19174  005394  EC88  F02A         	call	i2_I2C_Master_Wait	;wreg free
 19175                           
 19176                           ;I2C.c: 79: SSPCON2bits.RCEN = 1;
 19177  005398  86C5               	bsf	4037,3,c	;volatile
 19178                           
 19179                           ;I2C.c: 81: I2C_Master_Wait();
 19180  00539A  EC88  F02A         	call	i2_I2C_Master_Wait	;wreg free
 19181                           
 19182                           ;I2C.c: 84: unsigned char receivedByte = SSPBUF;
 19183  00539E  CFC9 F003          	movff	4041,i2I2C_Master_Read@receivedByte	;volatile
 19184                           
 19185                           ;I2C.c: 86: I2C_Master_Wait();
 19186  0053A2  EC88  F02A         	call	i2_I2C_Master_Wait	;wreg free
 19187                           
 19188                           ;I2C.c: 87: SSPCON2bits.ACKDT = ackBit;
 19189  0053A6  B002               	btfsc	i2I2C_Master_Read@ackBit,0,c
 19190  0053A8  D002               	bra	i2u567_45
 19191  0053AA  9AC5               	bcf	4037,5,c	;volatile
 19192  0053AC  D001               	bra	i2u567_46
 19193  0053AE                     i2u567_45:
 19194  0053AE  8AC5               	bsf	4037,5,c	;volatile
 19195  0053B0                     i2u567_46:
 19196                           
 19197                           ;I2C.c: 88: SSPCON2bits.ACKEN = 1;
 19198  0053B0  88C5               	bsf	4037,4,c	;volatile
 19199                           
 19200                           ;I2C.c: 90: return receivedByte;
 19201  0053B2  5003               	movf	i2I2C_Master_Read@receivedByte,w,c
 19202  0053B4  0012               	return		;funcret
 19203  0053B6                     __end_ofi2_I2C_Master_Read:
 19204                           	opt callstack 0
 19205                           
 19206 ;; *************** function i2_I2C_Master_Wait *****************
 19207 ;; Defined at:
 19208 ;;		line 21 in file "I2C.c"
 19209 ;; Parameters:    Size  Location     Type
 19210 ;;		None
 19211 ;; Auto vars:     Size  Location     Type
 19212 ;;		None
 19213 ;; Return value:  Size  Location     Type
 19214 ;;                  1    wreg      void 
 19215 ;; Registers used:
 19216 ;;		wreg, status,2, status,0
 19217 ;; Tracked objects:
 19218 ;;		On entry : 0/0
 19219 ;;		On exit  : 0/0
 19220 ;;		Unchanged: 0/0
 19221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19226 ;;Total ram usage:        1 bytes
 19227 ;; Hardware stack levels used:    1
 19228 ;; This function calls:
 19229 ;;		Nothing
 19230 ;; This function is called by:
 19231 ;;		i2_I2C_Master_Start
 19232 ;;		i2_I2C_Master_Stop
 19233 ;;		i2_I2C_Master_Write
 19234 ;;		i2_I2C_Master_Read
 19235 ;; This function uses a non-reentrant model
 19236 ;;
 19237                           
 19238                           	psect	text94
 19239  005510                     __ptext94:
 19240                           	opt callstack 0
 19241  005510                     i2_I2C_Master_Wait:
 19242                           	opt callstack 18
 19243                           
 19244                           ;I2C.c: 26: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F)){
 19245                           
 19246                           ;incstack = 0
 19247  005510  B4C7               	btfsc	4039,2,c	;volatile
 19248  005512  D7FE               	goto	i2_I2C_Master_Wait
 19249  005514  CFC5 F001          	movff	4037,??i2_I2C_Master_Wait	;volatile
 19250  005518  0E1F               	movlw	31
 19251  00551A  1601               	andwf	??i2_I2C_Master_Wait,f,c
 19252  00551C  B4D8               	btfsc	status,2,c
 19253  00551E  0012               	return	
 19254  005520  D7F7               	goto	i2_I2C_Master_Wait
 19255  005522                     __end_ofi2_I2C_Master_Wait:
 19256                           	opt callstack 0
 19257                           
 19258 ;; *************** function i2_I2C_Master_Init *****************
 19259 ;; Defined at:
 19260 ;;		line 32 in file "I2C.c"
 19261 ;; Parameters:    Size  Location     Type
 19262 ;;  clockFreq       4   13[COMRAM] const unsigned long 
 19263 ;; Auto vars:     Size  Location     Type
 19264 ;;		None
 19265 ;; Return value:  Size  Location     Type
 19266 ;;                  1    wreg      void 
 19267 ;; Registers used:
 19268 ;;		wreg, status,2, status,0, cstack
 19269 ;; Tracked objects:
 19270 ;;		On entry : 0/0
 19271 ;;		On exit  : 0/0
 19272 ;;		Unchanged: 0/0
 19273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19276 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19277 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19278 ;;Total ram usage:        8 bytes
 19279 ;; Hardware stack levels used:    1
 19280 ;; Hardware stack levels required when called:    1
 19281 ;; This function calls:
 19282 ;;		i2___lldiv
 19283 ;; This function is called by:
 19284 ;;		i2_readRTC
 19285 ;; This function uses a non-reentrant model
 19286 ;;
 19287                           
 19288                           	psect	text95
 19289  004C90                     __ptext95:
 19290                           	opt callstack 0
 19291  004C90                     i2_I2C_Master_Init:
 19292                           	opt callstack 18
 19293                           
 19294                           ;I2C.c: 34: SSPCON1bits.SSPEN = 0;
 19295                           
 19296                           ;incstack = 0
 19297  004C90  9AC6               	bcf	4038,5,c	;volatile
 19298                           
 19299                           ;I2C.c: 37: TRISCbits.TRISC3 = 1;
 19300  004C92  8694               	bsf	3988,3,c	;volatile
 19301                           
 19302                           ;I2C.c: 38: TRISCbits.TRISC4 = 1;
 19303  004C94  8894               	bsf	3988,4,c	;volatile
 19304                           
 19305                           ;I2C.c: 43: SSPADD = (10000000 / (4 * clockFreq)) - 1;
 19306  004C96  0E80               	movlw	128
 19307  004C98  6E01               	movwf	i2___lldiv@dividend,c
 19308  004C9A  0E96               	movlw	150
 19309  004C9C  6E02               	movwf	i2___lldiv@dividend+1,c
 19310  004C9E  0E98               	movlw	152
 19311  004CA0  6E03               	movwf	i2___lldiv@dividend+2,c
 19312  004CA2  0E00               	movlw	0
 19313  004CA4  6E04               	movwf	i2___lldiv@dividend+3,c
 19314  004CA6  C00E  F012         	movff	i2I2C_Master_Init@clockFreq,??i2_I2C_Master_Init
 19315  004CAA  C00F  F013         	movff	i2I2C_Master_Init@clockFreq+1,??i2_I2C_Master_Init+1
 19316  004CAE  C010  F014         	movff	i2I2C_Master_Init@clockFreq+2,??i2_I2C_Master_Init+2
 19317  004CB2  C011  F015         	movff	i2I2C_Master_Init@clockFreq+3,??i2_I2C_Master_Init+3
 19318  004CB6  0E02               	movlw	2
 19319  004CB8                     i2u566_45:
 19320  004CB8  90D8               	bcf	status,0,c
 19321  004CBA  3612               	rlcf	??i2_I2C_Master_Init,f,c
 19322  004CBC  3613               	rlcf	??i2_I2C_Master_Init+1,f,c
 19323  004CBE  3614               	rlcf	??i2_I2C_Master_Init+2,f,c
 19324  004CC0  3615               	rlcf	??i2_I2C_Master_Init+3,f,c
 19325  004CC2  2EE8               	decfsz	wreg,f,c
 19326  004CC4  D7F9               	goto	i2u566_45
 19327  004CC6  C012  F005         	movff	??i2_I2C_Master_Init,i2___lldiv@divisor
 19328  004CCA  C013  F006         	movff	??i2_I2C_Master_Init+1,i2___lldiv@divisor+1
 19329  004CCE  C014  F007         	movff	??i2_I2C_Master_Init+2,i2___lldiv@divisor+2
 19330  004CD2  C015  F008         	movff	??i2_I2C_Master_Init+3,i2___lldiv@divisor+3
 19331  004CD6  EC53  F023         	call	i2___lldiv	;wreg free
 19332  004CDA  0401               	decf	?i2___lldiv,w,c
 19333  004CDC  6EC8               	movwf	4040,c	;volatile
 19334                           
 19335                           ;I2C.c: 46: SSPSTAT = 0b10000000;
 19336  004CDE  0E80               	movlw	128
 19337  004CE0  6EC7               	movwf	4039,c	;volatile
 19338                           
 19339                           ;I2C.c: 49: SSPCON1 = 0b00101000;
 19340  004CE2  0E28               	movlw	40
 19341  004CE4  6EC6               	movwf	4038,c	;volatile
 19342                           
 19343                           ;I2C.c: 52: SSPCON2 = 0b00000000;
 19344  004CE6  0E00               	movlw	0
 19345  004CE8  6EC5               	movwf	4037,c	;volatile
 19346  004CEA  0012               	return		;funcret
 19347  004CEC                     __end_ofi2_I2C_Master_Init:
 19348                           	opt callstack 0
 19349                           
 19350 ;; *************** function i2___lldiv *****************
 19351 ;; Defined at:
 19352 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;  dividend        4    0[COMRAM] unsigned long 
 19355 ;;  divisor         4    4[COMRAM] unsigned long 
 19356 ;; Auto vars:     Size  Location     Type
 19357 ;;  __lldiv         4    8[COMRAM] unsigned long 
 19358 ;;  __lldiv         1   12[COMRAM] unsigned char 
 19359 ;; Return value:  Size  Location     Type
 19360 ;;                  4    0[COMRAM] unsigned long 
 19361 ;; Registers used:
 19362 ;;		wreg, status,2, status,0
 19363 ;; Tracked objects:
 19364 ;;		On entry : 0/0
 19365 ;;		On exit  : 0/0
 19366 ;;		Unchanged: 0/0
 19367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19368 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19369 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19371 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19372 ;;Total ram usage:       13 bytes
 19373 ;; Hardware stack levels used:    1
 19374 ;; This function calls:
 19375 ;;		Nothing
 19376 ;; This function is called by:
 19377 ;;		i2_I2C_Master_Init
 19378 ;; This function uses a non-reentrant model
 19379 ;;
 19380                           
 19381                           	psect	text96
 19382  0046A6                     __ptext96:
 19383                           	opt callstack 0
 19384  0046A6                     i2___lldiv:
 19385                           	opt callstack 18
 19386                           
 19387                           ;incstack = 0
 19388  0046A6  0E00               	movlw	0
 19389  0046A8  6E09               	movwf	i2___lldiv@quotient,c
 19390  0046AA  0E00               	movlw	0
 19391  0046AC  6E0A               	movwf	i2___lldiv@quotient+1,c
 19392  0046AE  0E00               	movlw	0
 19393  0046B0  6E0B               	movwf	i2___lldiv@quotient+2,c
 19394  0046B2  0E00               	movlw	0
 19395  0046B4  6E0C               	movwf	i2___lldiv@quotient+3,c
 19396  0046B6  5005               	movf	i2___lldiv@divisor,w,c
 19397  0046B8  1006               	iorwf	i2___lldiv@divisor+1,w,c
 19398  0046BA  1007               	iorwf	i2___lldiv@divisor+2,w,c
 19399  0046BC  1008               	iorwf	i2___lldiv@divisor+3,w,c
 19400  0046BE  B4D8               	btfsc	status,2,c
 19401  0046C0  D02A               	goto	i2l1799
 19402  0046C2  0E01               	movlw	1
 19403  0046C4  6E0D               	movwf	i2___lldiv@counter,c
 19404  0046C6  D006               	goto	i2l6268
 19405  0046C8                     i2l6266:
 19406  0046C8  90D8               	bcf	status,0,c
 19407  0046CA  3605               	rlcf	i2___lldiv@divisor,f,c
 19408  0046CC  3606               	rlcf	i2___lldiv@divisor+1,f,c
 19409  0046CE  3607               	rlcf	i2___lldiv@divisor+2,f,c
 19410  0046D0  3608               	rlcf	i2___lldiv@divisor+3,f,c
 19411  0046D2  2A0D               	incf	i2___lldiv@counter,f,c
 19412  0046D4                     i2l6268:
 19413  0046D4  AE08               	btfss	i2___lldiv@divisor+3,7,c
 19414  0046D6  D7F8               	goto	i2l6266
 19415  0046D8                     i2u491_40:
 19416  0046D8  90D8               	bcf	status,0,c
 19417  0046DA  3609               	rlcf	i2___lldiv@quotient,f,c
 19418  0046DC  360A               	rlcf	i2___lldiv@quotient+1,f,c
 19419  0046DE  360B               	rlcf	i2___lldiv@quotient+2,f,c
 19420  0046E0  360C               	rlcf	i2___lldiv@quotient+3,f,c
 19421  0046E2  5005               	movf	i2___lldiv@divisor,w,c
 19422  0046E4  5C01               	subwf	i2___lldiv@dividend,w,c
 19423  0046E6  5006               	movf	i2___lldiv@divisor+1,w,c
 19424  0046E8  5802               	subwfb	i2___lldiv@dividend+1,w,c
 19425  0046EA  5007               	movf	i2___lldiv@divisor+2,w,c
 19426  0046EC  5803               	subwfb	i2___lldiv@dividend+2,w,c
 19427  0046EE  5008               	movf	i2___lldiv@divisor+3,w,c
 19428  0046F0  5804               	subwfb	i2___lldiv@dividend+3,w,c
 19429  0046F2  A0D8               	btfss	status,0,c
 19430  0046F4  D009               	goto	i2l6278
 19431  0046F6  5005               	movf	i2___lldiv@divisor,w,c
 19432  0046F8  5E01               	subwf	i2___lldiv@dividend,f,c
 19433  0046FA  5006               	movf	i2___lldiv@divisor+1,w,c
 19434  0046FC  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 19435  0046FE  5007               	movf	i2___lldiv@divisor+2,w,c
 19436  004700  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 19437  004702  5008               	movf	i2___lldiv@divisor+3,w,c
 19438  004704  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 19439  004706  8009               	bsf	i2___lldiv@quotient,0,c
 19440  004708                     i2l6278:
 19441  004708  90D8               	bcf	status,0,c
 19442  00470A  3208               	rrcf	i2___lldiv@divisor+3,f,c
 19443  00470C  3207               	rrcf	i2___lldiv@divisor+2,f,c
 19444  00470E  3206               	rrcf	i2___lldiv@divisor+1,f,c
 19445  004710  3205               	rrcf	i2___lldiv@divisor,f,c
 19446  004712  2E0D               	decfsz	i2___lldiv@counter,f,c
 19447  004714  D7E1               	goto	i2u491_40
 19448  004716                     i2l1799:
 19449  004716  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 19450  00471A  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 19451  00471E  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 19452  004722  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 19453  004726  0012               	return		;funcret
 19454  004728                     __end_ofi2___lldiv:
 19455                           	opt callstack 0
 19456                           
 19457 ;; *************** function i2___almod *****************
 19458 ;; Defined at:
 19459 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\almod.c"
 19460 ;; Parameters:    Size  Location     Type
 19461 ;;  dividend        4    0[COMRAM] long 
 19462 ;;  divisor         4    4[COMRAM] long 
 19463 ;; Auto vars:     Size  Location     Type
 19464 ;;  __almod         1    9[COMRAM] unsigned char 
 19465 ;;  __almod         1    8[COMRAM] unsigned char 
 19466 ;; Return value:  Size  Location     Type
 19467 ;;                  4    0[COMRAM] long 
 19468 ;; Registers used:
 19469 ;;		wreg, status,2, status,0
 19470 ;; Tracked objects:
 19471 ;;		On entry : 0/0
 19472 ;;		On exit  : 0/0
 19473 ;;		Unchanged: 0/0
 19474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19475 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19478 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19479 ;;Total ram usage:       10 bytes
 19480 ;; Hardware stack levels used:    1
 19481 ;; This function calls:
 19482 ;;		Nothing
 19483 ;; This function is called by:
 19484 ;;		i2_normal_updater
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text97
 19489  003FC2                     __ptext97:
 19490                           	opt callstack 0
 19491  003FC2                     i2___almod:
 19492                           	opt callstack 19
 19493                           
 19494                           ;incstack = 0
 19495  003FC2  0E00               	movlw	0
 19496  003FC4  6E0A               	movwf	i2___almod@sign,c
 19497  003FC6  AE04               	btfss	i2___almod@dividend+3,7,c
 19498  003FC8  D00A               	goto	i2l7694
 19499  003FCA  1E04               	comf	i2___almod@dividend+3,f,c
 19500  003FCC  1E03               	comf	i2___almod@dividend+2,f,c
 19501  003FCE  1E02               	comf	i2___almod@dividend+1,f,c
 19502  003FD0  6C01               	negf	i2___almod@dividend,c
 19503  003FD2  0E00               	movlw	0
 19504  003FD4  2202               	addwfc	i2___almod@dividend+1,f,c
 19505  003FD6  2203               	addwfc	i2___almod@dividend+2,f,c
 19506  003FD8  2204               	addwfc	i2___almod@dividend+3,f,c
 19507  003FDA  0E01               	movlw	1
 19508  003FDC  6E0A               	movwf	i2___almod@sign,c
 19509  003FDE                     i2l7694:
 19510  003FDE  AE08               	btfss	i2___almod@divisor+3,7,c
 19511  003FE0  D008               	goto	i2l7698
 19512  003FE2  1E08               	comf	i2___almod@divisor+3,f,c
 19513  003FE4  1E07               	comf	i2___almod@divisor+2,f,c
 19514  003FE6  1E06               	comf	i2___almod@divisor+1,f,c
 19515  003FE8  6C05               	negf	i2___almod@divisor,c
 19516  003FEA  0E00               	movlw	0
 19517  003FEC  2206               	addwfc	i2___almod@divisor+1,f,c
 19518  003FEE  2207               	addwfc	i2___almod@divisor+2,f,c
 19519  003FF0  2208               	addwfc	i2___almod@divisor+3,f,c
 19520  003FF2                     i2l7698:
 19521  003FF2  5005               	movf	i2___almod@divisor,w,c
 19522  003FF4  1006               	iorwf	i2___almod@divisor+1,w,c
 19523  003FF6  1007               	iorwf	i2___almod@divisor+2,w,c
 19524  003FF8  1008               	iorwf	i2___almod@divisor+3,w,c
 19525  003FFA  B4D8               	btfsc	status,2,c
 19526  003FFC  D024               	goto	i2l7714
 19527  003FFE  0E01               	movlw	1
 19528  004000  6E09               	movwf	i2___almod@counter,c
 19529  004002  D006               	goto	i2l7704
 19530  004004                     i2l7702:
 19531  004004  90D8               	bcf	status,0,c
 19532  004006  3605               	rlcf	i2___almod@divisor,f,c
 19533  004008  3606               	rlcf	i2___almod@divisor+1,f,c
 19534  00400A  3607               	rlcf	i2___almod@divisor+2,f,c
 19535  00400C  3608               	rlcf	i2___almod@divisor+3,f,c
 19536  00400E  2A09               	incf	i2___almod@counter,f,c
 19537  004010                     i2l7704:
 19538  004010  AE08               	btfss	i2___almod@divisor+3,7,c
 19539  004012  D7F8               	goto	i2l7702
 19540  004014                     i2u678_40:
 19541  004014  5005               	movf	i2___almod@divisor,w,c
 19542  004016  5C01               	subwf	i2___almod@dividend,w,c
 19543  004018  5006               	movf	i2___almod@divisor+1,w,c
 19544  00401A  5802               	subwfb	i2___almod@dividend+1,w,c
 19545  00401C  5007               	movf	i2___almod@divisor+2,w,c
 19546  00401E  5803               	subwfb	i2___almod@dividend+2,w,c
 19547  004020  5008               	movf	i2___almod@divisor+3,w,c
 19548  004022  5804               	subwfb	i2___almod@dividend+3,w,c
 19549  004024  A0D8               	btfss	status,0,c
 19550  004026  D008               	goto	i2l7710
 19551  004028  5005               	movf	i2___almod@divisor,w,c
 19552  00402A  5E01               	subwf	i2___almod@dividend,f,c
 19553  00402C  5006               	movf	i2___almod@divisor+1,w,c
 19554  00402E  5A02               	subwfb	i2___almod@dividend+1,f,c
 19555  004030  5007               	movf	i2___almod@divisor+2,w,c
 19556  004032  5A03               	subwfb	i2___almod@dividend+2,f,c
 19557  004034  5008               	movf	i2___almod@divisor+3,w,c
 19558  004036  5A04               	subwfb	i2___almod@dividend+3,f,c
 19559  004038                     i2l7710:
 19560  004038  90D8               	bcf	status,0,c
 19561  00403A  3208               	rrcf	i2___almod@divisor+3,f,c
 19562  00403C  3207               	rrcf	i2___almod@divisor+2,f,c
 19563  00403E  3206               	rrcf	i2___almod@divisor+1,f,c
 19564  004040  3205               	rrcf	i2___almod@divisor,f,c
 19565  004042  2E09               	decfsz	i2___almod@counter,f,c
 19566  004044  D7E7               	goto	i2u678_40
 19567  004046                     i2l7714:
 19568  004046  500A               	movf	i2___almod@sign,w,c
 19569  004048  B4D8               	btfsc	status,2,c
 19570  00404A  D008               	goto	i2l7718
 19571  00404C  1E04               	comf	i2___almod@dividend+3,f,c
 19572  00404E  1E03               	comf	i2___almod@dividend+2,f,c
 19573  004050  1E02               	comf	i2___almod@dividend+1,f,c
 19574  004052  6C01               	negf	i2___almod@dividend,c
 19575  004054  0E00               	movlw	0
 19576  004056  2202               	addwfc	i2___almod@dividend+1,f,c
 19577  004058  2203               	addwfc	i2___almod@dividend+2,f,c
 19578  00405A  2204               	addwfc	i2___almod@dividend+3,f,c
 19579  00405C                     i2l7718:
 19580  00405C  C001  F001         	movff	i2___almod@dividend,?i2___almod
 19581  004060  C002  F002         	movff	i2___almod@dividend+1,?i2___almod+1
 19582  004064  C003  F003         	movff	i2___almod@dividend+2,?i2___almod+2
 19583  004068  C004  F004         	movff	i2___almod@dividend+3,?i2___almod+3
 19584  00406C  0012               	return		;funcret
 19585  00406E                     __end_ofi2___almod:
 19586                           	opt callstack 0
 19587                           
 19588 ;; *************** function i2___aldiv *****************
 19589 ;; Defined at:
 19590 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\aldiv.c"
 19591 ;; Parameters:    Size  Location     Type
 19592 ;;  dividend        4   10[COMRAM] long 
 19593 ;;  divisor         4   14[COMRAM] long 
 19594 ;; Auto vars:     Size  Location     Type
 19595 ;;  __aldiv         4   20[COMRAM] long 
 19596 ;;  __aldiv         1   19[COMRAM] unsigned char 
 19597 ;;  __aldiv         1   18[COMRAM] unsigned char 
 19598 ;; Return value:  Size  Location     Type
 19599 ;;                  4   10[COMRAM] long 
 19600 ;; Registers used:
 19601 ;;		wreg, status,2, status,0
 19602 ;; Tracked objects:
 19603 ;;		On entry : 0/0
 19604 ;;		On exit  : 0/0
 19605 ;;		Unchanged: 0/0
 19606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19607 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19608 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19610 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19611 ;;Total ram usage:       14 bytes
 19612 ;; Hardware stack levels used:    1
 19613 ;; This function calls:
 19614 ;;		Nothing
 19615 ;; This function is called by:
 19616 ;;		i2_normal_updater
 19617 ;; This function uses a non-reentrant model
 19618 ;;
 19619                           
 19620                           	psect	text98
 19621  003D8C                     __ptext98:
 19622                           	opt callstack 0
 19623  003D8C                     i2___aldiv:
 19624                           	opt callstack 19
 19625                           
 19626                           ;incstack = 0
 19627  003D8C  0E00               	movlw	0
 19628  003D8E  6E14               	movwf	i2___aldiv@sign,c
 19629  003D90  AE12               	btfss	i2___aldiv@divisor+3,7,c
 19630  003D92  D00A               	goto	i2l7650
 19631  003D94  1E12               	comf	i2___aldiv@divisor+3,f,c
 19632  003D96  1E11               	comf	i2___aldiv@divisor+2,f,c
 19633  003D98  1E10               	comf	i2___aldiv@divisor+1,f,c
 19634  003D9A  6C0F               	negf	i2___aldiv@divisor,c
 19635  003D9C  0E00               	movlw	0
 19636  003D9E  2210               	addwfc	i2___aldiv@divisor+1,f,c
 19637  003DA0  2211               	addwfc	i2___aldiv@divisor+2,f,c
 19638  003DA2  2212               	addwfc	i2___aldiv@divisor+3,f,c
 19639  003DA4  0E01               	movlw	1
 19640  003DA6  6E14               	movwf	i2___aldiv@sign,c
 19641  003DA8                     i2l7650:
 19642  003DA8  AE0E               	btfss	i2___aldiv@dividend+3,7,c
 19643  003DAA  D00A               	goto	i2l7656
 19644  003DAC  1E0E               	comf	i2___aldiv@dividend+3,f,c
 19645  003DAE  1E0D               	comf	i2___aldiv@dividend+2,f,c
 19646  003DB0  1E0C               	comf	i2___aldiv@dividend+1,f,c
 19647  003DB2  6C0B               	negf	i2___aldiv@dividend,c
 19648  003DB4  0E00               	movlw	0
 19649  003DB6  220C               	addwfc	i2___aldiv@dividend+1,f,c
 19650  003DB8  220D               	addwfc	i2___aldiv@dividend+2,f,c
 19651  003DBA  220E               	addwfc	i2___aldiv@dividend+3,f,c
 19652  003DBC  0E01               	movlw	1
 19653  003DBE  1A14               	xorwf	i2___aldiv@sign,f,c
 19654  003DC0                     i2l7656:
 19655  003DC0  0E00               	movlw	0
 19656  003DC2  6E15               	movwf	i2___aldiv@quotient,c
 19657  003DC4  0E00               	movlw	0
 19658  003DC6  6E16               	movwf	i2___aldiv@quotient+1,c
 19659  003DC8  0E00               	movlw	0
 19660  003DCA  6E17               	movwf	i2___aldiv@quotient+2,c
 19661  003DCC  0E00               	movlw	0
 19662  003DCE  6E18               	movwf	i2___aldiv@quotient+3,c
 19663  003DD0  500F               	movf	i2___aldiv@divisor,w,c
 19664  003DD2  1010               	iorwf	i2___aldiv@divisor+1,w,c
 19665  003DD4  1011               	iorwf	i2___aldiv@divisor+2,w,c
 19666  003DD6  1012               	iorwf	i2___aldiv@divisor+3,w,c
 19667  003DD8  B4D8               	btfsc	status,2,c
 19668  003DDA  D02A               	goto	i2l7678
 19669  003DDC  0E01               	movlw	1
 19670  003DDE  6E13               	movwf	i2___aldiv@counter,c
 19671  003DE0  D006               	goto	i2l7664
 19672  003DE2                     i2l7662:
 19673  003DE2  90D8               	bcf	status,0,c
 19674  003DE4  360F               	rlcf	i2___aldiv@divisor,f,c
 19675  003DE6  3610               	rlcf	i2___aldiv@divisor+1,f,c
 19676  003DE8  3611               	rlcf	i2___aldiv@divisor+2,f,c
 19677  003DEA  3612               	rlcf	i2___aldiv@divisor+3,f,c
 19678  003DEC  2A13               	incf	i2___aldiv@counter,f,c
 19679  003DEE                     i2l7664:
 19680  003DEE  AE12               	btfss	i2___aldiv@divisor+3,7,c
 19681  003DF0  D7F8               	goto	i2l7662
 19682  003DF2                     i2u672_40:
 19683  003DF2  90D8               	bcf	status,0,c
 19684  003DF4  3615               	rlcf	i2___aldiv@quotient,f,c
 19685  003DF6  3616               	rlcf	i2___aldiv@quotient+1,f,c
 19686  003DF8  3617               	rlcf	i2___aldiv@quotient+2,f,c
 19687  003DFA  3618               	rlcf	i2___aldiv@quotient+3,f,c
 19688  003DFC  500F               	movf	i2___aldiv@divisor,w,c
 19689  003DFE  5C0B               	subwf	i2___aldiv@dividend,w,c
 19690  003E00  5010               	movf	i2___aldiv@divisor+1,w,c
 19691  003E02  580C               	subwfb	i2___aldiv@dividend+1,w,c
 19692  003E04  5011               	movf	i2___aldiv@divisor+2,w,c
 19693  003E06  580D               	subwfb	i2___aldiv@dividend+2,w,c
 19694  003E08  5012               	movf	i2___aldiv@divisor+3,w,c
 19695  003E0A  580E               	subwfb	i2___aldiv@dividend+3,w,c
 19696  003E0C  A0D8               	btfss	status,0,c
 19697  003E0E  D009               	goto	i2l7674
 19698  003E10  500F               	movf	i2___aldiv@divisor,w,c
 19699  003E12  5E0B               	subwf	i2___aldiv@dividend,f,c
 19700  003E14  5010               	movf	i2___aldiv@divisor+1,w,c
 19701  003E16  5A0C               	subwfb	i2___aldiv@dividend+1,f,c
 19702  003E18  5011               	movf	i2___aldiv@divisor+2,w,c
 19703  003E1A  5A0D               	subwfb	i2___aldiv@dividend+2,f,c
 19704  003E1C  5012               	movf	i2___aldiv@divisor+3,w,c
 19705  003E1E  5A0E               	subwfb	i2___aldiv@dividend+3,f,c
 19706  003E20  8015               	bsf	i2___aldiv@quotient,0,c
 19707  003E22                     i2l7674:
 19708  003E22  90D8               	bcf	status,0,c
 19709  003E24  3212               	rrcf	i2___aldiv@divisor+3,f,c
 19710  003E26  3211               	rrcf	i2___aldiv@divisor+2,f,c
 19711  003E28  3210               	rrcf	i2___aldiv@divisor+1,f,c
 19712  003E2A  320F               	rrcf	i2___aldiv@divisor,f,c
 19713  003E2C  2E13               	decfsz	i2___aldiv@counter,f,c
 19714  003E2E  D7E1               	goto	i2u672_40
 19715  003E30                     i2l7678:
 19716  003E30  5014               	movf	i2___aldiv@sign,w,c
 19717  003E32  B4D8               	btfsc	status,2,c
 19718  003E34  D008               	goto	i2l7682
 19719  003E36  1E18               	comf	i2___aldiv@quotient+3,f,c
 19720  003E38  1E17               	comf	i2___aldiv@quotient+2,f,c
 19721  003E3A  1E16               	comf	i2___aldiv@quotient+1,f,c
 19722  003E3C  6C15               	negf	i2___aldiv@quotient,c
 19723  003E3E  0E00               	movlw	0
 19724  003E40  2216               	addwfc	i2___aldiv@quotient+1,f,c
 19725  003E42  2217               	addwfc	i2___aldiv@quotient+2,f,c
 19726  003E44  2218               	addwfc	i2___aldiv@quotient+3,f,c
 19727  003E46                     i2l7682:
 19728  003E46  C015  F00B         	movff	i2___aldiv@quotient,?i2___aldiv
 19729  003E4A  C016  F00C         	movff	i2___aldiv@quotient+1,?i2___aldiv+1
 19730  003E4E  C017  F00D         	movff	i2___aldiv@quotient+2,?i2___aldiv+2
 19731  003E52  C018  F00E         	movff	i2___aldiv@quotient+3,?i2___aldiv+3
 19732  003E56  0012               	return		;funcret
 19733  003E58                     __end_ofi2___aldiv:
 19734                           	opt callstack 0
 19735                           
 19736 ;; *************** function i2_initmoving_disp *****************
 19737 ;; Defined at:
 19738 ;;		line 342 in file "display.c"
 19739 ;; Parameters:    Size  Location     Type
 19740 ;;		None
 19741 ;; Auto vars:     Size  Location     Type
 19742 ;;		None
 19743 ;; Return value:  Size  Location     Type
 19744 ;;                  1    wreg      void 
 19745 ;; Registers used:
 19746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19747 ;; Tracked objects:
 19748 ;;		On entry : 0/0
 19749 ;;		On exit  : 0/0
 19750 ;;		Unchanged: 0/0
 19751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19755 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19756 ;;Total ram usage:        1 bytes
 19757 ;; Hardware stack levels used:    1
 19758 ;; Hardware stack levels required when called:    5
 19759 ;; This function calls:
 19760 ;;		i2_lcdInst
 19761 ;;		i2_printf
 19762 ;; This function is called by:
 19763 ;;		_initialize_func
 19764 ;; This function uses a non-reentrant model
 19765 ;;
 19766                           
 19767                           	psect	text99
 19768  0053B6                     __ptext99:
 19769                           	opt callstack 0
 19770  0053B6                     i2_initmoving_disp:
 19771                           	opt callstack 15
 19772                           
 19773                           ;display.c: 343: { lcdInst(0x01); _delay((unsigned long)((5)*(10000000/4000.0)));};
 19774                           
 19775                           ;incstack = 0
 19776  0053B6  0E01               	movlw	1
 19777  0053B8  ECB7  F02A         	call	i2_lcdInst
 19778  0053BC  0E11               	movlw	17
 19779  0053BE  6E1C               	movwf	??i2_initmoving_disp& (0+255),c
 19780  0053C0  0E3A               	movlw	58
 19781  0053C2                     i2u1365_47:
 19782  0053C2  2EE8               	decfsz	wreg,f,c
 19783  0053C4  D7FE               	bra	i2u1365_47
 19784  0053C6  2E1C               	decfsz	??i2_initmoving_disp& (0+255),f,c
 19785  0053C8  D7FC               	bra	i2u1365_47
 19786  0053CA  D000               	nop2	
 19787                           
 19788                           ;display.c: 344: printf("Running");
 19789  0053CC  0ECF               	movlw	low STR_73
 19790  0053CE  6E0D               	movwf	i2printf@f,c
 19791  0053D0  0EFF               	movlw	high STR_73
 19792  0053D2  6E0E               	movwf	i2printf@f+1,c
 19793  0053D4  ECAF  F011         	call	i2_printf	;wreg free
 19794  0053D8  0012               	return		;funcret
 19795  0053DA                     __end_ofi2_initmoving_disp:
 19796                           	opt callstack 0
 19797                           
 19798 ;; *************** function i2_printf *****************
 19799 ;; Defined at:
 19800 ;;		line 472 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
 19801 ;; Parameters:    Size  Location     Type
 19802 ;;  f               2   12[COMRAM] PTR const unsigned char 
 19803 ;;		 -> STR_73(8), STR_72(16), STR_71(13), STR_70(12), 
 19804 ;;		 -> STR_69(9), STR_68(15), STR_67(13), STR_66(12), 
 19805 ;;		 -> STR_65(9), STR_64(15), STR_63(10), STR_62(9), 
 19806 ;;		 -> STR_61(15), STR_60(9), STR_59(14), STR_58(9), 
 19807 ;;		 -> STR_57(11), STR_56(17), STR_55(14), STR_54(9), 
 19808 ;;		 -> STR_53(10), STR_52(12), STR_51(9), STR_50(15), 
 19809 ;;		 -> STR_49(5), STR_48(15), STR_47(3), STR_46(5), 
 19810 ;;		 -> STR_45(10), STR_44(13), STR_43(18), STR_42(3), 
 19811 ;;		 -> STR_41(2), STR_40(3), STR_39(2), STR_38(17), 
 19812 ;;		 -> STR_37(14), STR_36(16), STR_35(11), STR_34(7), 
 19813 ;;		 -> STR_33(11), STR_32(11), STR_31(5), STR_30(3), 
 19814 ;;		 -> STR_29(10), STR_28(17), STR_27(3), STR_26(10), 
 19815 ;;		 -> STR_25(16), STR_24(3), STR_23(10), STR_22(16), 
 19816 ;;		 -> STR_21(9), STR_20(9), STR_19(10), STR_18(16), 
 19817 ;;		 -> STR_17(17), STR_16(13), STR_15(18), STR_14(10), 
 19818 ;;		 -> STR_13(7), STR_12(10), STR_11(7), STR_10(17), 
 19819 ;;		 -> STR_9(13), STR_8(18), STR_7(12), STR_6(13), 
 19820 ;;		 -> STR_5(6), STR_4(10), STR_3(15), STR_2(17), 
 19821 ;;		 -> STR_1(13), 
 19822 ;; Auto vars:     Size  Location     Type
 19823 ;;  printf          4    0        struct .
 19824 ;;  printf          3    0        PTR const unsigned char 
 19825 ;;  printf          2   24[COMRAM] int 
 19826 ;;  printf          2   21[COMRAM] unsigned int 
 19827 ;;  printf          2   18[COMRAM] PTR void [1]
 19828 ;;		 -> ?i2_printf(2), ?_printf(2), 
 19829 ;;  printf          2    0        unsigned int 
 19830 ;;  printf          1   26[COMRAM] unsigned char 
 19831 ;;  printf          1   23[COMRAM] unsigned char 
 19832 ;;  printf          1   20[COMRAM] char 
 19833 ;; Return value:  Size  Location     Type
 19834 ;;                  2   12[COMRAM] int 
 19835 ;; Registers used:
 19836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19837 ;; Tracked objects:
 19838 ;;		On entry : 0/0
 19839 ;;		On exit  : 0/0
 19840 ;;		Unchanged: 0/0
 19841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19842 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19843 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19844 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19845 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19846 ;;Total ram usage:       15 bytes
 19847 ;; Hardware stack levels used:    1
 19848 ;; Hardware stack levels required when called:    4
 19849 ;; This function calls:
 19850 ;;		i2___lwdiv
 19851 ;;		i2___lwmod
 19852 ;;		i2___wmul
 19853 ;;		i2_isdigit
 19854 ;;		i2_putch
 19855 ;; This function is called by:
 19856 ;;		_interruptHandler
 19857 ;;		i2_initmoving_disp
 19858 ;; This function uses a non-reentrant model
 19859 ;;
 19860                           
 19861                           	psect	text100
 19862  00235E                     __ptext100:
 19863                           	opt callstack 0
 19864  00235E                     i2_printf:
 19865                           	opt callstack 17
 19866                           
 19867                           ;doprnt.c: 474: va_list ap;;doprnt.c: 507: char c;;doprnt.c: 509: int width;;doprnt.c: 5
      +                          16: signed char prec;;doprnt.c: 520: unsigned char flag;;doprnt.c: 535: union {;doprnt.c
      +                          : 536: unsigned long vd;;doprnt.c: 537: double integ;;doprnt.c: 538: } tmpval;;doprnt.c:
      +                           540: unsigned int val;;doprnt.c: 541: unsigned len;;doprnt.c: 542: const char * cp;;dop
      +                          rnt.c: 545: *ap = __va_start();
 19868                           
 19869                           ;incstack = 0
 19870  00235E  0E0F               	movlw	low (?i2_printf+2)
 19871  002360  6E13               	movwf	i2printf@ap,c
 19872  002362  0E00               	movlw	high (?i2_printf+2)
 19873  002364  6E14               	movwf	i2printf@ap+1,c
 19874                           
 19875                           ;doprnt.c: 548: while((c = *f++)) {
 19876  002366  D111               	goto	i2u667_40
 19877  002368                     i2l7546:
 19878                           
 19879                           ;doprnt.c: 550: if(c != '%')
 19880  002368  0E25               	movlw	37
 19881  00236A  181B               	xorwf	i2printf@c,w,c
 19882  00236C  B4D8               	btfsc	status,2,c
 19883  00236E  D004               	goto	i2l7550
 19884                           
 19885                           ;doprnt.c: 552: {;doprnt.c: 553: (putch(c) );
 19886  002370  501B               	movf	i2printf@c,w,c
 19887  002372  ECB1  F02A         	call	i2_putch
 19888                           
 19889                           ;doprnt.c: 554: continue;
 19890  002376  D109               	goto	i2u667_40
 19891  002378                     i2l7550:
 19892                           
 19893                           ;doprnt.c: 555: };doprnt.c: 558: width = 0;
 19894  002378  0E00               	movlw	0
 19895  00237A  6E1A               	movwf	i2printf@width+1,c
 19896  00237C  0E00               	movlw	0
 19897  00237E  6E19               	movwf	i2printf@width,c
 19898                           
 19899                           ;doprnt.c: 560: flag = 0;
 19900  002380  0E00               	movlw	0
 19901  002382  6E18               	movwf	i2printf@flag,c
 19902  002384  D003               	goto	i2l7556
 19903  002386                     i2l7552:
 19904                           
 19905                           ;doprnt.c: 592: flag |= 0x04;
 19906  002386  8418               	bsf	i2printf@flag,2,c
 19907                           
 19908                           ;doprnt.c: 593: f++;
 19909  002388  4A0D               	infsnz	i2printf@f,f,c
 19910  00238A  2A0E               	incf	i2printf@f+1,f,c
 19911  00238C                     i2l7556:
 19912  00238C  C00D  FFF6         	movff	i2printf@f,tblptrl
 19913  002390  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 19914  002394                     	if	0	;tblptru may be non-zero
 19915  002394                     	endif
 19916  002394                     	if	0	;tblptru may be non-zero
 19917  002394                     	endif
 19918  002394  0008               	tblrd		*
 19919  002396  50F5               	movf	tablat,w,c
 19920                           
 19921                           ; Switch size 1, requested type "simple"
 19922                           ; Number of cases is 1, Range of values is 48 to 48
 19923                           ; switch strategies available:
 19924                           ; Name         Instructions Cycles
 19925                           ; simple_byte            4     3 (average)
 19926                           ;	Chosen strategy is simple_byte
 19927  002398  0A30               	xorlw	48	; case 48
 19928  00239A  B4D8               	btfsc	status,2,c
 19929  00239C  D7F4               	goto	i2l7552
 19930                           
 19931                           ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
 19932  00239E  C00D  FFF6         	movff	i2printf@f,tblptrl
 19933  0023A2  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 19934  0023A6                     	if	0	;tblptru may be non-zero
 19935  0023A6                     	endif
 19936  0023A6                     	if	0	;tblptru may be non-zero
 19937  0023A6                     	endif
 19938  0023A6  0008               	tblrd		*
 19939  0023A8  50F5               	movf	tablat,w,c
 19940  0023AA  EC1C  F02A         	call	i2_isdigit
 19941  0023AE  A0D8               	btfss	status,0,c
 19942  0023B0  D032               	goto	i2u653_40
 19943                           
 19944                           ;doprnt.c: 610: width = 0;
 19945  0023B2  0E00               	movlw	0
 19946  0023B4  6E1A               	movwf	i2printf@width+1,c
 19947  0023B6  0E00               	movlw	0
 19948  0023B8  6E19               	movwf	i2printf@width,c
 19949  0023BA                     i2l7562:
 19950                           
 19951                           ;doprnt.c: 612: width *= 10;
 19952  0023BA  C019  F001         	movff	i2printf@width,i2___wmul@multiplier
 19953  0023BE  C01A  F002         	movff	i2printf@width+1,i2___wmul@multiplier+1
 19954  0023C2  0E00               	movlw	0
 19955  0023C4  6E04               	movwf	i2___wmul@multiplicand+1,c
 19956  0023C6  0E0A               	movlw	10
 19957  0023C8  6E03               	movwf	i2___wmul@multiplicand,c
 19958  0023CA  EC80  F029         	call	i2___wmul	;wreg free
 19959  0023CE  C001  F019         	movff	?i2___wmul,i2printf@width
 19960  0023D2  C002  F01A         	movff	?i2___wmul+1,i2printf@width+1
 19961                           
 19962                           ;doprnt.c: 613: width += *f++ - '0';
 19963  0023D6  0ED0               	movlw	208
 19964  0023D8  6E0F               	movwf	??i2_printf& (0+255),c
 19965  0023DA  0EFF               	movlw	255
 19966  0023DC  6E10               	movwf	(??i2_printf+1)& (0+255),c
 19967  0023DE  C00D  FFF6         	movff	i2printf@f,tblptrl
 19968  0023E2  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 19969  0023E6                     	if	0	;tblptru may be non-zero
 19970  0023E6                     	endif
 19971  0023E6                     	if	0	;tblptru may be non-zero
 19972  0023E6                     	endif
 19973  0023E6  0008               	tblrd		*
 19974  0023E8  50F5               	movf	tablat,w,c
 19975  0023EA  6E11               	movwf	(??i2_printf+2)& (0+255),c
 19976  0023EC  6A12               	clrf	(??i2_printf+3)& (0+255),c
 19977  0023EE  500F               	movf	??i2_printf,w,c
 19978  0023F0  2611               	addwf	??i2_printf+2,f,c
 19979  0023F2  5010               	movf	??i2_printf+1,w,c
 19980  0023F4  2212               	addwfc	??i2_printf+3,f,c
 19981  0023F6  5011               	movf	??i2_printf+2,w,c
 19982  0023F8  2619               	addwf	i2printf@width,f,c
 19983  0023FA  5012               	movf	??i2_printf+3,w,c
 19984  0023FC  221A               	addwfc	i2printf@width+1,f,c
 19985  0023FE  4A0D               	infsnz	i2printf@f,f,c
 19986  002400  2A0E               	incf	i2printf@f+1,f,c
 19987                           
 19988                           ;doprnt.c: 614: } while(isdigit((unsigned)*f));
 19989  002402  C00D  FFF6         	movff	i2printf@f,tblptrl
 19990  002406  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 19991  00240A                     	if	0	;tblptru may be non-zero
 19992  00240A                     	endif
 19993  00240A                     	if	0	;tblptru may be non-zero
 19994  00240A                     	endif
 19995  00240A  0008               	tblrd		*
 19996  00240C  50F5               	movf	tablat,w,c
 19997  00240E  EC1C  F02A         	call	i2_isdigit
 19998  002412  B0D8               	btfsc	status,0,c
 19999  002414  D7D2               	goto	i2l7562
 20000  002416                     i2u653_40:
 20001  002416  C00D  FFF6         	movff	i2printf@f,tblptrl
 20002  00241A  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 20003  00241E  4A0D               	infsnz	i2printf@f,f,c
 20004  002420  2A0E               	incf	i2printf@f+1,f,c
 20005  002422                     	if	0	;tblptru may be non-zero
 20006  002422                     	endif
 20007  002422                     	if	0	;tblptru may be non-zero
 20008  002422                     	endif
 20009  002422  0008               	tblrd		*
 20010  002424  CFF5 F01B          	movff	tablat,i2printf@c
 20011  002428  501B               	movf	i2printf@c,w,c
 20012                           
 20013                           ; Switch size 1, requested type "simple"
 20014                           ; Number of cases is 3, Range of values is 0 to 105
 20015                           ; switch strategies available:
 20016                           ; Name         Instructions Cycles
 20017                           ; simple_byte           10     6 (average)
 20018                           ;	Chosen strategy is simple_byte
 20019  00242A  0A00               	xorlw	0	; case 0
 20020  00242C  B4D8               	btfsc	status,2,c
 20021  00242E  0012               	return	
 20022  002430  0A64               	xorlw	100	; case 100
 20023  002432  B4D8               	btfsc	status,2,c
 20024  002434  D003               	goto	i2l7574
 20025  002436  0A0D               	xorlw	13	; case 105
 20026  002438  A4D8               	btfss	status,2,c
 20027  00243A  D0A7               	goto	i2u667_40
 20028  00243C                     i2l7574:
 20029                           
 20030                           ;doprnt.c: 1272: {;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 20031  00243C  C013  FFD9         	movff	i2printf@ap,fsr2l
 20032  002440  C014  FFDA         	movff	i2printf@ap+1,fsr2h
 20033  002444  CFDE F016          	movff	postinc2,i2printf@val
 20034  002448  CFDD F017          	movff	postdec2,i2printf@val+1
 20035  00244C  0E02               	movlw	2
 20036  00244E  2613               	addwf	i2printf@ap,f,c
 20037  002450  0E00               	movlw	0
 20038  002452  2214               	addwfc	i2printf@ap+1,f,c
 20039                           
 20040                           ;doprnt.c: 1280: if((int)val < 0) {
 20041  002454  AE17               	btfss	i2printf@val+1,7,c
 20042  002456  D006               	goto	i2l7584
 20043                           
 20044                           ;doprnt.c: 1281: flag |= 0x03;
 20045  002458  0E03               	movlw	3
 20046  00245A  1218               	iorwf	i2printf@flag,f,c
 20047                           
 20048                           ;doprnt.c: 1282: val = -val;
 20049  00245C  6C16               	negf	i2printf@val,c
 20050  00245E  1E17               	comf	i2printf@val+1,f,c
 20051  002460  B0D8               	btfsc	status,0,c
 20052  002462  2A17               	incf	i2printf@val+1,f,c
 20053  002464                     i2l7584:
 20054                           
 20055                           ;doprnt.c: 1283: };doprnt.c: 1285: };doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 20056  002464  0E01               	movlw	1
 20057  002466  6E1B               	movwf	i2printf@c,c
 20058  002468                     i2l7586:
 20059  002468  0E05               	movlw	5
 20060  00246A  181B               	xorwf	i2printf@c,w,c
 20061  00246C  B4D8               	btfsc	status,2,c
 20062  00246E  D012               	goto	i2l7598
 20063                           
 20064                           ;doprnt.c: 1325: if(val < dpowers[c])
 20065  002470  501B               	movf	i2printf@c,w,c
 20066  002472  0D02               	mullw	2
 20067  002474  0E1E               	movlw	low _dpowers
 20068  002476  24F3               	addwf	prodl,w,c
 20069  002478  6EF6               	movwf	tblptrl,c
 20070  00247A  0EFD               	movlw	high _dpowers
 20071  00247C  20F4               	addwfc	prodh,w,c
 20072  00247E  6EF7               	movwf	tblptrh,c
 20073  002480                     	if	0	;There are less than 3 active tblptr bytes
 20074  002480                     	endif
 20075  002480  0009               	tblrd		*+
 20076  002482  50F5               	movf	tablat,w,c
 20077  002484  5C16               	subwf	i2printf@val,w,c
 20078  002486  0009               	tblrd		*+
 20079  002488  50F5               	movf	tablat,w,c
 20080  00248A  5817               	subwfb	i2printf@val+1,w,c
 20081  00248C  A0D8               	btfss	status,0,c
 20082  00248E  D002               	goto	i2l7598
 20083  002490  2A1B               	incf	i2printf@c,f,c
 20084  002492  D7EA               	goto	i2l7586
 20085  002494                     i2l7598:
 20086                           
 20087                           ;doprnt.c: 1364: if(width && flag & 0x03)
 20088  002494  5019               	movf	i2printf@width,w,c
 20089  002496  101A               	iorwf	i2printf@width+1,w,c
 20090  002498  B4D8               	btfsc	status,2,c
 20091  00249A  D009               	goto	i2l7604
 20092  00249C  C018  F00F         	movff	i2printf@flag,??i2_printf
 20093  0024A0  0E03               	movlw	3
 20094  0024A2  160F               	andwf	??i2_printf,f,c
 20095  0024A4  B4D8               	btfsc	status,2,c
 20096  0024A6  D003               	goto	i2l7604
 20097                           
 20098                           ;doprnt.c: 1365: width--;
 20099  0024A8  0619               	decf	i2printf@width,f,c
 20100  0024AA  A0D8               	btfss	status,0,c
 20101  0024AC  061A               	decf	i2printf@width+1,f,c
 20102  0024AE                     i2l7604:
 20103                           
 20104                           ;doprnt.c: 1400: if(width > c)
 20105  0024AE  501B               	movf	i2printf@c,w,c
 20106  0024B0  6E0F               	movwf	??i2_printf& (0+255),c
 20107  0024B2  6A10               	clrf	(??i2_printf+1)& (0+255),c
 20108  0024B4  5019               	movf	i2printf@width,w,c
 20109  0024B6  5C0F               	subwf	??i2_printf,w,c
 20110  0024B8  5010               	movf	??i2_printf+1,w,c
 20111  0024BA  0A80               	xorlw	128
 20112  0024BC  6E11               	movwf	(??i2_printf+2)& (0+255),c
 20113  0024BE  501A               	movf	i2printf@width+1,w,c
 20114  0024C0  0A80               	xorlw	128
 20115  0024C2  5811               	subwfb	(??i2_printf+2)& (0+255),w,c
 20116  0024C4  B0D8               	btfsc	status,0,c
 20117  0024C6  D005               	goto	i2l7608
 20118                           
 20119                           ;doprnt.c: 1401: width -= c;
 20120  0024C8  501B               	movf	i2printf@c,w,c
 20121  0024CA  5E19               	subwf	i2printf@width,f,c
 20122  0024CC  0E00               	movlw	0
 20123  0024CE  5A1A               	subwfb	i2printf@width+1,f,c
 20124  0024D0  D004               	goto	i2l7610
 20125  0024D2                     i2l7608:
 20126                           
 20127                           ;doprnt.c: 1402: else;doprnt.c: 1403: width = 0;
 20128  0024D2  0E00               	movlw	0
 20129  0024D4  6E1A               	movwf	i2printf@width+1,c
 20130  0024D6  0E00               	movlw	0
 20131  0024D8  6E19               	movwf	i2printf@width,c
 20132  0024DA                     i2l7610:
 20133                           
 20134                           ;doprnt.c: 1406: if(flag & 0x04) {
 20135  0024DA  A418               	btfss	i2printf@flag,2,c
 20136  0024DC  D014               	goto	i2l7622
 20137                           
 20138                           ;doprnt.c: 1411: if(flag & 0x03)
 20139  0024DE  C018  F00F         	movff	i2printf@flag,??i2_printf
 20140  0024E2  0E03               	movlw	3
 20141  0024E4  160F               	andwf	??i2_printf,f,c
 20142  0024E6  B4D8               	btfsc	status,2,c
 20143  0024E8  D003               	goto	i2l7616
 20144                           
 20145                           ;doprnt.c: 1412: (putch('-') );
 20146  0024EA  0E2D               	movlw	45
 20147  0024EC  ECB1  F02A         	call	i2_putch
 20148  0024F0                     i2l7616:
 20149                           
 20150                           ;doprnt.c: 1434: if(width)
 20151  0024F0  5019               	movf	i2printf@width,w,c
 20152  0024F2  101A               	iorwf	i2printf@width+1,w,c
 20153  0024F4  B4D8               	btfsc	status,2,c
 20154  0024F6  D01E               	goto	i2l7632
 20155                           
 20156                           ;doprnt.c: 1436: (putch('0') );
 20157  0024F8  0E30               	movlw	48
 20158  0024FA  ECB1  F02A         	call	i2_putch
 20159                           
 20160                           ;doprnt.c: 1437: while(--width);
 20161  0024FE  0619               	decf	i2printf@width,f,c
 20162  002500  A0D8               	btfss	status,0,c
 20163  002502  061A               	decf	i2printf@width+1,f,c
 20164  002504  D7F5               	goto	i2l7616
 20165  002506                     i2l7622:
 20166                           
 20167                           ;doprnt.c: 1441: {;doprnt.c: 1443: if(width;doprnt.c: 1447: )
 20168  002506  5019               	movf	i2printf@width,w,c
 20169  002508  101A               	iorwf	i2printf@width+1,w,c
 20170  00250A  B4D8               	btfsc	status,2,c
 20171  00250C  D00A               	goto	i2u665_40
 20172  00250E                     i2u664_40:
 20173                           
 20174                           ;doprnt.c: 1449: (putch(' ') );
 20175  00250E  0E20               	movlw	32
 20176  002510  ECB1  F02A         	call	i2_putch
 20177                           
 20178                           ;doprnt.c: 1450: while(--width);
 20179  002514  0619               	decf	i2printf@width,f,c
 20180  002516  A0D8               	btfss	status,0,c
 20181  002518  061A               	decf	i2printf@width+1,f,c
 20182  00251A  5019               	movf	i2printf@width,w,c
 20183  00251C  101A               	iorwf	i2printf@width+1,w,c
 20184  00251E  A4D8               	btfss	status,2,c
 20185  002520  D7F6               	goto	i2u664_40
 20186  002522                     i2u665_40:
 20187                           
 20188                           ;doprnt.c: 1457: if(flag & 0x03)
 20189  002522  C018  F00F         	movff	i2printf@flag,??i2_printf
 20190  002526  0E03               	movlw	3
 20191  002528  160F               	andwf	??i2_printf,f,c
 20192  00252A  B4D8               	btfsc	status,2,c
 20193  00252C  D003               	goto	i2l7632
 20194                           
 20195                           ;doprnt.c: 1458: (putch('-') );
 20196  00252E  0E2D               	movlw	45
 20197  002530  ECB1  F02A         	call	i2_putch
 20198  002534                     i2l7632:
 20199                           
 20200                           ;doprnt.c: 1488: };doprnt.c: 1491: prec = c;
 20201  002534  C01B  F015         	movff	i2printf@c,i2printf@prec
 20202                           
 20203                           ;doprnt.c: 1493: while(prec--) {
 20204  002538  D024               	goto	i2l7638
 20205  00253A                     i2l7634:
 20206                           
 20207                           ;doprnt.c: 1497: {;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
 20208  00253A  5015               	movf	i2printf@prec,w,c
 20209  00253C  0D02               	mullw	2
 20210  00253E  0E1E               	movlw	low _dpowers
 20211  002540  24F3               	addwf	prodl,w,c
 20212  002542  6EF6               	movwf	tblptrl,c
 20213  002544  0EFD               	movlw	high _dpowers
 20214  002546  20F4               	addwfc	prodh,w,c
 20215  002548  6EF7               	movwf	tblptrh,c
 20216  00254A                     	if	0	;There are less than 3 active tblptr bytes
 20217  00254A                     	endif
 20218  00254A  0009               	tblrd		*+
 20219  00254C  CFF5 F003          	movff	tablat,i2___lwdiv@divisor
 20220  002550  000A               	tblrd		*-
 20221  002552  CFF5 F004          	movff	tablat,i2___lwdiv@divisor+1
 20222  002556  C016  F001         	movff	i2printf@val,i2___lwdiv@dividend
 20223  00255A  C017  F002         	movff	i2printf@val+1,i2___lwdiv@dividend+1
 20224  00255E  ECC9  F026         	call	i2___lwdiv	;wreg free
 20225  002562  C001  F008         	movff	?i2___lwdiv,i2___lwmod@dividend
 20226  002566  C002  F009         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
 20227  00256A  0E00               	movlw	0
 20228  00256C  6E0B               	movwf	i2___lwmod@divisor+1,c
 20229  00256E  0E0A               	movlw	10
 20230  002570  6E0A               	movwf	i2___lwmod@divisor,c
 20231  002572  EC6F  F028         	call	i2___lwmod	;wreg free
 20232  002576  5008               	movf	?i2___lwmod,w,c
 20233  002578  0F30               	addlw	48
 20234  00257A  6E1B               	movwf	i2printf@c,c
 20235                           
 20236                           ;doprnt.c: 1542: };doprnt.c: 1543: (putch(c) );
 20237  00257C  501B               	movf	i2printf@c,w,c
 20238  00257E  ECB1  F02A         	call	i2_putch
 20239  002582                     i2l7638:
 20240  002582  0615               	decf	i2printf@prec,f,c
 20241  002584  2815               	incf	i2printf@prec,w,c
 20242  002586  A4D8               	btfss	status,2,c
 20243  002588  D7D8               	goto	i2l7634
 20244  00258A                     i2u667_40:
 20245  00258A  C00D  FFF6         	movff	i2printf@f,tblptrl
 20246  00258E  C00E  FFF7         	movff	i2printf@f+1,tblptrh
 20247  002592  4A0D               	infsnz	i2printf@f,f,c
 20248  002594  2A0E               	incf	i2printf@f+1,f,c
 20249  002596                     	if	0	;tblptru may be non-zero
 20250  002596                     	endif
 20251  002596                     	if	0	;tblptru may be non-zero
 20252  002596                     	endif
 20253  002596  0008               	tblrd		*
 20254  002598  CFF5 F01B          	movff	tablat,i2printf@c
 20255  00259C  501B               	movf	i2printf@c,w,c
 20256  00259E  B4D8               	btfsc	status,2,c
 20257  0025A0  0012               	return	
 20258  0025A2  D6E2               	goto	i2l7546
 20259  0025A4                     __end_ofi2_printf:
 20260                           	opt callstack 0
 20261                           
 20262 ;; *************** function i2_putch *****************
 20263 ;; Defined at:
 20264 ;;		line 94 in file "lcd.c"
 20265 ;; Parameters:    Size  Location     Type
 20266 ;;  data            1    wreg     unsigned char 
 20267 ;; Auto vars:     Size  Location     Type
 20268 ;;  data            1    3[COMRAM] unsigned char 
 20269 ;; Return value:  Size  Location     Type
 20270 ;;                  1    wreg      void 
 20271 ;; Registers used:
 20272 ;;		wreg, status,2, status,0, cstack
 20273 ;; Tracked objects:
 20274 ;;		On entry : 0/0
 20275 ;;		On exit  : 0/0
 20276 ;;		Unchanged: 0/0
 20277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20281 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20282 ;;Total ram usage:        1 bytes
 20283 ;; Hardware stack levels used:    1
 20284 ;; Hardware stack levels required when called:    3
 20285 ;; This function calls:
 20286 ;;		i2_send_byte
 20287 ;; This function is called by:
 20288 ;;		i2_printf
 20289 ;; This function uses a non-reentrant model
 20290 ;;
 20291                           
 20292                           	psect	text101
 20293  005562                     __ptext101:
 20294                           	opt callstack 0
 20295  005562                     i2_putch:
 20296                           	opt callstack 17
 20297                           
 20298                           ;incstack = 0
 20299                           ;i2putch@data stored from wreg
 20300  005562  6E04               	movwf	i2putch@data,c
 20301                           
 20302                           ;lcd.c: 95: LATDbits.LATD2 = 1;
 20303  005564  848C               	bsf	3980,2,c	;volatile
 20304                           
 20305                           ;lcd.c: 96: send_byte((unsigned char)data);
 20306  005566  5004               	movf	i2putch@data,w,c
 20307  005568  EC91  F02A         	call	i2_send_byte
 20308  00556C  0012               	return		;funcret
 20309  00556E                     __end_ofi2_putch:
 20310                           	opt callstack 0
 20311                           
 20312 ;; *************** function i2_isdigit *****************
 20313 ;; Defined at:
 20314 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
 20315 ;; Parameters:    Size  Location     Type
 20316 ;;  c               1    wreg     unsigned char 
 20317 ;; Auto vars:     Size  Location     Type
 20318 ;;  c               1    2[COMRAM] unsigned char 
 20319 ;; Return value:  Size  Location     Type
 20320 ;;		None               void
 20321 ;; Registers used:
 20322 ;;		wreg, status,2, status,0
 20323 ;; Tracked objects:
 20324 ;;		On entry : 0/0
 20325 ;;		On exit  : 0/0
 20326 ;;		Unchanged: 0/0
 20327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20329 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20330 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20332 ;;Total ram usage:        3 bytes
 20333 ;; Hardware stack levels used:    1
 20334 ;; This function calls:
 20335 ;;		Nothing
 20336 ;; This function is called by:
 20337 ;;		i2_printf
 20338 ;; This function uses a non-reentrant model
 20339 ;;
 20340                           
 20341                           	psect	text102
 20342  005438                     __ptext102:
 20343                           	opt callstack 0
 20344  005438                     i2_isdigit:
 20345                           	opt callstack 20
 20346                           
 20347                           ;incstack = 0
 20348                           ;i2isdigit@c stored from wreg
 20349  005438  6E03               	movwf	i2isdigit@c,c
 20350  00543A  0E00               	movlw	0
 20351  00543C  6E02               	movwf	i2_isdigit$2496,c
 20352  00543E  0E3A               	movlw	58
 20353  005440  6003               	cpfslt	i2isdigit@c,c
 20354  005442  D005               	goto	i2l6840
 20355  005444  0E2F               	movlw	47
 20356  005446  6403               	cpfsgt	i2isdigit@c,c
 20357  005448  D002               	goto	i2l6840
 20358  00544A  0E01               	movlw	1
 20359  00544C  6E02               	movwf	i2_isdigit$2496,c
 20360  00544E                     i2l6840:
 20361  00544E  C002  F001         	movff	i2_isdigit$2496,??i2_isdigit
 20362  005452  3001               	rrcf	??i2_isdigit,w,c
 20363  005454  0012               	return		;funcret
 20364  005456                     __end_ofi2_isdigit:
 20365                           	opt callstack 0
 20366                           
 20367 ;; *************** function i2___wmul *****************
 20368 ;; Defined at:
 20369 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
 20370 ;; Parameters:    Size  Location     Type
 20371 ;;  multiplier      2    0[COMRAM] unsigned int 
 20372 ;;  multiplicand    2    2[COMRAM] unsigned int 
 20373 ;; Auto vars:     Size  Location     Type
 20374 ;;  __wmul          2    4[COMRAM] unsigned int 
 20375 ;; Return value:  Size  Location     Type
 20376 ;;                  2    0[COMRAM] unsigned int 
 20377 ;; Registers used:
 20378 ;;		wreg, status,2, status,0, prodl, prodh
 20379 ;; Tracked objects:
 20380 ;;		On entry : 0/0
 20381 ;;		On exit  : 0/0
 20382 ;;		Unchanged: 0/0
 20383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20385 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20388 ;;Total ram usage:        6 bytes
 20389 ;; Hardware stack levels used:    1
 20390 ;; This function calls:
 20391 ;;		Nothing
 20392 ;; This function is called by:
 20393 ;;		_initialize_func
 20394 ;;		_interruptHandler
 20395 ;;		i2_normal_updater
 20396 ;;		i2_printf
 20397 ;; This function uses a non-reentrant model
 20398 ;;
 20399                           
 20400                           	psect	text103
 20401  005300                     __ptext103:
 20402                           	opt callstack 0
 20403  005300                     i2___wmul:
 20404                           	opt callstack 20
 20405                           
 20406                           ;incstack = 0
 20407  005300  5001               	movf	i2___wmul@multiplier,w,c
 20408  005302  0203               	mulwf	i2___wmul@multiplicand,c
 20409  005304  CFF3 F005          	movff	prodl,i2___wmul@product
 20410  005308  CFF4 F006          	movff	prodh,i2___wmul@product+1
 20411  00530C  5001               	movf	i2___wmul@multiplier,w,c
 20412  00530E  0204               	mulwf	i2___wmul@multiplicand+1,c
 20413  005310  50F3               	movf	prodl,w,c
 20414  005312  2606               	addwf	i2___wmul@product+1,f,c
 20415  005314  5002               	movf	i2___wmul@multiplier+1,w,c
 20416  005316  0203               	mulwf	i2___wmul@multiplicand,c
 20417  005318  50F3               	movf	prodl,w,c
 20418  00531A  2606               	addwf	i2___wmul@product+1,f,c
 20419  00531C  C005  F001         	movff	i2___wmul@product,?i2___wmul
 20420  005320  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 20421  005324  0012               	return		;funcret
 20422  005326                     __end_ofi2___wmul:
 20423                           	opt callstack 0
 20424                           
 20425 ;; *************** function i2___lwmod *****************
 20426 ;; Defined at:
 20427 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
 20428 ;; Parameters:    Size  Location     Type
 20429 ;;  dividend        2    7[COMRAM] unsigned int 
 20430 ;;  divisor         2    9[COMRAM] unsigned int 
 20431 ;; Auto vars:     Size  Location     Type
 20432 ;;  __lwmod         1   11[COMRAM] unsigned char 
 20433 ;; Return value:  Size  Location     Type
 20434 ;;                  2    7[COMRAM] unsigned int 
 20435 ;; Registers used:
 20436 ;;		wreg, status,2, status,0
 20437 ;; Tracked objects:
 20438 ;;		On entry : 0/0
 20439 ;;		On exit  : 0/0
 20440 ;;		Unchanged: 0/0
 20441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20445 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20446 ;;Total ram usage:        5 bytes
 20447 ;; Hardware stack levels used:    1
 20448 ;; This function calls:
 20449 ;;		Nothing
 20450 ;; This function is called by:
 20451 ;;		i2_printf
 20452 ;; This function uses a non-reentrant model
 20453 ;;
 20454                           
 20455                           	psect	text104
 20456  0050DE                     __ptext104:
 20457                           	opt callstack 0
 20458  0050DE                     i2___lwmod:
 20459                           	opt callstack 20
 20460                           
 20461                           ;incstack = 0
 20462  0050DE  500A               	movf	i2___lwmod@divisor,w,c
 20463  0050E0  100B               	iorwf	i2___lwmod@divisor+1,w,c
 20464  0050E2  B4D8               	btfsc	status,2,c
 20465  0050E4  D018               	goto	i2l2261
 20466  0050E6  0E01               	movlw	1
 20467  0050E8  6E0C               	movwf	i2___lwmod@counter,c
 20468  0050EA  D004               	goto	i2l6822
 20469  0050EC                     i2l6820:
 20470  0050EC  90D8               	bcf	status,0,c
 20471  0050EE  360A               	rlcf	i2___lwmod@divisor,f,c
 20472  0050F0  360B               	rlcf	i2___lwmod@divisor+1,f,c
 20473  0050F2  2A0C               	incf	i2___lwmod@counter,f,c
 20474  0050F4                     i2l6822:
 20475  0050F4  AE0B               	btfss	i2___lwmod@divisor+1,7,c
 20476  0050F6  D7FA               	goto	i2l6820
 20477  0050F8                     i2u572_40:
 20478  0050F8  500A               	movf	i2___lwmod@divisor,w,c
 20479  0050FA  5C08               	subwf	i2___lwmod@dividend,w,c
 20480  0050FC  500B               	movf	i2___lwmod@divisor+1,w,c
 20481  0050FE  5809               	subwfb	i2___lwmod@dividend+1,w,c
 20482  005100  A0D8               	btfss	status,0,c
 20483  005102  D004               	goto	i2l6828
 20484  005104  500A               	movf	i2___lwmod@divisor,w,c
 20485  005106  5E08               	subwf	i2___lwmod@dividend,f,c
 20486  005108  500B               	movf	i2___lwmod@divisor+1,w,c
 20487  00510A  5A09               	subwfb	i2___lwmod@dividend+1,f,c
 20488  00510C                     i2l6828:
 20489  00510C  90D8               	bcf	status,0,c
 20490  00510E  320B               	rrcf	i2___lwmod@divisor+1,f,c
 20491  005110  320A               	rrcf	i2___lwmod@divisor,f,c
 20492  005112  2E0C               	decfsz	i2___lwmod@counter,f,c
 20493  005114  D7F1               	goto	i2u572_40
 20494  005116                     i2l2261:
 20495  005116  C008  F008         	movff	i2___lwmod@dividend,?i2___lwmod
 20496  00511A  C009  F009         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
 20497  00511E  0012               	return		;funcret
 20498  005120                     __end_ofi2___lwmod:
 20499                           	opt callstack 0
 20500                           
 20501 ;; *************** function i2___lwdiv *****************
 20502 ;; Defined at:
 20503 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
 20504 ;; Parameters:    Size  Location     Type
 20505 ;;  dividend        2    0[COMRAM] unsigned int 
 20506 ;;  divisor         2    2[COMRAM] unsigned int 
 20507 ;; Auto vars:     Size  Location     Type
 20508 ;;  __lwdiv         2    4[COMRAM] unsigned int 
 20509 ;;  __lwdiv         1    6[COMRAM] unsigned char 
 20510 ;; Return value:  Size  Location     Type
 20511 ;;                  2    0[COMRAM] unsigned int 
 20512 ;; Registers used:
 20513 ;;		wreg, status,2, status,0
 20514 ;; Tracked objects:
 20515 ;;		On entry : 0/0
 20516 ;;		On exit  : 0/0
 20517 ;;		Unchanged: 0/0
 20518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20520 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20522 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20523 ;;Total ram usage:        7 bytes
 20524 ;; Hardware stack levels used:    1
 20525 ;; This function calls:
 20526 ;;		Nothing
 20527 ;; This function is called by:
 20528 ;;		i2_printf
 20529 ;; This function uses a non-reentrant model
 20530 ;;
 20531                           
 20532                           	psect	text105
 20533  004D92                     __ptext105:
 20534                           	opt callstack 0
 20535  004D92                     i2___lwdiv:
 20536                           	opt callstack 20
 20537                           
 20538                           ;incstack = 0
 20539  004D92  0E00               	movlw	0
 20540  004D94  6E06               	movwf	i2___lwdiv@quotient+1,c
 20541  004D96  0E00               	movlw	0
 20542  004D98  6E05               	movwf	i2___lwdiv@quotient,c
 20543  004D9A  5003               	movf	i2___lwdiv@divisor,w,c
 20544  004D9C  1004               	iorwf	i2___lwdiv@divisor+1,w,c
 20545  004D9E  B4D8               	btfsc	status,2,c
 20546  004DA0  D01C               	goto	i2l2251
 20547  004DA2  0E01               	movlw	1
 20548  004DA4  6E07               	movwf	i2___lwdiv@counter,c
 20549  004DA6  D004               	goto	i2l6802
 20550  004DA8                     i2l6800:
 20551  004DA8  90D8               	bcf	status,0,c
 20552  004DAA  3603               	rlcf	i2___lwdiv@divisor,f,c
 20553  004DAC  3604               	rlcf	i2___lwdiv@divisor+1,f,c
 20554  004DAE  2A07               	incf	i2___lwdiv@counter,f,c
 20555  004DB0                     i2l6802:
 20556  004DB0  AE04               	btfss	i2___lwdiv@divisor+1,7,c
 20557  004DB2  D7FA               	goto	i2l6800
 20558  004DB4                     i2u569_40:
 20559  004DB4  90D8               	bcf	status,0,c
 20560  004DB6  3605               	rlcf	i2___lwdiv@quotient,f,c
 20561  004DB8  3606               	rlcf	i2___lwdiv@quotient+1,f,c
 20562  004DBA  5003               	movf	i2___lwdiv@divisor,w,c
 20563  004DBC  5C01               	subwf	i2___lwdiv@dividend,w,c
 20564  004DBE  5004               	movf	i2___lwdiv@divisor+1,w,c
 20565  004DC0  5802               	subwfb	i2___lwdiv@dividend+1,w,c
 20566  004DC2  A0D8               	btfss	status,0,c
 20567  004DC4  D005               	goto	i2l6812
 20568  004DC6  5003               	movf	i2___lwdiv@divisor,w,c
 20569  004DC8  5E01               	subwf	i2___lwdiv@dividend,f,c
 20570  004DCA  5004               	movf	i2___lwdiv@divisor+1,w,c
 20571  004DCC  5A02               	subwfb	i2___lwdiv@dividend+1,f,c
 20572  004DCE  8005               	bsf	i2___lwdiv@quotient,0,c
 20573  004DD0                     i2l6812:
 20574  004DD0  90D8               	bcf	status,0,c
 20575  004DD2  3204               	rrcf	i2___lwdiv@divisor+1,f,c
 20576  004DD4  3203               	rrcf	i2___lwdiv@divisor,f,c
 20577  004DD6  2E07               	decfsz	i2___lwdiv@counter,f,c
 20578  004DD8  D7ED               	goto	i2u569_40
 20579  004DDA                     i2l2251:
 20580  004DDA  C005  F001         	movff	i2___lwdiv@quotient,?i2___lwdiv
 20581  004DDE  C006  F002         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
 20582  004DE2  0012               	return		;funcret
 20583  004DE4                     __end_ofi2___lwdiv:
 20584                           	opt callstack 0
 20585                           
 20586 ;; *************** function i2_lcdInst *****************
 20587 ;; Defined at:
 20588 ;;		line 56 in file "lcd.c"
 20589 ;; Parameters:    Size  Location     Type
 20590 ;;  data            1    wreg     unsigned char 
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;  data            1    3[COMRAM] unsigned char 
 20593 ;; Return value:  Size  Location     Type
 20594 ;;                  1    wreg      void 
 20595 ;; Registers used:
 20596 ;;		wreg, status,2, status,0, cstack
 20597 ;; Tracked objects:
 20598 ;;		On entry : 0/0
 20599 ;;		On exit  : 0/0
 20600 ;;		Unchanged: 0/0
 20601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20603 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20605 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20606 ;;Total ram usage:        1 bytes
 20607 ;; Hardware stack levels used:    1
 20608 ;; Hardware stack levels required when called:    3
 20609 ;; This function calls:
 20610 ;;		i2_send_byte
 20611 ;; This function is called by:
 20612 ;;		_interruptHandler
 20613 ;;		i2_initmoving_disp
 20614 ;; This function uses a non-reentrant model
 20615 ;;
 20616                           
 20617                           	psect	text106
 20618  00556E                     __ptext106:
 20619                           	opt callstack 0
 20620  00556E                     i2_lcdInst:
 20621                           	opt callstack 18
 20622                           
 20623                           ;incstack = 0
 20624                           ;i2lcdInst@data stored from wreg
 20625  00556E  6E04               	movwf	i2lcdInst@data,c
 20626                           
 20627                           ;lcd.c: 57: LATDbits.LATD2 = 0;
 20628  005570  948C               	bcf	3980,2,c	;volatile
 20629                           
 20630                           ;lcd.c: 58: send_byte(data);
 20631  005572  5004               	movf	i2lcdInst@data,w,c
 20632  005574  EC91  F02A         	call	i2_send_byte
 20633  005578  0012               	return		;funcret
 20634  00557A                     __end_ofi2_lcdInst:
 20635                           	opt callstack 0
 20636                           
 20637 ;; *************** function i2_send_byte *****************
 20638 ;; Defined at:
 20639 ;;		line 47 in file "lcd.c"
 20640 ;; Parameters:    Size  Location     Type
 20641 ;;  data            1    wreg     unsigned char 
 20642 ;; Auto vars:     Size  Location     Type
 20643 ;;  data            1    2[COMRAM] unsigned char 
 20644 ;; Return value:  Size  Location     Type
 20645 ;;                  1    wreg      void 
 20646 ;; Registers used:
 20647 ;;		wreg, status,2, status,0, cstack
 20648 ;; Tracked objects:
 20649 ;;		On entry : 0/0
 20650 ;;		On exit  : 0/0
 20651 ;;		Unchanged: 0/0
 20652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20657 ;;Total ram usage:        1 bytes
 20658 ;; Hardware stack levels used:    1
 20659 ;; Hardware stack levels required when called:    2
 20660 ;; This function calls:
 20661 ;;		i2_send_nibble
 20662 ;; This function is called by:
 20663 ;;		i2_lcdInst
 20664 ;;		i2_putch
 20665 ;; This function uses a non-reentrant model
 20666 ;;
 20667                           
 20668                           	psect	text107
 20669  005522                     __ptext107:
 20670                           	opt callstack 0
 20671  005522                     i2_send_byte:
 20672                           	opt callstack 17
 20673                           
 20674                           ;incstack = 0
 20675                           ;i2send_byte@data stored from wreg
 20676  005522  6E03               	movwf	i2send_byte@data,c
 20677                           
 20678                           ;lcd.c: 49: send_nibble(data >> 4);
 20679  005524  3803               	swapf	i2send_byte@data,w,c
 20680  005526  0B0F               	andlw	15
 20681  005528  EC69  F02A         	call	i2_send_nibble
 20682                           
 20683                           ;lcd.c: 52: send_nibble(data);
 20684  00552C  5003               	movf	i2send_byte@data,w,c
 20685  00552E  EC69  F02A         	call	i2_send_nibble
 20686  005532  0012               	return		;funcret
 20687  005534                     __end_ofi2_send_byte:
 20688                           	opt callstack 0
 20689                           
 20690 ;; *************** function i2_send_nibble *****************
 20691 ;; Defined at:
 20692 ;;		line 36 in file "lcd.c"
 20693 ;; Parameters:    Size  Location     Type
 20694 ;;  data            1    wreg     unsigned char 
 20695 ;; Auto vars:     Size  Location     Type
 20696 ;;  data            1    1[COMRAM] unsigned char 
 20697 ;; Return value:  Size  Location     Type
 20698 ;;                  1    wreg      void 
 20699 ;; Registers used:
 20700 ;;		wreg, status,2, status,0, cstack
 20701 ;; Tracked objects:
 20702 ;;		On entry : 0/0
 20703 ;;		On exit  : 0/0
 20704 ;;		Unchanged: 0/0
 20705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20707 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20710 ;;Total ram usage:        1 bytes
 20711 ;; Hardware stack levels used:    1
 20712 ;; Hardware stack levels required when called:    1
 20713 ;; This function calls:
 20714 ;;		i2_pulse_e
 20715 ;; This function is called by:
 20716 ;;		i2_send_byte
 20717 ;; This function uses a non-reentrant model
 20718 ;;
 20719                           
 20720                           	psect	text108
 20721  0054D2                     __ptext108:
 20722                           	opt callstack 0
 20723  0054D2                     i2_send_nibble:
 20724                           	opt callstack 17
 20725                           
 20726                           ;incstack = 0
 20727                           ;i2send_nibble@data stored from wreg
 20728  0054D2  6E02               	movwf	i2send_nibble@data,c
 20729                           
 20730                           ;lcd.c: 38: LATD = (unsigned char)(LATD & 0x0F);
 20731  0054D4  508C               	movf	3980,w,c	;volatile
 20732  0054D6  0B0F               	andlw	15
 20733  0054D8  6E8C               	movwf	3980,c	;volatile
 20734                           
 20735                           ;lcd.c: 39: LATD = (unsigned char)((data << 4) | LATD);
 20736  0054DA  3802               	swapf	i2send_nibble@data,w,c
 20737  0054DC  0BF0               	andlw	240
 20738  0054DE  108C               	iorwf	3980,w,c	;volatile
 20739  0054E0  6E8C               	movwf	3980,c	;volatile
 20740                           
 20741                           ;lcd.c: 40: pulse_e();
 20742  0054E2  EC30  F029         	call	i2_pulse_e	;wreg free
 20743  0054E6  0012               	return		;funcret
 20744  0054E8                     __end_ofi2_send_nibble:
 20745                           	opt callstack 0
 20746                           
 20747 ;; *************** function i2_pulse_e *****************
 20748 ;; Defined at:
 20749 ;;		line 20 in file "lcd.c"
 20750 ;; Parameters:    Size  Location     Type
 20751 ;;		None
 20752 ;; Auto vars:     Size  Location     Type
 20753 ;;  pulse_e         1    0[COMRAM] unsigned char 
 20754 ;; Return value:  Size  Location     Type
 20755 ;;                  1    wreg      void 
 20756 ;; Registers used:
 20757 ;;		wreg
 20758 ;; Tracked objects:
 20759 ;;		On entry : 0/0
 20760 ;;		On exit  : 0/0
 20761 ;;		Unchanged: 0/0
 20762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20764 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20767 ;;Total ram usage:        1 bytes
 20768 ;; Hardware stack levels used:    1
 20769 ;; This function calls:
 20770 ;;		Nothing
 20771 ;; This function is called by:
 20772 ;;		i2_send_nibble
 20773 ;; This function uses a non-reentrant model
 20774 ;;
 20775                           
 20776                           	psect	text109
 20777  005260                     __ptext109:
 20778                           	opt callstack 0
 20779  005260                     i2_pulse_e:
 20780                           	opt callstack 17
 20781                           
 20782                           ;lcd.c: 21: unsigned char interruptState = INTCONbits.GIE;
 20783                           
 20784                           ;incstack = 0
 20785  005260  0E00               	movlw	0
 20786  005262  BEF2               	btfsc	4082,7,c	;volatile
 20787  005264  0E01               	movlw	1
 20788  005266  6E01               	movwf	i2pulse_e@interruptState,c
 20789                           
 20790                           ;lcd.c: 22: (INTCONbits.GIE = 0);
 20791  005268  9EF2               	bcf	4082,7,c	;volatile
 20792                           
 20793                           ;lcd.c: 23: LATDbits.LATD3 = 1;
 20794  00526A  868C               	bsf	3980,3,c	;volatile
 20795                           
 20796                           ;lcd.c: 26: _delay((unsigned long)((25)*(10000000/4000000.0)));
 20797  00526C  0E14               	movlw	20
 20798  00526E                     i2u1366_47:
 20799  00526E  2EE8               	decfsz	wreg,f,c
 20800  005270  D7FE               	bra	i2u1366_47
 20801  005272  D000               	nop2	
 20802                           
 20803                           ;lcd.c: 27: LATDbits.LATD3 = 0;
 20804  005274  968C               	bcf	3980,3,c	;volatile
 20805                           
 20806                           ;lcd.c: 28: _delay((unsigned long)((100)*(10000000/4000000.0)));
 20807  005276  0E53               	movlw	83
 20808  005278                     i2u1367_47:
 20809  005278  2EE8               	decfsz	wreg,f,c
 20810  00527A  D7FE               	bra	i2u1367_47
 20811  00527C  F000               	nop	
 20812                           
 20813                           ;lcd.c: 29: INTCONbits.GIE = interruptState;
 20814  00527E  B001               	btfsc	i2pulse_e@interruptState,0,c
 20815  005280  D002               	bra	i2u474_45
 20816  005282  9EF2               	bcf	4082,7,c	;volatile
 20817  005284  D001               	bra	i2u474_46
 20818  005286                     i2u474_45:
 20819  005286  8EF2               	bsf	4082,7,c	;volatile
 20820  005288                     i2u474_46:
 20821  005288  0012               	return		;funcret
 20822  00528A                     __end_ofi2_pulse_e:
 20823                           	opt callstack 0
 20824                           
 20825                           	psect	rparam
 20826  0000                     
 20827                           	psect	temp
 20828  000057                     btemp:
 20829                           	opt callstack 0
 20830  000057                     	ds	1
 20831  0000                     int$flags	set	btemp
 20832  0000                     wtemp8	set	btemp+1
 20833  0000                     ttemp5	set	btemp+1
 20834  0000                     ttemp6	set	btemp+4
 20835  0000                     ttemp7	set	btemp+8
 20836                           tosu	equ	0xFFF
 20837                           tosh	equ	0xFFE
 20838                           tosl	equ	0xFFD
 20839                           stkptr	equ	0xFFC
 20840                           pclatu	equ	0xFFB
 20841                           pclath	equ	0xFFA
 20842                           pcl	equ	0xFF9
 20843                           tblptru	equ	0xFF8
 20844                           tblptrh	equ	0xFF7
 20845                           tblptrl	equ	0xFF6
 20846                           tablat	equ	0xFF5
 20847                           prodh	equ	0xFF4
 20848                           prodl	equ	0xFF3
 20849                           indf0	equ	0xFEF
 20850                           postinc0	equ	0xFEE
 20851                           postdec0	equ	0xFED
 20852                           preinc0	equ	0xFEC
 20853                           plusw0	equ	0xFEB
 20854                           fsr0h	equ	0xFEA
 20855                           fsr0l	equ	0xFE9
 20856                           wreg	equ	0xFE8
 20857                           indf1	equ	0xFE7
 20858                           postinc1	equ	0xFE6
 20859                           postdec1	equ	0xFE5
 20860                           preinc1	equ	0xFE4
 20861                           plusw1	equ	0xFE3
 20862                           fsr1h	equ	0xFE2
 20863                           fsr1l	equ	0xFE1
 20864                           bsr	equ	0xFE0
 20865                           indf2	equ	0xFDF
 20866                           postinc2	equ	0xFDE
 20867                           postdec2	equ	0xFDD
 20868                           preinc2	equ	0xFDC
 20869                           plusw2	equ	0xFDB
 20870                           fsr2h	equ	0xFDA
 20871                           fsr2l	equ	0xFD9
 20872                           status	equ	0xFD8


Data Sizes:
    Strings     697
    Constant    57
    Data        34
    BSS         218
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     51      86
    BANK0           128     56     127
    BANK1           256     16     162
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_73(CODE[8]), STR_72(CODE[16]), STR_71(CODE[13]), STR_70(CODE[12]), 
		 -> STR_69(CODE[9]), STR_68(CODE[15]), STR_67(CODE[13]), STR_66(CODE[12]), 
		 -> STR_65(CODE[9]), STR_64(CODE[15]), STR_63(CODE[10]), STR_62(CODE[9]), 
		 -> STR_61(CODE[15]), STR_60(CODE[9]), STR_59(CODE[14]), STR_58(CODE[9]), 
		 -> STR_57(CODE[11]), STR_56(CODE[17]), STR_55(CODE[14]), STR_54(CODE[9]), 
		 -> STR_53(CODE[10]), STR_52(CODE[12]), STR_51(CODE[9]), STR_50(CODE[15]), 
		 -> STR_49(CODE[5]), STR_48(CODE[15]), STR_47(CODE[3]), STR_46(CODE[5]), 
		 -> STR_45(CODE[10]), STR_44(CODE[13]), STR_43(CODE[18]), STR_42(CODE[3]), 
		 -> STR_41(CODE[2]), STR_40(CODE[3]), STR_39(CODE[2]), STR_38(CODE[17]), 
		 -> STR_37(CODE[14]), STR_36(CODE[16]), STR_35(CODE[11]), STR_34(CODE[7]), 
		 -> STR_33(CODE[11]), STR_32(CODE[11]), STR_31(CODE[5]), STR_30(CODE[3]), 
		 -> STR_29(CODE[10]), STR_28(CODE[17]), STR_27(CODE[3]), STR_26(CODE[10]), 
		 -> STR_25(CODE[16]), STR_24(CODE[3]), STR_23(CODE[10]), STR_22(CODE[16]), 
		 -> STR_21(CODE[9]), STR_20(CODE[9]), STR_19(CODE[10]), STR_18(CODE[16]), 
		 -> STR_17(CODE[17]), STR_16(CODE[13]), STR_15(CODE[18]), STR_14(CODE[10]), 
		 -> STR_13(CODE[7]), STR_12(CODE[10]), STR_11(CODE[7]), STR_10(CODE[17]), 
		 -> STR_9(CODE[13]), STR_8(CODE[18]), STR_7(CODE[12]), STR_6(CODE[13]), 
		 -> STR_5(CODE[6]), STR_4(CODE[10]), STR_3(CODE[15]), STR_2(CODE[17]), 
		 -> STR_1(CODE[13]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    printintarray2@a	PTR unsigned int  size(2) Largest target is 26
		 -> print_data(BANK1[26]), 

    Cracks@a	PTR unsigned int  size(2) Largest target is 26
		 -> print_data(BANK1[26]), 

    Holes2@a	PTR unsigned int  size(2) Largest target is 26
		 -> print_data(BANK1[26]), 

    Cones@print_data	PTR unsigned int  size(2) Largest target is 26
		 -> print_data(BANK1[26]), 

    ot@print_data	PTR unsigned int  size(2) Largest target is 26
		 -> print_data(BANK1[26]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _interruptHandler in COMRAM

    _interruptHandler->_initialize_func
    _initialize_func->i2_normal_updater
    i2_normal_updater->i2___aldiv
    i2_normal_updater->i2_readRTC
    i2_readRTC->i2_I2C_Master_Init
    i2_I2C_Master_Write->i2_I2C_Master_Wait
    i2_I2C_Master_Stop->i2_I2C_Master_Wait
    i2_I2C_Master_Start->i2_I2C_Master_Wait
    i2_I2C_Master_Read->i2_I2C_Master_Wait
    i2_I2C_Master_Init->i2___lldiv
    i2___aldiv->i2___almod
    i2_initmoving_disp->i2_printf
    i2_printf->i2___lwmod
    i2_putch->i2_send_byte
    i2___lwmod->i2___lwdiv
    i2_lcdInst->i2_send_byte
    i2_send_byte->i2_send_nibble
    i2_send_nibble->i2_pulse_e

Critical Paths under _main in BANK0

    _standby_rotating->_page5
    _page6->_printf
    _page5->_printf
    _page4->_printf
    _read_total->___awdiv
    _page3->_printf
    _page2->_printf
    _page1->_printf
    _sensed_function_3->_crack_drop_bool_function
    _sensed_function_3->_hole_drop_bool_function
    _record->___fltol
    _record->_printf
    ___fltol->___flmul
    _read_encoder->___fldiv
    _moving->_straight
    _moving->_turn_left
    _moving->_turn_right
    _hole_drop_bool_function->___flge
    _drop_record->___fladd
    _crack_drop_bool_function->___flge
    ___fleq->___fladd
    _normal_updater->___aldiv
    _normal_updater->_readRTC
    _initmoving_disp->_printf
    _initLCD->_lcdInst
    _drop_function->_left_crack_drop
    _drop_function->_middle_crack_drop
    _drop_function->_right_crack_drop
    _right_crack_drop->_hole_dispense_function
    _middle_crack_drop->_hole_dispense_function
    _left_crack_drop->_hole_dispense_function
    _hole_dispense_function->_printf
    ___flsub->___fladd
    _data4->_printf
    _data3->_printf
    _data2->_printf
    _data1->_printf
    _data_disp->_Cracks
    _data_disp->_Holes2
    _ot->_printf
    _Holes2->_printintarray2
    _Cracks->_printintarray2
    _printintarray2->_printf
    _Cones->_printf
    _completion_return->_completion_write
    _readRTC->_I2C_Master_Init
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _I2C_Master_Init->___lldiv
    _completion_write->_printf
    ___flge->___flsub
    ___aldiv->___almod
    _clear_select->_printf
    _lcdInst->_send_byte
    _clear_finish->_printf
    _printf->___wmul
    _putch->_send_byte
    _send_byte->_send_nibble
    _send_nibble->_pulse_e
    ___wmul->___awdiv
    ___lwmod->___lwdiv

Critical Paths under _interruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_data_disp

Critical Paths under _interruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interruptHandler in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interruptHandler in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interruptHandler in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interruptHandler in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interruptHandler in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interruptHandler in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interruptHandler in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interruptHandler in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interruptHandler in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0  403750
                                             10 BANK1      6     6      0
                               _Stop
                            ___awdiv
                            ___awmod
                             ___flge
                            ___llmod
                             ___wmul
                       _clear_finish
                       _clear_select
                  _completion_return
                     _configureports
                          _data_disp
                        _data_select
                      _drop_function
                            _initLCD
                    _initmoving_disp
                            _lcdInst
                             _moving
                     _normal_updater
                             _printf
                       _read_encoder
                         _read_total
                  _sensed_function_3
                   _standby_rotating
 ---------------------------------------------------------------------------------
 (1) _standby_rotating                                     0     0      0   66616
                            ___awmod
                              _page1
                              _page2
                              _page3
                              _page4
                              _page5
                              _page6
 ---------------------------------------------------------------------------------
 (2) _page6                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _page5                                                5     5      0   10935
                                             35 BANK0      5     5      0
                            _lcdInst
                           _nextLine
                    _one_byte_reader
                             _printf
                       _read_pointer
                           _subtract
 ---------------------------------------------------------------------------------
 (2) _page4                                                0     0      0   12942
                            _lcdInst
                             _printf
                         _read_total
 ---------------------------------------------------------------------------------
 (3) _read_total                                           6     4      2    3213
                                              8 BANK0      6     4      2
                            ___awdiv
                       _read_pointer
 ---------------------------------------------------------------------------------
 (2) _page3                                                0     0      0   11139
                            _lcdInst
                             _printf
                            _readRTC
 ---------------------------------------------------------------------------------
 (2) _page2                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _page1                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _sensed_function_3                                   13    13      0   57105
                                             46 BANK0      5     5      0
                                              0 BANK1      8     8      0
                               _Stop
           _crack_drop_bool_function
                        _drop_record
            _hole_drop_bool_function
                             _moving
                       _read_encoder
                             _record
 ---------------------------------------------------------------------------------
 (2) _record                                               3     3      0   14211
                                             35 BANK0      3     3      0
                            ___flmul
                            ___fltol
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     973
                                             25 BANK0     10     6      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3605
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _read_encoder                                         0     0      0    6385
                            ___fladd
                            ___fldiv
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2113
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _moving                                               0     0      0       0
                           _straight
                          _turn_left
                         _turn_right
 ---------------------------------------------------------------------------------
 (3) _turn_right                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _turn_left                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _straight                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _hole_drop_bool_function                             10     8      2   15855
                                             36 BANK0     10     8      2
                            ___fladd
                             ___fleq
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _drop_record                                          4     2      2    4663
                                             16 BANK0      4     2      2
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) _crack_drop_bool_function                            10     8      2   15855
                                             36 BANK0     10     8      2
                            ___fladd
                             ___fleq
                             ___flge
                            ___flsub
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8    1130
                                             16 BANK0     12     4      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (1) _normal_updater                                       6     6      0    5294
                                             24 BANK0      6     6      0
                            ___aldiv
                            ___almod
                             ___wmul
                            _readRTC
 ---------------------------------------------------------------------------------
 (1) _initmoving_disp                                      1     1      0    9729
                                             35 BANK0      1     1      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0     350
                                              4 BANK0      1     1      0
                            _lcdInst
                          _send_byte
                        _send_nibble
 ---------------------------------------------------------------------------------
 (1) _drop_function                                        2     2      0   71584
                                             49 BANK0      2     2      0
             _hole_dispense_function
                    _left_crack_drop
                  _middle_crack_drop
                   _right_crack_drop
 ---------------------------------------------------------------------------------
 (2) _right_crack_drop                                     8     8      0   20530
                                             41 BANK0      8     8      0
                                _L_I
                                _R_I
                               _Stop
                             ___flge
                            ___flsub
             _hole_dispense_function
 ---------------------------------------------------------------------------------
 (2) _middle_crack_drop                                    8     8      0   20530
                                             41 BANK0      8     8      0
                                _L_I
                                _R_I
                               _Stop
                             ___flge
                            ___flsub
             _hole_dispense_function
 ---------------------------------------------------------------------------------
 (2) _left_crack_drop                                      8     8      0   20530
                                             41 BANK0      8     8      0
                                _L_I
                                _R_I
                               _Stop
                             ___flge
                            ___flsub
             _hole_dispense_function
 ---------------------------------------------------------------------------------
 (3) _hole_dispense_function                               6     6      0    9994
                                             35 BANK0      6     6      0
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    6817
                                             16 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _data_select                                          2     2      0   38916
                                             35 BANK0      2     2      0
                              _data1
                              _data2
                              _data3
                              _data4
 ---------------------------------------------------------------------------------
 (2) _data4                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _data3                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _data2                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (2) _data1                                                0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _data_disp                                           10    10      0   68382
                                              0 BANK1     10    10      0
                              _Cones
                             _Cracks
                             _Holes2
                            ___awdiv
                            ___awmod
                    _one_byte_reader
                                 _ot
                       _read_pointer
                           _subtract
 ---------------------------------------------------------------------------------
 (3) _subtract                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ot                                                   4     2      2    9912
                                             35 BANK0      4     2      2
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _one_byte_reader                                      3     2      1     636
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2413
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _Holes2                                               6     2      4   21054
                                             50 BANK0      6     2      4
                            _lcdInst
                             _printf
                     _printintarray2
 ---------------------------------------------------------------------------------
 (2) _Cracks                                               6     2      4   21054
                                             50 BANK0      6     2      4
                            _lcdInst
                             _printf
                     _printintarray2
 ---------------------------------------------------------------------------------
 (3) _printintarray2                                      15    11      4   11052
                                             35 BANK0     15    11      4
                             _digit0
                            _lcdInst
                           _nextLine
                             _printf
 ---------------------------------------------------------------------------------
 (3) _nextLine                                             1     1      0     124
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _digit0                                               2     0      2     214
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Cones                                                4     2      2    9850
                                             35 BANK0      4     2      2
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (1) _configureports                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _completion_return                                   10    10      0   36251
                                             39 BANK0     10    10      0
                                _L_I
                                _R_I
                               _Stop
                            ___aldiv
                            ___almod
                            ___fladd
                             ___flge
                             ___wmul
                              _backw
                   _completion_write
                            _lcdInst
                             _printf
                            _readRTC
 ---------------------------------------------------------------------------------
 (3) _readRTC                                              3     3      0    1410
                                             21 BANK0      3     3      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2     571
                                              1 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Read                                      2     2      0      65
                                              1 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Init                                      8     4      4     542
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     421
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _completion_write                                     4     4      0   13410
                                             35 BANK0      4     4      0
                            ___awdiv
                             _printf
                       _read_pointer
                     _update_pointer
 ---------------------------------------------------------------------------------
 (3) _update_pointer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    3145
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _backw                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8    3506
                                             24 BANK0     12     4      8
                            ___fladd (ARG)
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    4272
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             10     2      8    1513
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8    1165
                                             10 BANK0     14     6      8
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Stop                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _R_I                                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _L_I                                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _clear_select                                         0     0      0    9729
                            _lcdInst
                             _printf
 ---------------------------------------------------------------------------------
 (3) _lcdInst                                              1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (1) _clear_finish                                         0     0      0    9571
                          _clear_mem
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              30    22      8    9571
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0     158
                                              3 BANK0      1     1      0
                          _send_byte
 ---------------------------------------------------------------------------------
 (5) _send_byte                                            1     1      0     127
                                              2 BANK0      1     1      0
                        _send_nibble
 ---------------------------------------------------------------------------------
 (6) _send_nibble                                          1     1      0      65
                                              1 BANK0      1     1      0
                            _pulse_e
 ---------------------------------------------------------------------------------
 (7) _pulse_e                                              1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1172
                                              8 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     412
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _clear_mem                                            0     0      0       0
                       _read_pointer
 ---------------------------------------------------------------------------------
 (3) _read_pointer                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___llmod                                              9     1      8     592
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interruptHandler                                    17    17      0   10998
                                             34 COMRAM    17    17      0
                    _initialize_func
                          i2___fladd
                          i2___fldiv
                           i2___wmul
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (10) i2___fldiv                                          25    17      8    1173
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (10) i2___fladd                                          16     8      8    2036
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (10) _initialize_func                                     4     4      0    4995
                                             30 COMRAM     4     4      0
                           i2___wmul
                  i2_initmoving_disp
                   i2_normal_updater
                          i2_readRTC
 ---------------------------------------------------------------------------------
 (11) i2_normal_updater                                    6     6      0    1812
                                             24 COMRAM     6     6      0
                          i2___aldiv
                          i2___almod
                           i2___wmul
                          i2_readRTC
 ---------------------------------------------------------------------------------
 (11) i2_readRTC                                           3     3      0     566
                                             21 COMRAM     3     3      0
                  i2_I2C_Master_Init
                  i2_I2C_Master_Read
                 i2_I2C_Master_Start
                  i2_I2C_Master_Stop
                 i2_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Master_Write                                  2     0      2     100
                                              1 COMRAM     2     0      2
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Master_Stop                                   0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Master_Start                                  0     0      0       0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Master_Read                                   2     2      0      45
                                              1 COMRAM     2     2      0
                  i2_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (13) i2_I2C_Master_Wait                                   1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_I2C_Master_Init                                   8     4      4     262
                                             13 COMRAM     8     4      4
                          i2___lldiv
 ---------------------------------------------------------------------------------
 (13) i2___lldiv                                          13     5      8     214
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (12) i2___almod                                          10     2      8     452
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (12) i2___aldiv                                          14     6      8     404
                                             10 COMRAM    14     6      8
                          i2___almod (ARG)
 ---------------------------------------------------------------------------------
 (11) i2_initmoving_disp                                   1     1      0    2116
                                             27 COMRAM     1     1      0
                          i2_lcdInst
                           i2_printf
 ---------------------------------------------------------------------------------
 (10) i2_printf                                           24    22      2    2005
                                             12 COMRAM    15    13      2
                          i2___lwdiv
                          i2___lwmod
                           i2___wmul
                          i2_isdigit
                            i2_putch
 ---------------------------------------------------------------------------------
 (11) i2_putch                                             1     1      0     111
                                              3 COMRAM     1     1      0
                        i2_send_byte
 ---------------------------------------------------------------------------------
 (11) i2_isdigit                                           3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (11) i2___wmul                                            6     2      4     367
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (11) i2___lwmod                                           5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___lwdiv                                           7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) i2_lcdInst                                           1     1      0     111
                                              3 COMRAM     1     1      0
                        i2_send_byte
 ---------------------------------------------------------------------------------
 (12) i2_send_byte                                         1     1      0      89
                                              2 COMRAM     1     1      0
                      i2_send_nibble
 ---------------------------------------------------------------------------------
 (13) i2_send_nibble                                       1     1      0      45
                                              1 COMRAM     1     1      0
                          i2_pulse_e
 ---------------------------------------------------------------------------------
 (14) i2_pulse_e                                           1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Stop
   ___awdiv
   ___awmod
   ___flge
     ___fladd (ARG)
     ___flsub (ARG)
       ___fladd
   ___llmod
   ___wmul
     ___awdiv (ARG)
   _clear_finish
     _clear_mem
       _read_pointer
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
         ___awdiv (ARG)
       _isdigit
       _putch
         _send_byte
           _send_nibble
             _pulse_e
   _clear_select
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
         ___awdiv (ARG)
       _isdigit
       _putch
         _send_byte
           _send_nibble
             _pulse_e
   _completion_return
     _L_I
     _R_I
     _Stop
     ___aldiv
       ___almod (ARG)
     ___almod
     ___fladd
     ___flge
       ___fladd (ARG)
       ___flsub (ARG)
         ___fladd
     ___wmul
       ___awdiv (ARG)
     _backw
     _completion_write
       ___awdiv
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
       _read_pointer
       _update_pointer
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
         ___awdiv (ARG)
       _isdigit
       _putch
         _send_byte
           _send_nibble
             _pulse_e
     _readRTC
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _configureports
   _data_disp
     _Cones
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _Cracks
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
       _printintarray2
         _digit0
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _nextLine
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awdiv (ARG)
           _isdigit
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
     _Holes2
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
       _printintarray2
         _digit0
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _nextLine
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awdiv (ARG)
           _isdigit
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
     ___awdiv
     ___awmod
     _one_byte_reader
     _ot
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _read_pointer
     _subtract
   _data_select
     _data1
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _data2
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _data3
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _data4
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
   _drop_function
     _hole_dispense_function
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _left_crack_drop
       _L_I
       _R_I
       _Stop
       ___flge
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
       ___flsub
         ___fladd
       _hole_dispense_function
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awdiv (ARG)
           _isdigit
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
     _middle_crack_drop
       _L_I
       _R_I
       _Stop
       ___flge
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
       ___flsub
         ___fladd
       _hole_dispense_function
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awdiv (ARG)
           _isdigit
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
     _right_crack_drop
       _L_I
       _R_I
       _Stop
       ___flge
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
       ___flsub
         ___fladd
       _hole_dispense_function
         _lcdInst
           _send_byte
             _send_nibble
               _pulse_e
         _printf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
             ___awdiv (ARG)
           _isdigit
           _putch
             _send_byte
               _send_nibble
                 _pulse_e
   _initLCD
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _send_byte
       _send_nibble
         _pulse_e
     _send_nibble
       _pulse_e
   _initmoving_disp
     _lcdInst
       _send_byte
         _send_nibble
           _pulse_e
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
         ___awdiv (ARG)
       _isdigit
       _putch
         _send_byte
           _send_nibble
             _pulse_e
   _lcdInst
     _send_byte
       _send_nibble
         _pulse_e
   _moving
     _straight
     _turn_left
     _turn_right
   _normal_updater
     ___aldiv
       ___almod (ARG)
     ___almod
     ___wmul
       ___awdiv (ARG)
     _readRTC
       _I2C_Master_Init
         ___lldiv
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
       ___awdiv (ARG)
     _isdigit
     _putch
       _send_byte
         _send_nibble
           _pulse_e
   _read_encoder
     ___fladd
     ___fldiv
   _read_total
     ___awdiv
     _read_pointer
   _sensed_function_3
     _Stop
     _crack_drop_bool_function
       ___fladd
       ___fleq
         ___fladd (ARG)
       ___flge
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
       ___flsub
         ___fladd
     _drop_record
       ___fladd
     _hole_drop_bool_function
       ___fladd
       ___fleq
         ___fladd (ARG)
       ___flge
         ___fladd (ARG)
         ___flsub (ARG)
           ___fladd
       ___flsub
         ___fladd
     _moving
       _straight
       _turn_left
       _turn_right
     _read_encoder
       ___fladd
       ___fldiv
     _record
       ___flmul
       ___fltol
         ___flmul (ARG)
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
   _standby_rotating
     ___awmod
     _page1
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _page2
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
     _page3
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
       _readRTC
         _I2C_Master_Init
           ___lldiv
         _I2C_Master_Read
           _I2C_Master_Wait
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _page4
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
       _read_total
         ___awdiv
         _read_pointer
     _page5
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _nextLine
       _one_byte_reader
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e
       _read_pointer
       _subtract
     _page6
       _lcdInst
         _send_byte
           _send_nibble
             _pulse_e
       _printf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
           ___awdiv (ARG)
         _isdigit
         _putch
           _send_byte
             _send_nibble
               _pulse_e

 _interruptHandler (ROOT)
   _initialize_func
     i2___wmul
     i2_initmoving_disp
       i2_lcdInst
         i2_send_byte
           i2_send_nibble
             i2_pulse_e
       i2_printf
         i2___lwdiv
         i2___lwmod
           i2___lwdiv (ARG)
         i2___wmul
         i2_isdigit
         i2_putch
           i2_send_byte
             i2_send_nibble
               i2_pulse_e
     i2_normal_updater
       i2___aldiv
         i2___almod (ARG)
       i2___almod
       i2___wmul
       i2_readRTC
         i2_I2C_Master_Init
           i2___lldiv
         i2_I2C_Master_Read
           i2_I2C_Master_Wait
         i2_I2C_Master_Start
           i2_I2C_Master_Wait
         i2_I2C_Master_Stop
           i2_I2C_Master_Wait
         i2_I2C_Master_Write
           i2_I2C_Master_Wait
     i2_readRTC
       i2_I2C_Master_Init
         i2___lldiv
       i2_I2C_Master_Read
         i2_I2C_Master_Wait
       i2_I2C_Master_Start
         i2_I2C_Master_Wait
       i2_I2C_Master_Stop
         i2_I2C_Master_Wait
       i2_I2C_Master_Write
         i2_I2C_Master_Wait
   i2___fladd
   i2___fldiv
   i2___wmul
   i2_lcdInst
     i2_send_byte
       i2_send_nibble
         i2_pulse_e
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2___wmul
     i2_isdigit
     i2_putch
       i2_send_byte
         i2_send_nibble
           i2_pulse_e

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     10      A2       7       63.3%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     38      7F       5       99.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     33      56       1       68.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     177      34        0.0%
DATA                 0      0     177       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr 11 04:43:26 2019

                     ___fldiv@aexp 0098                       ___fldiv@bexp 0097  
                                _a 00E0                                  _b 00DE  
                                _c 00DC                       ___fldiv@sign 0090  
               i2_I2C_Master_Start 55B2          __size_of_completion_write 01FE  
               i2_I2C_Master_Write 5590                __end_ofi2_send_byte 5534  
                     ___awdiv@sign 0085                                 _ot 4116  
              ___wmul@multiplicand 008A                 i2___lwdiv@dividend 0001  
                      __CFG_BORV$3 000000                       __CFG_CP0$OFF 000000  
                     __CFG_CP1$OFF 000000                       __CFG_CP2$OFF 000000  
                     __CFG_CP3$OFF 000000                        __CFG_OSC$HS 000000  
                              l200 0442                                l252 0A42  
                              l253 09FC                                ?_ot 00A3  
                              l613 36DC                                l626 3836  
                              l811 4248                                l661 265A  
                              l822 0C28                                l823 0BE0  
                              l832 0D86                                l841 0EF4  
                              l833 0D3E                                l825 0C88  
                              l842 0EAC                                l826 0C4C  
                              l835 0DE6                                l667 2754  
                              l836 0DAA                                l828 0CF4  
                              l829 0CAC                                l838 0E6C  
                              l839 0E26                                _GIE 007F97  
                     __CFG_CPB$OFF 000000                       __CFG_CPD$OFF 000000  
                              _L_I 5120                                _R_I 4E84  
                      i2___fladd@a 0005                        i2___fladd@b 0001  
              ?i2_I2C_Master_Start 0001                ?i2_I2C_Master_Write 0002  
                              _ddp 00D2                                _key 00E5  
                              _reg 00D0                        i2___fldiv@a 0005  
                      i2___fldiv@b 0001            __end_of_half_lane_width FD30  
                     ___awmod@sign 0085                     _update_pointer 4F22  
                              wreg 000FE8                       ___flmul@aexp 008D  
                     ___flmul@bexp 0092                 i2___almod@dividend 0001  
                  ?_configureports 0001                       ___flmul@sign 008C  
                     ___flmul@temp 0097                       ___flmul@prod 0093  
                     _rotary_accum 003C                    read_total@total 008C  
                             ??_ot 00A5                       __CFG_LVP$OFF 000000  
                             ?_L_I 0001                               ?_R_I 0001  
                     ___fltol@exp1 00A2              __end_ofi2_send_nibble 54E8  
                     __CFG_WDT$OFF 000000                               l1014 5410  
                             l1201 2F96                               l1207 2FA8  
                             l1216 4F40                               l2033 3C82  
                             l1219 4F66                               l1172 439C  
                             l1182 43FE                               l1175 43B4  
                             l2305 17EC                               l2314 1852  
                             l1179 43D8                               l2251 4D36  
                             l2315 184E                               l2180 4A9E  
                             l2261 50D4                               l1189 2DFC  
                             l1631 4D7A                               l2344 1D64  
                             l2290 16F8                               l2355 1DD2  
                             l1643 44F6                               l2356 1DCE  
                             l1581 10D0                               l1574 108C  
                             l2374 1304                               l2391 15A2  
                             l2383 151C                               l1680 3148  
                             l2384 1518                               l2289 171A  
                             l1799 4612                               l9800 4D04  
                             l9802 4D0C                               l9812 4D2C  
                             l9820 50AA                               l9900 227E  
                             l9822 50B2                               l9902 2286  
                             l9762 53F4                               l9930 2338  
                             l9914 22B6                               l9842 211E  
                             l9828 50CA                               l9924 22E6  
                             l9908 229C                               l9844 212C  
                             l9780 45D0                               l9926 22EC  
                             l9854 2162                               l9838 210E  
                             l9790 4604                               STR_1 FEC7  
                             l9848 2132                               STR_2 FDAE  
                             STR_3 FE5A                               l9882 2216  
                             l9866 21EA                               l9778 45C4  
                             STR_4 FF74                               STR_5 FFEC  
                             l9876 2212                               STR_6 FEBA  
                             STR_7 FEEC                               STR_8 FD58  
                             STR_9 FEAD                               l9896 225A  
                             l9994 4C4E                    i2readRTC@t_data 0018  
                             _LATC 000F8B                               _LATD 000F8C  
                             u9510 45D4                               u9610 21C2  
                             u9540 4D10                               u9455 5232  
                             u9456 5234                               u9720 22BE  
                             u9640 2240                               u9570 50B6  
                             u9730 22D4                               u9750 2342  
                             u9775 4BA0                               u9960 16CE  
                             u9785 5256                               u9970 16DE  
                             u9786 5258                               u9980 16E0  
                  ?_printintarray2 00A3                               _Stop 5554  
                             _addr 00E4                               _lc_R FD3E  
                             _mc_L FD30                               _main 0012  
         __end_of_interruptHandler 0814                               _keys FD0D  
                             _time 00F0                               fsr1h 000FE2  
               i2___lwdiv@quotient 0005                               fsr2h 000FDA  
                             indf1 000FE7                               indf2 000FDF  
                             fsr1l 000FE1                               fsr2l 000FD9  
                             btemp 0057               ??i2_I2C_Master_Start 0002  
             ??i2_I2C_Master_Write 0004                               prodh 000FF4  
                             prodl 000FF3                               start 000E  
                    __CFG_IESO$OFF 000000                       ?_drop_record 0090  
                  ___fldiv@new_exp 0091                    __end_ofi2_putch 556E  
                    __CFG_MCLRE$ON 000000                       ___param_bank 000000  
                            ??_L_I 0080                              ??_R_I 0080  
                  _one_byte_reader 5456             __size_of_drop_function 009C  
            I2C_Master_Read@ackBit 0081  __size_of_crack_drop_bool_function 015A  
                 ?_I2C_Master_Init 008D                   ?_I2C_Master_Read 0001  
                 ?_I2C_Master_Wait 0001          ?_crack_drop_bool_function 00A4  
                 ?_I2C_Master_Stop 0001                              l10010 4C7A  
                            l10002 4C64                              l10100 1670  
                            l11000 2E44                              l10040 4AF4  
                            l10032 4ADE                              l10024 4AC8  
                            l10210 1830                              l10130 16AC  
                            l10204 1826                              l11004 2E54  
                            l11100 37D4                              l10230 1898  
                            l10142 1706                              l11022 2F04  
                            l10144 170A                              l10064 1604  
                            l11016 2EC6                              l11008 2E64  
                            l10048 4B0A                              l12000 333C  
                            l10242 18C6                              l11034 2F52  
                            l11026 2F14                              l10306 4C2A  
                            l10244 18C8                              l10092 1650  
                            l10068 1608                              l10412 0D2C  
                            l10238 18BE                              l10166 1760  
                            l10158 173E                              l10262 4530  
                            l10326 40C0                              l11310 2AA8  
                            l11142 392E                              l11222 2790  
                            l11206 272E                              l10168 1764  
                            l10176 1776                              l10088 164C  
                            l11064 2FD0                              l11312 2ABA  
                            l12040 44D2                              l12032 44B2  
                            l11402 437E                              l10194 1810  
                            l10186 17DC                              l10274 4556  
                            l10290 4588                              l11066 2FD4  
                            l12122 112A                              l12130 114A  
                            l11242 2C2A                              l11330 2B50  
                            l10276 455E                              l10268 4540  
                            l10604 31A4                              l12124 113A  
                            l12132 1160                              l11260 2CCC  
                            l11236 2C12                              l11332 2B62  
                            l11316 2AC0                              l11228 27A0  
                            l11172 2634                              l11500 3554  
                            l12036 44C2                              l12028 44A4  
                            l12212 00E2                              l10294 4596  
                            l10286 457E                              l10606 31A8  
                            l10542 542C                              l12134 116A  
                            l12142 11A6                              l12062 4D5E  
                            l11254 2CB4                              l11238 2C24  
                            l11350 280C                              l10622 1C1E  
                            l12152 1216                              l11280 2D74  
                            l11256 2CC6                              l11336 2B68  
                            l10704 1D98                              l12048 44EA  
                            l12312 0412                              l12224 0162  
                            l12320 0432                              l12082 0F8E  
                            l12066 4D6E                              l12058 4D50  
                            l11274 2D5C                              l11354 2812  
                            l10642 1C5E                              l10626 1C22  
                            l11194 26A6                              l12242 01E6  
                            l12234 01A0                              l11700 3FB0  
                            l12156 124C                              l12148 11E8  
                            l11276 2D6E                              l11292 2A06  
                            l11372 28B4                              l11348 27FA  
                            l10740 1E72                              l10732 1E64  
                            l10724 1E16                              l10660 1CAC  
                            l11188 2696                              l11612 4A18  
                            l11524 3652                              l11532 36B0  
                            l12182 4A90                              l12174 4A5C  
                            l10582 30E6                              l10574 3066  
                            l12094 1040                              l11294 2A18  
                            l11366 289C                              l10654 1C96  
                            l10646 1C62                              l10830 14C4  
                            l11526 3696                              l12270 029E  
                            l12254 0246                              ?_Stop 0001  
                            l12176 4A68                              l11632 3CDC  
                            l10912 3C6C                              l10904 3C22  
                            l10584 30FA                              l11720 492E  
                            l11712 4914                              l12088 0FE6  
                            l11392 295C                              l11368 28AE  
                            l10728 1E3A                              l10760 12B0  
                            l11616 4A30                              l11722 4936  
                            l11298 2A1E                              l11386 2944  
                            l10738 1E70                              l10762 12B4  
                            l11644 3D16                              l11660 3D64  
                            l10908 3C56                              l11732 4958  
                            l11716 4920                              l11388 2956  
                            l10692 1D62                              l10668 1CC4  
                            l10860 157E                              l10836 14E2  
                            l10780 12F4                              l10764 12C4  
                            l12196 003E                              l11646 3D22  
                            l11638 3CF4                              l10918 3CBA  
                            l10686 1D3C                              l10678 1D14  
                            l12286 030E                              l11664 3D7A  
                            l11656 3D56                              l11680 3F46  
                            l11840 088C                              l11832 0864  
                            l11736 4966                              l11728 494E  
                            l10872 15C0                              l10856 1560  
                            l10944 3EC2                              l10928 3E78  
                            l11850 08B6                              l11930 4208  
                            l10698 1D7A                              l10778 12F0  
                            l10962 3F02                              l10954 3EDA  
                            l12298 03C0                              l11692 3F8C  
                            l11684 3F58                              l11676 3F32  
                            l11860 090E                              l11852 08BA  
                            l10892 4472                              l10788 1322  
                            l10956 3EE6                              l10948 3ED2  
                            l11686 3F64                              l11870 098A  
                            l11862 0912                              l11934 422A  
                            l11926 41E6                              l11696 3F9A  
                            l11872 098E                              l11936 4244  
                            l10896 4490                              l10888 443E  
                            l10978 5406                              l11970 3290  
                            l10996 2E24                              l11972 3298  
                            l11956 323C                              l11958 3244  
                            l11984 32E4                              l11986 32EC  
                            l11996 3330                              l11998 3338  
                    ___fltol@sign1 00A1                    __end_of___aldiv 3D8C  
                  __end_of___almod 3FC2                    __end_of___fladd 18E4  
                            ?_main 0001                    __end_of___fldiv 1E7A  
                  __end_of___awdiv 45A0                              _EEADR 000FA9  
                            STR_10 FD9D                              STR_11 FFE5  
                            STR_20 FFC6                              STR_12 FF6A  
                            STR_13 FFDE                              STR_21 FFBD  
                            STR_30 FE74                              STR_14 FF60  
                            STR_22 FDFF                              STR_15 FD58  
                            STR_31 FFF2                              STR_23 FF2E  
                            STR_40 FE74                              STR_24 FE74  
                            STR_16 FEAD                              STR_32 FF03  
                            STR_41 FEDE                              STR_17 FD9D  
                            STR_33 FEF8                              STR_25 FDEF  
                            STR_42 FE74                              STR_34 FFD7  
                            STR_26 FF24                              STR_50 FE1E  
                            STR_18 FDBF                              STR_27 FE74  
                            STR_51 FFB4                              STR_19 FF56  
                            STR_35 FF0E                              STR_43 FD46  
                            STR_60 FF90                              STR_52 FEE0  
                            STR_44 FEA0                              STR_36 FDCF  
                            STR_28 FD8C                    __end_of___awmod 4970  
                            STR_29 FF24                              STR_45 FF4C  
                            STR_53 FF42                              STR_37 FE77  
                            STR_61 FE4B                              STR_70 FED4  
                            STR_46 FFF7                              STR_62 FF99  
                            STR_54 FF87                              STR_38 FD6A  
                            STR_39 FEDE                              STR_71 FE93  
                            STR_47 FFFC                              STR_63 FF38  
                            STR_55 FE85                              STR_64 FE3C  
                            STR_48 FE0F                              STR_72 FDDF  
                            STR_56 FD7B                              STR_49 FE55  
                            STR_73 FFCF                              STR_65 FFA2  
                            STR_57 FF19                              STR_58 FF7E  
                            STR_66 FED4                              STR_67 FE93  
                            STR_59 FE69                              STR_68 FE2D  
                            STR_69 FFAB                    __end_of___flmul 15D6  
                  __end_of___flsub 509A                    __end_of___fltol 3F14  
           __end_of_update_pointer 4F70                              u10010 1722  
                  __end_of___lldiv 4624                              u11000 3E96  
                            u10220 18A4                              u10140 1834  
                            u11100 2E14                              u11005 3E8C  
                            u11110 2E34                              u10160 1848  
                            u10400 0E7E                              u11040 3EEC  
                            u10320 4C22                              u11210 2F62  
                            u10410 0F06                              u11140 2E74  
                            u12020 3348                              u10350 0C3A  
                            u12030 3358                              u11160 2ED6  
                            u10360 0C9A                              u11320 3828  
                            u12040 3372                              u10290 4562  
                            u10370 0D06                              u12050 338C  
                            u11260 2FE4                              u10460 3106  
                            u10380 0D98                              u10700 1E48  
                            u12028 334C                    ___awdiv@divisor 0082  
                            u11190 2F24                              u10390 0DF8  
                            u11270 36CE                              u12038 335C  
                            u13007 4E78                              u10800 1486  
                            u12048 3376                              u12080 44BC  
                  __end_of___llmod 4AB0                              u13017 4EE8  
                            u12330 4A6C                              u10650 1DC8  
                            u12410 00D8                              u13107 0BEA  
                            u13027 4EFE                              u13117 0BFE  
                            u13037 4F16                              u10805 147C  
                            u12270 11BA                              u13207 0D48  
                            u13127 0C1E                              u13047 5298  
                            u11800 493A                              u10840 1512  
                            u12600 0332                              u12360 0052  
                            u13217 0D5C                              u13137 0C50  
                            u13057 4978                              u10930 448C  
                            u10690 1E24                              u12610 0358  
                            u12370 006A                              u13307 0E8A  
                            u13227 0D7C                              u13147 0C60  
                            u13067 4992                              u11740 3F68  
                            u11900 41C6                              u12620 037C  
                            u12380 0082                              u13317 0EB6  
                            u13237 0DAE                              u13157 0C7E  
                            u13077 49A4                              u10790 1310  
                            u13407 3122                              u13327 0ECA  
                            u13247 0DBE                              u13167 0CB6  
                            u13087 49C8                              u11680 3D26  
                            u10880 156E                              u12560 026E  
                            u12368 0056                              u13417 313E  
                            u13337 0EEA                              u13257 0DDC  
                            u13177 0CCA                              u13097 0BC6  
                            u10890 158C                              u12378 006E  
                            u13507 54CA                              u13427 31CC  
                            u13347 0F12                              u13267 0E04  
                            u13187 0CEA                              u11940 4244  
                            u12388 0086                              u13517 4E98  
                            u13437 4B66                              u13357 41A4  
                            u13277 0E30                              u13197 0D12  
                            u10990 3E66                              u12590 02AE  
                            u13527 4EAE                              u13447 0822  
                            u13367 47F2                              u13287 0E44  
                            u12807 02BC                              u13537 4EBC  
                            u13457 0854                              u13377 4868  
                            u13297 0E62                              u12817 02F4  
                            u11890 0A54                              u13547 4ECA  
                            u13467 087E                              u13387 300E  
                            u12907 2746                              u12827 044E  
                            u13557 5134                              u13477 0A06  
                            u13397 304C                              u12917 2760  
                            u12837 0462                              u13567 5146  
                            u13487 0A1A                              u12927 2774  
                            u12847 2624                              u13577 5156  
                            u13497 0A38                              u12937 2788  
                            u12857 264C                              u13587 5218  
                            u12947 27B8                              u12867 2666  
                            u13597 5222                              u12957 4DF8  
                            u12877 267A                              u12797 022C  
                            u12967 4E10                              u12887 268E  
                            u12977 4E28                              u12897 271E  
                            u12987 4E48                              u12997 4E60  
                  __end_of___lwdiv 4D40                    __end_of___lwmod 50DE  
                  ___awdiv@counter 0084                              _PORTB 000F81  
                            _TRISD 000F95               __end_of_clear_finish 5510  
                       i2readRTC@i 0017                      __CFG_PWRT$OFF 000000  
        sensed_function_3@sth_1135 0194          sensed_function_3@sth_1136 0196  
        sensed_function_3@sth_1137 0198                      __CFG_WRT0$OFF 000000  
                            _Cones 4B14                      __CFG_WRT1$OFF 000000  
                    __CFG_WRT2$OFF 000000                      __CFG_WRT3$OFF 000000  
                    i2___fladd@grs 0010                    __end_of_lcdInst 5544  
                   __CFG_EBTR0$OFF 000000                     __CFG_FCMEN$OFF 000000  
                printintarray2@dig 00A9                     __CFG_EBTR1$OFF 000000  
             __end_of_clear_select 5392                     __CFG_EBTR2$OFF 000000  
                   __CFG_EBTR3$OFF 000000                  ??_initialize_func 001F  
                  _completion_bool 00FE                      __CFG_WRTB$OFF 000000  
                    __CFG_WRTC$OFF 000000                      __CFG_WRTD$OFF 000000  
                            _backw 54BC                              _data1 534A  
                            _addrh 00E3                              _data2 51D0  
                            _data3 4FBC                              _data4 4F70  
                  __end_of_initLCD 49E0                     __CFG_EBTRB$OFF 000000  
                       i2isdigit@c 0003                    __end_of_readRTC 4116  
                  __end_of_dpowers FD28                              _page1 5198  
                            _page2 5160                              _page3 4624  
                            _page4 49E0                              _page5 3544  
                            _page6 5326                              _planB 00CC  
                  __end_of_isdigit 53FC                      i2___fldiv@grs 0014  
                    i2___fldiv@rem 000D                              _times 00E8  
                            _putch 5544                              tablat 000FF5  
                  send_nibble@data 0081                   __end_ofi2___wmul 5326  
             __size_of_data_select 0052                    __end_of_pulse_e 5236  
                            ttemp5 0058                              ttemp6 005B  
                            ttemp7 005F                              status 000FD8  
      I2C_Master_Read@receivedByte 0082                              wtemp8 0058  
               __size_ofi2___aldiv 00CC                 __size_ofi2___almod 00AC  
               __size_ofi2___fladd 030C                 __size_ofi2___fldiv 0288  
                   __CFG_PBADEN$ON 000000                      i2printf@width 0019  
               __size_ofi2___lldiv 0082                        i2_send_byte 5522  
                 __end_ofi2_printf 25A4                 __size_ofi2___lwdiv 0052  
               __size_ofi2___lwmod 0042                    __initialization 488C  
                     __end_of_Stop 5562                  i2___lldiv@divisor 0005  
                     __end_of_lc_R FD42                       __end_of_mc_L FD34  
               __size_ofi2_lcdInst 000C                       __end_of_main 046E  
                i2___lldiv@counter 000D                       __end_of_keys FD1E  
                       i2printf@ap 0013                 __size_ofi2_readRTC 009C  
               __size_ofi2_isdigit 001E                  _sensed_function_3 31DC  
                           ??_Stop 0080   __size_of_hole_drop_bool_function 015A  
                           ??_main 019C                     _rotary_counter 0040  
               ?_sensed_function_3 0001                    ?_update_pointer 0001  
                    __activetblptr 000002                 __size_ofi2_pulse_e 002A  
                 _standby_rotating 4494                  ?_I2C_Master_Start 0001  
                           ?_Cones 00A3                  ?_I2C_Master_Write 0081  
                    _drop_identity 0160           __size_of_initmoving_disp 0028  
                           ?_backw 0001                             ?_data1 0001  
                           ?_data2 0001                             ?_data3 0001  
                           ?_data4 0001                     _whole_distance FD28  
               ??_I2C_Master_Start 0081                ??_sensed_function_3 00AE  
                           ?_page1 0001                             ?_page2 0001  
                           ?_page3 0001                             _ADCON1 000FC1  
                           ?_page4 0001                 ??_I2C_Master_Write 0083  
                           ?_page5 0001                             ?_page6 0001  
                     ?_send_nibble 0001                   ___llmod@dividend 0080  
                           _EEADRH 000FAA                             _EEDATA 000FA8  
                           _EECON2 000FA7                   ___awdiv@dividend 0080  
         __size_of_left_crack_drop 020C                     i2___aldiv@sign 0014  
        __size_of_right_crack_drop 020C                             ?_putch 0001  
                    _drop_function 41B4                             _INT0IE 007F94  
                           _INT0IF 007F91                             _INT1IE 007F83  
                           _INT1IF 007F80             _completion_return$2720 00A9  
                           i2l1408 07F0                             i2l2305 1AF8  
                           i2l2314 1B5E                             i2l2251 4DDA  
                           i2l2315 1B5A                             i2l1372 0768  
                           i2l2261 5116                             i2l2344 1FEC  
                           i2l2290 1A04                             i2l2355 205A  
                           i2l2356 2056                             i2l1398 06F2  
                           i2l2289 1A26                             i2l1799 4716  
                           i2l6266 46C8                             i2l6268 46D4  
                           i2l9100 19B8                             i2l6278 4708  
                           i2l6800 4DA8                             i2l9200 1BA4  
                           i2l9112 1A12                             i2l6802 4DB0  
                           i2l7610 24DA                             i2l7530 4298  
                           i2l9114 1A16                             i2l9034 1910  
                           i2l6812 4DD0                             i2l6820 50EC  
                           i2l7604 24AE                             i2l9212 1BD2  
                           i2l9300 1FC4                             i2l6822 50F4  
                           i2l7622 2506                             i2l7550 2378  
                           i2l7710 4038                             i2l7702 4004  
                           i2l9214 1BD4                             i2l9070 197C  
                           i2l9062 195C                             i2l9038 1914  
                           i2l6840 544E                             i2l7632 2534  
                           i2l7616 24F0                             i2l7608 24D2  
                           i2l7552 2386                             i2l7704 4010  
                           i2l9208 1BCA                             i2l9136 1A6C  
                           i2l9128 1A4A                             i2l9312 2002  
                           i2l9240 1EAA                             i2l7634 253A  
                           i2l7562 23BA                             i2l7546 2368  
                           i2l7650 3DA8                             i2l7714 4046  
                           i2l9138 1A70                             i2l9146 1A82  
                           i2l9058 1958                             i2l9306 1FEA  
                           i2l6828 510C                             i2l7556 238C  
                           i2l9164 1B1C                             i2l9180 1B3C  
                           i2l9156 1AE8                             i2l9260 1EEA  
                           i2l9236 1EA6                             i2l7638 2582  
                           i2l7574 243C                             i2l7662 3DE2  
                           i2l7718 405C                             i2l9174 1B32  
                           i2l9342 20C2                             i2l9318 2020  
                           i2l7584 2464                             i2l7664 3DEE  
                           i2l7656 3DC0                             i2l9352 20F8  
                           i2l9256 1EE6                             i2l7586 2468  
                           i2l7682 3E46                             i2l7674 3E22  
                           i2l9354 20FA                             i2l9346 20EC  
                           i2l9338 209E                             i2l9282 1F4C  
                           i2l9274 1F34                             i2l9602 05EA  
                           i2l9292 1F9C                             i2l9268 1F1E  
                           i2l9620 063C                             i2l9612 061E  
                           i2l7598 2494                             i2l7678 3E30  
                           i2l7694 3FDE                             i2l9608 0610  
                           i2l7698 3FF2                             i2l9642 06D2  
                           i2l9634 068A                             i2l9652 0720  
                           i2l9580 054A                             i2l9638 06AE  
                           i2l9582 0562                             i2l9648 070A  
                           i2l9674 07EE                             i2l9586 058E  
                           i2l9596 05D0                             i2l8994 34A0  
                        ??i2_putch 0004                             _SSPADD 000FC8  
                           _SSPBUF 000FC9                     i2___almod@sign 000A  
               interruptHandler@b0 0030                             _Cracks 4816  
          __end_of_one_byte_reader 5472                     i2___fladd@aexp 000E  
                   i2___fladd@bexp 000F                             _Holes2 47A0  
                _last_problem_bool 0034                      _drop_position 0100  
                    ?_read_encoder 0001                     __CFG_XINST$OFF 000000  
          interruptHandler@command 0033                 printintarray2@left 00AB  
        __size_ofi2_normal_updater 0136                     page5@curr_line 00A5  
                           ___flge 3BEC                             ___fleq 4408  
                        ??___aldiv 0092          __end_of_sensed_function_3 3392  
                        ??___almod 0088                          ??___fladd 0088  
                           ___wmul 52B2                          ??___fldiv 0088  
                        ??___awdiv 0084                     __CFG_STVREN$ON 000000  
                        ??___awmod 0084                          ??___flmul 0088  
                        ??___flsub 0098                          ??___fltol 009D  
                           _digit0 4AB0                          ??___lldiv 0088  
                 _completion_write 2DEC                          ??___llmod 0088  
                        ??___lwdiv 0084                          ??___lwmod 008B  
                    ?_read_pointer 0001                             clear_0 48D2  
                           clear_1 48DE                             clear_2 48EA  
                           _record 25A4                   ___awdiv@quotient 0086  
                   i2___fldiv@aexp 0019                     i2___fldiv@bexp 0018  
                  ___awmod@divisor 0082                             _moving 53FC  
                   i2___fldiv@sign 0011                    ___awmod@counter 0084  
                        ??_lcdInst 0083                             _printf 2102  
                 __end_of_nextLine 4C90                          ??_initLCD 0084  
                        ??_readRTC 0095                  __end_ofi2___aldiv 3E58  
                     __pdataCOMRAM 004C                  __end_ofi2___almod 406E  
                __end_ofi2___fladd 1BF0                          ??_isdigit 0080  
                __end_ofi2___fldiv 2102                  __end_ofi2___lldiv 4728  
           __end_of_whole_distance FD2C                  __end_ofi2___lwdiv 4DE4  
                     __mediumconst FD0C            _accum_straight_distance 00C4  
                __end_ofi2___lwmod 5120                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
                i2_initmoving_disp 53B6                          ??_pulse_e 0080  
                __end_ofi2_lcdInst 557A                   __end_of_subtract 5438  
                   ?_drop_function 0001                   __end_of_straight 4F22  
               ?i2_initmoving_disp 0001                  __end_ofi2_readRTC 42EC  
                       ___flge@ff1 0098                         ___flge@ff2 009C  
            pulse_e@interruptState 0080                  __end_ofi2_isdigit 5456  
                       ___fleq@ff1 0090                         ___fleq@ff2 0094  
                       __accesstop 0080            __end_of__initialization 48F0  
                    ___rparam_used 000001                  __end_ofi2_pulse_e 528A  
                       ___fltol@f1 0099                ??i2_initmoving_disp 001C  
                   ??_read_encoder 0099                      __end_of_Cones 4B76  
               i2___lwmod@dividend 0008                     __pcstackCOMRAM 0001  
               i2___lldiv@dividend 0001               __size_of_drop_record 0078  
                     __pidataBANK0 54A4                      __end_of_backw 54D2  
                    __end_of_data1 536E                      __end_of_data2 5208  
                    __end_of_data3 5008                      __end_of_data4 4FBC  
          i2I2C_Master_Read@ackBit 0002                      __end_of_page1 51D0  
                    __end_of_page2 5198                      __end_of_page3 46A6  
                    __end_of_page4 4A48                      __end_of_page5 36C6  
                   ??_read_pointer 0080                      __end_of_page6 534A  
               __size_of_data_disp 035A                      __end_of_putch 5554  
            __size_of_clear_finish 0014                        i2printf@val 0016  
                       __end_of_ot 41B4                 __size_of_clear_mem 008E  
            __size_of_clear_select 0024                   ??_configureports 0080  
                        ?i2___wmul 0001                        i2putch@data 0004  
        __end_ofi2_initmoving_disp 53DA                            ??_Cones 00A5  
                        ?i2_printf 000D                   ??_printintarray2 00A7  
                          ??_backw 0080                            ??_data1 00A3  
                          ??_data2 00A3                            ??_data3 00A3  
                          ??_data4 00A3                            ??_page1 00A3  
                          ??_page2 00A3                            ??_page3 00A3  
                          ??_page4 00A3                            ??_page5 00A3  
                          ??_page6 00A3                            ??_putch 0083  
               i2___lldiv@quotient 0009                         _car_length FD34  
                       __pbssBANK0 00B8                         __pbssBANK1 0100  
                ??_initmoving_disp 00A3                  ?_interruptHandler 0001  
                          ?_Cracks 00B2                  ??_left_crack_drop 00A9  
                 ?_one_byte_reader 0080                            ?_Holes2 00B2  
                     _clear_finish 54FC                 ??_interruptHandler 0023  
                     _clear_select 536E                       _clear_waiter 00FC  
                          ?___flge 0098                            ?___fleq 0090  
       __size_of_sensed_function_3 01B6                            ?___wmul 0088  
                          ?_digit0 0080         i2I2C_Master_Init@clockFreq 000E  
            completion_return@tick 00AD                    _initialize_func 3392  
          _hole_drop_bool_function 36C6                 __size_of_send_byte 0018  
                          ?_record 0001                            ?_moving 0001  
                          ?_printf 008E                         ??i2___wmul 0005  
                          _INTEDG0 007F8E            __size_of_normal_updater 013C  
                  ??_drop_function 00B1                            Cracks@a 00B2  
                          Cracks@b 00B4                         ??i2_printf 000F  
                          _SSPCON1 000FC6                            _SSPCON2 000FC5  
            _array_cracks_distance 0130                  _disp_standby_page 00D4  
                 _right_crack_drop 27C8                            _SSPSTAT 000FC7  
               data_disp@temp_read 0194                            Holes2@a 00B2  
                          Holes2@b 00B4            printintarray2@curr_line 00AD  
                __end_of_car_width FD46                  __end_of_data_disp 1282  
             __size_of_send_nibble 001A                            i2_putch 5562  
                __end_of_clear_mem 4408                  i2___aldiv@divisor 000F  
      __size_ofi2_I2C_Master_Start 0008                          ?_nextLine 0001  
      __size_ofi2_I2C_Master_Write 000A                    i2___fladd@signs 000D  
               __size_of_turn_left 0050                  i2___aldiv@counter 0013  
                     ?i2_send_byte 0001           __end_of_standby_rotating 451A  
                  __size_of_Cracks 0076                            __Hparam 0000  
                       _drop_index 00D8                    __size_of_Holes2 0076  
                          __Lparam 0000                   i2_normal_updater 3AB6  
                          ___aldiv 3CBE                    __size_of___flge 00D2  
                  __size_of___fleq 008C                            ___almod 3F14  
                          ___fladd 15D6                            ___fldiv 1BF0  
                          ___awdiv 451A                            ___awmod 48FE  
                 ??_update_pointer 0080                            ___flmul 1282  
                          ___flsub 5052                            ___fltol 3E58  
                          ___lldiv 45A0                    __size_of___wmul 0028  
                     ot@print_data 00A3                            ___llmod 4A48  
                          ___lwdiv 4CEC                            ___lwmod 509A  
                  __size_of_digit0 0064           interruptHandler@keypress 0032  
                _completion_return 0814                          ?_subtract 0001  
           __size_ofi2_send_nibble 0016           ??_hole_dispense_function 00A3  
                        ?_straight 0001                            __pcinit 488C  
                          __ramtop 1000                    __size_of_record 0224  
                          _lcdInst 5534                            __ptext0 0012  
                          __ptext1 4494                            __ptext2 5326  
                          __ptext3 3544                            __ptext4 49E0  
                          __ptext5 4BD6                            __ptext6 4624  
                          __ptext7 5160                            __ptext8 5198  
                          __ptext9 31DC                            _end_sec 00BC  
                  __size_of_moving 001E                    __size_of_printf 025C  
               ?_completion_return 0001                         _read_total 4BD6  
                          _initLCD 4970                       __size_of_L_I 0040  
                     __size_of_R_I 0050                            _readRTC 406E  
                          _dpowers FD1E                            _isdigit 53DA  
       __size_ofi2_initmoving_disp 0024                            _no_cone 00E6  
                 ___awmod@dividend 0080                            digit0@h 0080  
                 ___aldiv@dividend 008A               __end_of_read_encoder 437A  
         __size_of_I2C_Master_Init 0060           __size_of_I2C_Master_Read 002A  
         __size_of_I2C_Master_Wait 0014           __size_of_I2C_Master_Stop 0008  
              ??_completion_return 00A7                            _pulse_e 5208  
                 left_crack_drop@A 00A9                   left_crack_drop@B 00AD  
                    ??_data_select 00A3            i2pulse_e@interruptState 0001  
                   __pintcode_body 046E           __end_of_completion_write 2FEA  
                  page5@op_counter 00A6               end_of_initialization 48F0  
             __end_of_read_pointer 5300              __end_of_LCD_SIZE_HORZ FD3E  
                __end_of_send_byte 54A4              __end_of_LCD_SIZE_VERT FD3D  
                    _turns_counter 00C8                      __Lmediumconst FD0C  
                          int_func 046E                i2___wmul@multiplier 0001  
                        i2u1360_47 0510                          i2u1361_47 0554  
                        i2u1362_47 0650                          i2u1363_47 06FC  
                   _operation_time 00F7                          i2u1364_47 072C  
                        i2u1365_47 53C2                          i2u1366_47 526E  
                        i2u1367_47 5278                         ??_nextLine 0080  
        __size_of_I2C_Master_Start 0008          __size_of_I2C_Master_Write 000A  
                  ___lldiv@divisor 0084            __end_of_initialize_func 3544  
            completion_write@value 00A5                   one_byte_reader@r 0081  
                  ___lldiv@counter 008C           _crack_drop_bool_function 3820  
        ??_hole_drop_bool_function 00A6                            printf@c 00A2  
                          printf@f 008E                   ___aldiv@quotient 0094  
        __end_of_completion_return 0BA2                            postdec1 000FE5  
                          postdec2 000FDD                            postinc0 000FEE  
                          postinc2 000FDE                         ??_subtract 0080  
                       ??_straight 0080                          _PORTAbits 000F80  
                        _PORTBbits 000F81                          _PORTEbits 000F84  
           data_disp@length_i_1925 0196                         _print_data 0178  
                      ___fladd@grs 008F                  __end_of_turn_left 4E84  
                        _TRISAbits 000F92                          _TRISBbits 000F93  
                        _TRISCbits 000F94                          _TRISEbits 000F96  
                i2_I2C_Master_Init 4C90                  i2_I2C_Master_Read 5392  
                      ___fldiv@grs 0093                  i2_I2C_Master_Wait 5510  
                      ___fldiv@rem 008C                       _happynewyear 004C  
                i2_I2C_Master_Stop 55AA                          i2___aldiv 3D8C  
                        i2___almod 3FC2                          i2___fladd 18E4  
                        i2___fldiv 1E7A           hole_drop_bool_function@x 00A6  
         hole_drop_bool_function@y 00AA                  i2___lwdiv@divisor 0003  
                        i2___lldiv 46A6                  _middle_crack_drop 29D4  
                        i2___lwdiv 4D92                          i2___lwmod 50DE  
               ?i2_I2C_Master_Init 000E                  i2___lwdiv@counter 0007  
               ?i2_I2C_Master_Read 0001                 ?i2_I2C_Master_Wait 0001  
                    i2_send_nibble 54D2                 ?i2_I2C_Master_Stop 0001  
                       _start_time 0055                        ___flmul@grs 008E  
               ?_middle_crack_drop 0001                  i2___almod@divisor 0005  
                        i2_lcdInst 556E                  i2___almod@counter 0009  
                      printf@width 00A0                      send_byte@data 0082  
              __end_of_data_select 4D92                          i2_readRTC 4250  
              ??i2_I2C_Master_Init 0012                ??i2_I2C_Master_Read 0002  
                        i2_isdigit 5438                ??i2_I2C_Master_Wait 0001  
              ??i2_I2C_Master_Stop 0002                     __end_of_Cracks 488C  
              ??_middle_crack_drop 00A9                     __end_of_Holes2 4816  
                 initialize_func@g 0021                          i2_pulse_e 5260  
                   __end_of___flge 3CBE                     __end_of___fleq 4494  
                   __end_of___wmul 52DA                     __end_of_digit0 4B14  
                    __pidataCOMRAM 557A    __size_of_hole_dispense_function 0386  
                       _turn_right 4DE4                      i2lcdInst@data 0004  
                      ?_read_total 0088                     __end_of_record 27C8  
                   __end_of_moving 541A                   i2___wmul@product 0005  
                   __end_of_printf 235E                    _initmoving_disp 528A  
                     i2printf@flag 0018          __end_ofi2_I2C_Master_Init 4CEC  
        __end_ofi2_I2C_Master_Read 53B6          __end_ofi2_I2C_Master_Wait 5522  
                   _normal_updater 397A                       i2printf@prec 0015  
              start_initialization 488C          __end_ofi2_I2C_Master_Stop 55B2  
                __size_ofi2___wmul 0026                        __end_of_L_I 5160  
                      __end_of_R_I 4ED4    __end_of_hole_drop_bool_function 3820  
        __end_of_middle_crack_drop 2BE0               _array_holes_distance 0148  
                  _left_crack_drop 2BE0                          i2printf@c 001B  
                        i2printf@f 000D                         ?i2___aldiv 000B  
                       ?i2___almod 0001                         ?i2___fladd 0001  
                       ?i2___fldiv 0001                         ?i2___lldiv 0001  
                   ?i2_send_nibble 0001                         ?i2___lwdiv 0001  
                       ?i2___lwmod 0008                  __size_ofi2_printf 0246  
                ??_I2C_Master_Init 0091                  ??_I2C_Master_Read 0081  
                ??_I2C_Master_Wait 0080                         ?i2_lcdInst 0001  
                ??_I2C_Master_Stop 0081                    ___llmod@divisor 0084  
                  ___llmod@counter 0088                         ?i2_readRTC 0001  
                         ??_Cracks 00B6              printintarray2@counter 00B0  
                    ??_drop_record 0092                         ?i2_isdigit 0001  
                         ??_Holes2 00B6                   ?_initialize_func 0001  
                     _hole_counter 0048                           ??___flge 00A0  
                         ??___fleq 0098               __size_ofi2_send_byte 0012  
       __size_of_completion_return 038E                         ?i2_pulse_e 0001  
                         ??___wmul 008C                data_disp@datalength 019A  
                         ??_digit0 0082           __end_of_right_crack_drop 29D4  
         I2C_Master_Init@clockFreq 008D                        __pdataBANK0 00E8  
                 __CFG_LPT1OSC$OFF 000000                           ??_record 00A3  
            __size_of_read_encoder 008E                           ??_moving 0081  
                         ??_printf 0096          __size_of_interruptHandler 080C  
                     _last_dropped 00E7             __end_of_normal_updater 3AB6  
                        ___fladd@a 0084                          ___fladd@b 0080  
                    readRTC@t_data 0097                          ___fldiv@a 0084  
                        ___fldiv@b 0080                          ___flmul@a 0084  
                        ___flmul@b 0080                        __pbssCOMRAM 0034  
                        ___flsub@a 0094                          ___flsub@b 0090  
            __size_of_read_pointer 0026                      __pcstackBANK0 0080  
                    __pcstackBANK1 0192                      drop_record@aa 0090  
         __end_ofi2_normal_updater 3BEC                  i2___lwmod@divisor 000A  
                i2___lwmod@counter 000C                          _add_index 004A  
            _completion_write$2721 00A3                       _isdigit$2496 0081  
                      _data_select 4D40             _hole_dispense_function 0BA2  
                         ?i2_putch 0001                         record@corh 00A5  
                        _car_width FD42                   _I2C_Master_Start 55A2  
              __size_of_read_total 005E                          _data_disp 0F28  
                 _I2C_Master_Write 5586                  ?_standby_rotating 0001  
                 ___lwdiv@dividend 0080                       _read_encoder 42EC  
                        _clear_mem 437A                  __CFG_CCP2MX$PORTC 000000  
                __size_of_nextLine 005C                          __pintcode 0008  
                    __pmediumconst FD0C                  data_disp@length_i 0198  
                         ?___aldiv 008A                 ??_standby_rotating 00A8  
                         ?___almod 0080                           ?___fladd 0080  
                         ?___fldiv 0080                           ?___awdiv 0080  
                        __ptext100 235E                          __ptext101 5562  
                        __ptext102 5438                          __ptext103 5300  
                        __ptext104 50DE                          __ptext105 4D92  
                        __ptext106 556E                          __ptext107 5522  
                        __ptext108 54D2                          __ptext109 5260  
                         ?___awmod 0080                           ?___flmul 0080  
                         ?___flsub 0090                           ?___fltol 0099  
                         ?___lldiv 0080                           ?___llmod 0080  
                         ?___lwdiv 0080                           ?___lwmod 0087  
               middle_crack_drop@A 00A9                 middle_crack_drop@B 00AD  
          __end_of_initmoving_disp 52B2                __end_of_drop_record 47A0  
                     _read_pointer 52DA           __size_of_one_byte_reader 001C  
                      ?_turn_right 0001                   ___almod@dividend 0080  
                         ?_lcdInst 0001            __end_of_left_crack_drop 2DEC  
                  ?_normal_updater 0001                  __size_of_subtract 001E  
                         ?_initLCD 0001                  __size_of_straight 004E  
                         ?_readRTC 0001                           ?_isdigit 0001  
       __size_ofi2_I2C_Master_Init 005C         __size_ofi2_I2C_Master_Read 0024  
       __size_ofi2_I2C_Master_Wait 0012         __size_ofi2_I2C_Master_Stop 0008  
                   __size_of_Cones 0062         __size_of_middle_crack_drop 020C  
                  ??i2_send_nibble 0002                     __size_of_backw 0016  
                   __size_of_data1 0024                     __size_of_data2 0038  
                   __size_of_data3 004C                     __size_of_data4 004C  
                    ??_send_nibble 0081                           ?_pulse_e 0001  
                 ___lwdiv@quotient 0085                        ??i2___aldiv 0013  
                      ??i2___almod 0009                        ??i2___fladd 0009  
                      ??i2___fldiv 0009                     __size_of_page1 0038  
                   __size_of_page2 0038                     __size_of_page3 0082  
                   __size_of_page4 0068                     __size_of_page5 0182  
                   __size_of_page6 0024              __end_of_drop_function 4250  
                      ??i2___lldiv 0009                        ??i2___lwdiv 0005  
                      ??i2___lwmod 000C                          _read_pntr 00E2  
                   __size_of_putch 0010            __size_of_configureports 004A  
                ?_completion_write 0001                        __size_of_ot 009E  
       ??_crack_drop_bool_function 00A6          crack_drop_bool_function@x 00A6  
        crack_drop_bool_function@y 00AA         __end_ofi2_I2C_Master_Start 55BA  
                  ___aldiv@divisor 008E         __end_ofi2_I2C_Master_Write 559A  
                      ??i2_lcdInst 0004                    ___aldiv@counter 0092  
                   ___wmul@product 008C                 ??_completion_write 00A3  
                         _LATAbits 000F89                           _LATCbits 000F8B  
                         _LATDbits 000F8C                        ??i2_readRTC 0016  
                       ?_data_disp 0001            __size_of_printintarray2 01F2  
                      ??i2_isdigit 0001                          _send_byte 548C  
                        _ninty_deg 00FA                     _LCD_LINE1_ADDR FD3B  
                    _operation_sec 00B8                     _LCD_LINE2_ADDR FD3A  
                   _LCD_LINE3_ADDR FD39                     _LCD_LINE4_ADDR FD38  
                       ?_clear_mem 0001                           i2u474_45 5286  
                         i2u474_46 5288                           i2u491_40 46D8  
                         i2u572_40 50F8                           i2u820_40 19DA  
                         i2u653_40 2416                           i2u821_40 19EA  
                         i2u822_40 19EC                           i2u566_45 4CB8  
                         i2u807_40 352E                           i2u911_40 04D0  
                         i2u567_45 53AE                           i2u567_46 53B0  
                         i2u664_40 250E                           i2u672_40 3DF2  
                         i2u840_40 1B54                           i2u569_40 4DB4  
                         i2u665_40 2522                           i2u825_40 1A2E  
                         i2u667_40 258A                           i2u924_40 0632  
                         i2u933_40 0776                           i2u925_40 0634  
                         i2u917_40 05B6                           i2u678_40 4014  
                         i2u846_40 1BB0                           i2u838_40 1B40  
                         i2u870_40 20AC                           i2u933_48 0778  
                         i2u871_40 20D0                           i2u866_40 2050  
                i2___fldiv@new_exp 0012                   __CFG_WDTPS$32768 000000  
                      ??i2_pulse_e 0001      i2I2C_Master_Write@byteToWrite 0002  
               __end_of_car_length FD38                  ___wmul@multiplier 0088  
                         i2___wmul 5300                          _start_sec 00C0  
                       printf@flag 009F                         printf@prec 009C  
                        main@ticks 019E                           i2_printf 235E  
            i2_normal_updater$2898 001B                          _turn_left 4E34  
                  printintarray2@a 00A3                    printintarray2@b 00A5  
                  printintarray2@i 00AE                          copy_data0 48A0  
                        copy_data1 48C0                 i2___aldiv@dividend 000B  
                    _crack_counter 0046             __end_of_LCD_LINE1_ADDR FD3C  
           __end_of_LCD_LINE2_ADDR FD3B             __end_of_LCD_LINE3_ADDR FD3A  
              __size_of_turn_right 0050             __end_of_LCD_LINE4_ADDR FD39  
                 __size_ofi2_putch 000C                __end_of_send_nibble 548C  
                       _EECON1bits 000FA6                  i2send_nibble@data 0002  
                       ?_send_byte 0001                        _drop_record 4728  
                         __Hrparam 0000                           __Lrparam 0000  
               __CFG_BOREN$SBORDIS 000000                   __size_of___aldiv 00CE  
                 __size_of___almod 00AE                   __size_of___fladd 030E  
                 __size_of___fldiv 028A                   __size_of___awdiv 0086  
                 __size_of___awmod 0072                   __size_of___flmul 0354  
                 __size_of___flsub 0048                   __size_of___fltol 00BC  
                 ?_initmoving_disp 0001              i2___wmul@multiplicand 0003  
                 __size_of___lldiv 0084                   __size_of___llmod 0068  
                      _last_sensed 00DA                   __size_of___lwdiv 0054  
                 __size_of___lwmod 0044                   _interruptHandler 0008  
                     ??_read_total 008A                 i2___aldiv@quotient 0015  
                right_crack_drop@A 00A9                  right_crack_drop@B 00AD  
                 ?_left_crack_drop 0001                   __size_of_lcdInst 0010  
                  _I2C_Master_Init 4B76                    _I2C_Master_Read 5236  
                 __size_of_initLCD 0070                    _I2C_Master_Wait 54E8  
                 __size_of_readRTC 00A8                          nextLine@g 0080  
                  _I2C_Master_Stop 559A                   __size_of_isdigit 0022  
                ??_one_byte_reader 0081            __size_of_update_pointer 004E  
                  ___lwdiv@divisor 0082                    ___lwdiv@counter 0084  
                         __ptext10 25A4                           __ptext11 3E58  
                         __ptext20 4728                           __ptext12 1282  
                         __ptext21 3820                           __ptext13 42EC  
                         __ptext30 0BA2                           __ptext22 4408  
                         __ptext14 1BF0                           __ptext31 5052  
                         __ptext23 397A                           __ptext15 53FC  
                         __ptext40 5456                           __ptext32 4D40  
                         __ptext24 528A                           __ptext16 4DE4  
                         __ptext41 48FE                           __ptext33 4F70  
                         __ptext25 4970                           __ptext17 4E34  
                         __ptext50 406E                           __ptext42 47A0  
                         __ptext34 4FBC                           __ptext26 41B4  
                         __ptext18 4ED4                           __ptext51 5586  
                         __ptext43 4816                           __ptext35 51D0  
                         __ptext27 27C8                           __ptext19 36C6  
                         __ptext60 451A                           __ptext52 559A  
                         __ptext44 2FEA                           __ptext36 534A  
                         __ptext28 29D4                           __ptext61 54BC  
                         __ptext53 55A2                           __ptext45 4C34  
                         __ptext37 0F28                           __ptext29 2BE0  
                         __ptext70 5534                           __ptext62 3BEC  
                         __ptext54 5236                           __ptext46 4AB0  
                         __ptext38 541A                           __ptext71 54FC  
                         __ptext63 15D6                           __ptext55 54E8  
                         __ptext47 4B14                           __ptext39 4116  
                         __ptext80 4CEC                           __ptext72 2102  
                         __ptext64 3F14                           __ptext56 4B76  
                         __ptext48 5008                           __ptext81 437A  
                         __ptext73 5544                           __ptext65 3CBE  
                         __ptext57 45A0                           __ptext49 0814  
                         __ptext90 5590                           __ptext82 52DA  
                         __ptext74 548C                           __ptext66 5554  
                         __ptext58 2DEC                           __ptext91 55AA  
                         __ptext83 4A48                           __ptext75 5472  
                         __ptext67 4E84                           __ptext59 4F22  
                         __ptext92 55B2                           __ptext76 5208  
                         __ptext68 5120                           __ptext93 5392  
                         __ptext85 1E7A                           __ptext77 53DA  
                         __ptext69 536E                           __ptext94 5510  
                         __ptext86 18E4                           __ptext78 52B2  
                         __ptext95 4C90                           __ptext87 3392  
                         __ptext79 509A                           __ptext96 46A6  
                         __ptext88 3AB6                           __ptext97 3FC2  
                         __ptext89 4250                           __ptext98 3D8C  
                         __ptext99 53B6                         ?_turn_left 0001  
                 __size_of_pulse_e 002E                    ___almod@divisor 0084  
                  ___almod@counter 0088                     i2_isdigit$2496 0002  
                    __size_of_Stop 000E                      __size_of_main 045C  
               one_byte_reader@out 0082           ?_hole_drop_bool_function 00A4  
                      ??_data_disp 0192                           _nextLine 4C34  
                    ?_clear_finish 0001                 __end_of_read_total 4C34  
                      ??_clear_mem 0080                      ?_clear_select 0001  
                         int$flags 0057                  ?_right_crack_drop 0001  
                         _total_op 0044                           _wety_deg 0053  
                         _subtract 541A                          printf@val 009D  
                         _straight 4ED4        I2C_Master_Write@byteToWrite 0081  
               ??_right_crack_drop 00A9                          putch@data 0083  
         __end_of_I2C_Master_Start 55AA           __end_of_I2C_Master_Write 5590  
                         readRTC@i 0096                         _INTCONbits 000FF2  
                   _cones_deployed 00D6            ?_hole_dispense_function 0001  
                         isdigit@c 0082                  ?i2_normal_updater 0001  
                      _send_nibble 5472                       ?_data_select 0001  
                   _configureports 5008                    _half_lane_width FD2C  
 __end_of_crack_drop_bool_function 397A                 ??i2_normal_updater 0019  
                         intlevel2 0000                      _LCD_SIZE_HORZ FD3D  
                 ___lwmod@dividend 0087                      _LCD_SIZE_VERT FD3C  
                 ___lldiv@dividend 0080               sensed_function_3@sth 0192  
                   _printintarray2 2FEA                     ??_clear_finish 00A3  
                    ??i2_send_byte 0003                        ??_send_byte 0082  
                one_byte_reader@rh 0080                     ??_clear_select 00A3  
                         printf@ap 009A                   ??_normal_updater 0098  
                  i2send_byte@data 0003            __end_of_I2C_Master_Init 4BD6  
          __end_of_I2C_Master_Read 5260            __end_of_I2C_Master_Wait 54FC  
          __end_of_I2C_Master_Stop 55A2                        lcdInst@data 0083  
                     ??_turn_right 0080           __size_of_initialize_func 01B2  
                  Cones@print_data 00A3                   ___lldiv@quotient 0088  
                  ___lwmod@divisor 0089          __size_of_standby_rotating 0086  
   __end_of_hole_dispense_function 0F28                    ___lwmod@counter 008B  
                     ___aldiv@sign 0093             __end_of_configureports 5052  
                   _display_repeat 00CE                        _SSPCON1bits 000FC6  
                      _SSPCON2bits 000FC5      i2I2C_Master_Read@receivedByte 0003  
              _normal_updater$2719 009A                        ??_turn_left 0080  
                    ___fladd@signs 008C         hole_dispense_function@tick 00A5  
                     ___almod@sign 0089             __end_of_printintarray2 31DC  
                     ___fladd@aexp 008D                       ___fladd@bexp 008E  
               __end_of_turn_right 4E34  
