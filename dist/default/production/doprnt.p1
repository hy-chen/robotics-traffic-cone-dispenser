Version 3.2 HI-TECH Software Intermediate Code
"10 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdarg.h
[v ___va_start `(*v ~T0 @X0 0 ef ]
[p i ___va_start ]
"16 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\conio.h
[v _putch `(v ~T0 @X0 0 ef1`uc ]
"7 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\ctype.h
[v _isdigit `(b ~T0 @X0 0 ef1`uc ]
"13 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\include\c90\stdarg.h
[v ___va_arg `(*v ~T0 @X0 0 ev`*v ]
[p i ___va_arg ]
[; ;__size_t.h: 4: typedef unsigned size_t;
[; ;stdarg.h: 7: typedef void * va_list[1];
[; ;stdarg.h: 10: extern void * __va_start(void);
[; ;stdarg.h: 13: extern void * __va_arg(void *, ...);
[; ;stdio.h: 43: struct __prbuf
[; ;stdio.h: 44: {
[; ;stdio.h: 45: char * ptr;
[; ;stdio.h: 46: void (* func)(char);
[; ;stdio.h: 47: };
[; ;errno.h: 29: extern int errno;
[; ;conio.h: 12: extern void init_uart(void);
[; ;conio.h: 14: extern char getch(void);
[; ;conio.h: 15: extern char getche(void);
[; ;conio.h: 16: extern void putch(char);
[; ;conio.h: 17: extern void ungetch(char);
[; ;conio.h: 19: extern __bit kbhit(void);
[; ;conio.h: 23: extern char * cgets(char *);
[; ;conio.h: 24: extern void cputs(const char *);
[; ;stdio.h: 88: extern int cprintf(char *, ...);
[; ;stdio.h: 93: extern int _doprnt(struct __prbuf *, const register char *, register va_list);
[; ;stdio.h: 183: extern char * gets(char *);
[; ;stdio.h: 184: extern int puts(const char *);
[; ;stdio.h: 185: extern int scanf(const char *, ...) __attribute__((unsupported("scanf() is not supported by this compiler")));
[; ;stdio.h: 186: extern int sscanf(const char *, const char *, ...) __attribute__((unsupported("sscanf() is not supported by this compiler")));
[; ;stdio.h: 187: extern int vprintf(const char *, va_list) __attribute__((unsupported("vprintf() is not supported by this compiler")));
[; ;stdio.h: 188: extern int vsprintf(char *, const char *, va_list) __attribute__((unsupported("vsprintf() is not supported by this compiler")));
[; ;stdio.h: 189: extern int vscanf(const char *, va_list ap) __attribute__((unsupported("vscanf() is not supported by this compiler")));
[; ;stdio.h: 190: extern int vsscanf(const char *, const char *, va_list) __attribute__((unsupported("vsscanf() is not supported by this compiler")));
[; ;stdio.h: 194: extern int sprintf(char *, const char *, ...);
[; ;stdio.h: 195: extern int printf(const char *, ...);
[; ;ctype.h: 4: extern __bit isalpha(char);
[; ;ctype.h: 5: extern __bit isupper(char);
[; ;ctype.h: 6: extern __bit islower(char);
[; ;ctype.h: 7: extern __bit isdigit(char);
[; ;ctype.h: 8: extern __bit isxdigit(char);
[; ;ctype.h: 9: extern __bit isspace(char);
[; ;ctype.h: 10: extern __bit ispunct(char);
[; ;ctype.h: 11: extern __bit isalnum(char);
[; ;ctype.h: 12: extern __bit isprint(char);
[; ;ctype.h: 13: extern __bit isgraph(char);
[; ;ctype.h: 14: extern __bit iscntrl(char);
[; ;ctype.h: 17: extern char toupper(char);
[; ;ctype.h: 18: extern char tolower(char);
[; ;stdlib.h: 7: typedef unsigned short wchar_t;
[; ;stdlib.h: 15: typedef struct {
[; ;stdlib.h: 16: int rem;
[; ;stdlib.h: 17: int quot;
[; ;stdlib.h: 18: } div_t;
[; ;stdlib.h: 19: typedef struct {
[; ;stdlib.h: 20: unsigned rem;
[; ;stdlib.h: 21: unsigned quot;
[; ;stdlib.h: 22: } udiv_t;
[; ;stdlib.h: 23: typedef struct {
[; ;stdlib.h: 24: long quot;
[; ;stdlib.h: 25: long rem;
[; ;stdlib.h: 26: } ldiv_t;
[; ;stdlib.h: 27: typedef struct {
[; ;stdlib.h: 28: unsigned long quot;
[; ;stdlib.h: 29: unsigned long rem;
[; ;stdlib.h: 30: } uldiv_t;
[; ;stdlib.h: 65: extern double atof(const char *);
[; ;stdlib.h: 66: extern double strtod(const char *, const char **);
[; ;stdlib.h: 67: extern int atoi(const char *);
[; ;stdlib.h: 68: extern unsigned xtoi(const char *);
[; ;stdlib.h: 69: extern long atol(const char *);
[; ;stdlib.h: 73: extern long strtol(const char *, char **, int);
[; ;stdlib.h: 75: extern int rand(void);
[; ;stdlib.h: 76: extern void srand(unsigned int);
[; ;stdlib.h: 77: extern void * calloc(size_t, size_t);
[; ;stdlib.h: 78: extern div_t div(int numer, int denom);
[; ;stdlib.h: 79: extern udiv_t udiv(unsigned numer, unsigned denom);
[; ;stdlib.h: 80: extern ldiv_t ldiv(long numer, long denom);
[; ;stdlib.h: 81: extern uldiv_t uldiv(unsigned long numer,unsigned long denom);
[; ;stdlib.h: 85: extern unsigned long _lrotl(unsigned long value, unsigned int shift);
[; ;stdlib.h: 86: extern unsigned long _lrotr(unsigned long value, unsigned int shift);
[; ;stdlib.h: 87: extern unsigned int _rotl(unsigned int value, unsigned int shift);
[; ;stdlib.h: 88: extern unsigned int _rotr(unsigned int value, unsigned int shift);
[; ;stdlib.h: 93: extern void * malloc(size_t);
[; ;stdlib.h: 94: extern void free(void *);
[; ;stdlib.h: 95: extern void * realloc(void *, size_t);
[; ;xc8debug.h: 14: extern void __builtin_software_breakpoint(void);
[; ;stdlib.h: 104: extern int atexit(void (*)(void));
[; ;stdlib.h: 105: extern char * getenv(const char *);
[; ;stdlib.h: 106: extern char ** environ;
[; ;stdlib.h: 107: extern int system(char *);
[; ;stdlib.h: 108: extern void qsort(void *, size_t, size_t, int (*)(const void *, const void *));
[; ;stdlib.h: 109: extern void * bsearch(const void *, void *, size_t, size_t, int(*)(const void *, const void *));
[; ;stdlib.h: 110: extern int abs(int);
[; ;stdlib.h: 111: extern long labs(long);
[; ;stdlib.h: 113: extern char * itoa(char * buf, int val, int base);
[; ;stdlib.h: 114: extern char * utoa(char * buf, unsigned val, int base);
[; ;stdlib.h: 119: extern char * ltoa(char * buf, long val, int base);
[; ;stdlib.h: 120: extern char * ultoa(char * buf, unsigned long val, int base);
[; ;stdlib.h: 122: extern char * ftoa(float f, int * status);
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
"12 C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c
[p n 350 ]
"358
[v _dpowers `Cui ~T0 @X0 -> 0 `x s ]
[i _dpowers
:U ..
-> -> 1 `i `ui
-> -> 10 `i `ui
-> -> 100 `i `ui
-> -> 1000 `i `ui
-> -> 10000 `i `ui
..
]
[; ;doprnt.c: 358: const static unsigned int dpowers[] = {1, 10, 100, 1000, 10000,
[; ;doprnt.c: 363: };
"472
[v _printf `(i ~T0 @X0 1 ev`*Cuc ]
"473
{
[; ;doprnt.c: 463: int
[; ;doprnt.c: 472: printf(const char * f, ...)
[; ;doprnt.c: 473: {
[e :U _printf ]
"472
[v _f `*Cuc ~T0 @X0 1 r0 ]
"473
[f ]
"474
[v _ap `*v ~T0 @X0 -> -> 1 `i `ux a ]
"507
[v _c `uc ~T0 @X0 1 a ]
"509
[v _width `i ~T0 @X0 1 a ]
"516
[v _prec `c ~T0 @X0 1 a ]
"520
[v _flag `uc ~T0 @X0 1 a ]
"535
[u S6 `ul 1 `d 1 ]
[n S6 . vd integ ]
"538
[v _tmpval `S6 ~T0 @X0 1 a ]
"540
[v _val `ui ~T0 @X0 1 a ]
"541
[v _len `ui ~T0 @X0 1 a ]
"542
[v _cp `*Cuc ~T0 @X0 1 a ]
[; ;doprnt.c: 474: va_list ap;
[; ;doprnt.c: 507: char c;
[; ;doprnt.c: 509: int width;
[; ;doprnt.c: 516: signed char prec;
[; ;doprnt.c: 520: unsigned char flag;
[; ;doprnt.c: 535: union {
[; ;doprnt.c: 536: unsigned long vd;
[; ;doprnt.c: 537: double integ;
[; ;doprnt.c: 538: } tmpval;
[; ;doprnt.c: 540: unsigned int val;
[; ;doprnt.c: 541: unsigned len;
[; ;doprnt.c: 542: const char * cp;
[; ;doprnt.c: 545: *ap = __va_start();
"545
[e = *U &U _ap ( ___va_start ..  ]
[; ;doprnt.c: 548: while((c = *f++)) {
"548
[e $U 8  ]
[e :U 9 ]
{
[; ;doprnt.c: 550: if(c != '%')
"550
[e $ ! != -> _c `ui -> 37 `ui 11  ]
[; ;doprnt.c: 552: {
"552
{
[; ;doprnt.c: 553: (putch(c) );
"553
[e ( _putch (1 _c ]
[; ;doprnt.c: 554: continue;
"554
[e $U 8  ]
"555
}
[e :U 11 ]
[; ;doprnt.c: 555: }
[; ;doprnt.c: 558: width = 0;
"558
[e = _width -> 0 `i ]
[; ;doprnt.c: 560: flag = 0;
"560
[e = _flag -> -> 0 `i `uc ]
[; ;doprnt.c: 562: for(;;) {
"562
{
[e :U 12 ]
{
[; ;doprnt.c: 563: switch(*f) {
"563
[e $U 16  ]
{
[; ;doprnt.c: 591: case '0':
"591
[e :U 17 ]
[; ;doprnt.c: 592: flag |= 0x04;
"592
[e =| _flag -> -> 4 `i `uc ]
[; ;doprnt.c: 593: f++;
"593
[e ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x ]
[; ;doprnt.c: 594: continue;
"594
[e $U 14  ]
"596
}
[; ;doprnt.c: 596: }
[e $U 15  ]
"563
[e :U 16 ]
[e [\ *U _f , $ -> -> 48 `ui `uc 17
 15 ]
"596
[e :U 15 ]
[; ;doprnt.c: 597: break;
"597
[e $U 13  ]
"598
}
[e :U 14 ]
[; ;doprnt.c: 598: }
[e $U 12  ]
[e :U 13 ]
}
[; ;doprnt.c: 609: if(isdigit((unsigned)*f)) {
"609
[e $ ! ( _isdigit (1 -> -> *U _f `ui `uc 18  ]
{
[; ;doprnt.c: 610: width = 0;
"610
[e = _width -> 0 `i ]
[; ;doprnt.c: 611: do {
"611
[e :U 21 ]
{
[; ;doprnt.c: 612: width *= 10;
"612
[e =* _width -> 10 `i ]
[; ;doprnt.c: 613: width += *f++ - '0';
"613
[e =+ _width -> - -> *U ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x `ui -> 48 `ui `i ]
"614
}
[; ;doprnt.c: 614: } while(isdigit((unsigned)*f));
[e $ ( _isdigit (1 -> -> *U _f `ui `uc 21  ]
[e :U 20 ]
"620
}
[e :U 18 ]
[; ;doprnt.c: 620: }
[; ;doprnt.c: 654: switch(c = *f++) {
"654
[e $U 23  ]
{
[; ;doprnt.c: 656: case 0:
"656
[e :U 24 ]
[; ;doprnt.c: 657: goto alldone;
"657
[e $U 25  ]
[; ;doprnt.c: 716: case 'd':
"716
[e :U 26 ]
"717
[e :U 27 ]
[; ;doprnt.c: 717: case 'i':
[; ;doprnt.c: 718: break;
"718
[e $U 22  ]
[; ;doprnt.c: 821: default:
"821
[e :U 28 ]
[; ;doprnt.c: 832: continue;
"832
[e $U 8  ]
"841
}
[; ;doprnt.c: 841: }
[e $U 22  ]
"654
[e :U 23 ]
[e [\ = _c *U ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x , $ -> -> 0 `i `uc 24
 , $ -> -> 100 `ui `uc 26
 , $ -> -> 105 `ui `uc 27
 28 ]
"841
[e :U 22 ]
[; ;doprnt.c: 1272: {
"1272
{
[; ;doprnt.c: 1278: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
"1278
[e = _val -> *U -> ( ___va_arg , (. -> *U -> &U _ap `**i `*v -> 0 `i `*i `ui ]
[; ;doprnt.c: 1280: if((int)val < 0) {
"1280
[e $ ! < -> _val `i -> 0 `i 29  ]
{
[; ;doprnt.c: 1281: flag |= 0x03;
"1281
[e =| _flag -> -> 3 `i `uc ]
[; ;doprnt.c: 1282: val = -val;
"1282
[e = _val -U _val ]
"1283
}
[e :U 29 ]
"1285
}
[; ;doprnt.c: 1283: }
[; ;doprnt.c: 1285: }
[; ;doprnt.c: 1324: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
"1324
{
[e = _c -> -> 1 `i `uc ]
[e $ != -> _c `ui / -> # _dpowers `ui -> # *U + &U _dpowers * -> -> -> 0 `i `ui `ux -> -> # *U &U _dpowers `ui `ux `ui 30  ]
[e $U 31  ]
"1325
[e :U 30 ]
[; ;doprnt.c: 1325: if(val < dpowers[c])
[e $ ! < _val *U + &U _dpowers * -> _c `ux -> -> # *U &U _dpowers `ui `ux 33  ]
[; ;doprnt.c: 1326: break;
"1326
[e $U 31  ]
[e :U 33 ]
"1324
[e ++ _c -> -> 1 `i `uc ]
[e $ != -> _c `ui / -> # _dpowers `ui -> # *U + &U _dpowers * -> -> -> 0 `i `ui `ux -> -> # *U &U _dpowers `ui `ux `ui 30  ]
[e :U 31 ]
"1364
}
[; ;doprnt.c: 1364: if(width && flag & 0x03)
[e $ ! && != _width -> 0 `i != & -> _flag `i -> 3 `i -> 0 `i 34  ]
[; ;doprnt.c: 1365: width--;
"1365
[e -- _width -> 1 `i ]
[e :U 34 ]
[; ;doprnt.c: 1400: if(width > c)
"1400
[e $ ! > _width -> _c `i 35  ]
[; ;doprnt.c: 1401: width -= c;
"1401
[e =- _width -> _c `i ]
[e $U 36  ]
"1402
[e :U 35 ]
[; ;doprnt.c: 1402: else
[; ;doprnt.c: 1403: width = 0;
"1403
[e = _width -> 0 `i ]
[e :U 36 ]
[; ;doprnt.c: 1406: if(flag & 0x04) {
"1406
[e $ ! != & -> _flag `i -> 4 `i -> 0 `i 37  ]
{
[; ;doprnt.c: 1411: if(flag & 0x03)
"1411
[e $ ! != & -> _flag `i -> 3 `i -> 0 `i 38  ]
[; ;doprnt.c: 1412: (putch('-') );
"1412
[e ( _putch (1 -> -> 45 `ui `uc ]
[e :U 38 ]
[; ;doprnt.c: 1434: if(width)
"1434
[e $ ! != _width -> 0 `i 39  ]
[; ;doprnt.c: 1435: do
"1435
[e :U 42 ]
[; ;doprnt.c: 1436: (putch('0') );
"1436
[e ( _putch (1 -> -> 48 `ui `uc ]
[; ;doprnt.c: 1437: while(--width);
"1437
[e $ != =- _width -> 1 `i -> 0 `i 42  ]
[e :U 41 ]
[e :U 39 ]
"1439
}
[; ;doprnt.c: 1439: } else
[e $U 43  ]
[e :U 37 ]
[; ;doprnt.c: 1441: {
"1441
{
[; ;doprnt.c: 1443: if(width
[; ;doprnt.c: 1447: )
"1447
[e $ ! != _width -> 0 `i 44  ]
[; ;doprnt.c: 1448: do
"1448
[e :U 47 ]
[; ;doprnt.c: 1449: (putch(' ') );
"1449
[e ( _putch (1 -> -> 32 `ui `uc ]
[; ;doprnt.c: 1450: while(--width);
"1450
[e $ != =- _width -> 1 `i -> 0 `i 47  ]
[e :U 46 ]
[e :U 44 ]
[; ;doprnt.c: 1457: if(flag & 0x03)
"1457
[e $ ! != & -> _flag `i -> 3 `i -> 0 `i 48  ]
[; ;doprnt.c: 1458: (putch('-') );
"1458
[e ( _putch (1 -> -> 45 `ui `uc ]
[e :U 48 ]
"1488
}
[e :U 43 ]
[; ;doprnt.c: 1488: }
[; ;doprnt.c: 1491: prec = c;
"1491
[e = _prec -> _c `c ]
[; ;doprnt.c: 1493: while(prec--) {
"1493
[e $U 49  ]
[e :U 50 ]
{
[; ;doprnt.c: 1497: {
"1497
{
[; ;doprnt.c: 1508: c = (val / dpowers[prec]) % 10 + '0';
"1508
[e = _c -> + % / _val *U + &U _dpowers * -> -> _prec `uc `ux -> -> # *U &U _dpowers `ui `ux -> -> 10 `i `ui -> 48 `ui `uc ]
"1542
}
[; ;doprnt.c: 1542: }
[; ;doprnt.c: 1543: (putch(c) );
"1543
[e ( _putch (1 _c ]
"1544
}
[e :U 49 ]
"1493
[e $ != -> -- _prec -> -> 1 `i `c `i -> -> -> 0 `i `c `i 50  ]
[e :U 51 ]
"1552
}
[e :U 8 ]
"548
[e $ != -> = _c *U ++ _f * -> -> 1 `i `x -> -> # *U _f `i `x `i -> -> -> 0 `i `uc `i 9  ]
[e :U 10 ]
[; ;doprnt.c: 1544: }
[; ;doprnt.c: 1552: }
[; ;doprnt.c: 1554: alldone:
"1554
[e :U 25 ]
[; ;doprnt.c: 1559: return 0;
"1559
[e ) -> 0 `i ]
[e $UE 7  ]
[; ;doprnt.c: 1560: }
"1560
[e :UE 7 ]
}
